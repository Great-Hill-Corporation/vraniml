<html><head><title>vrRenderTraverser Documentation</title></head>
<body BACKGROUND="sumtextb.jpg" BGCOLOR="#FFFFFF"><h1>
<a name="topofdoc"><img src="logo.gif" WIDTH="75" HEIGHT="75">vrRenderTraverser</a></h1>
<dl>
<dd>
	The base class for traversers that render to a window.

</dl>
<hr><p></p>
<p><strong>[ 
<a href="../../Documentation/utility.htm">Utility</a> | <a href="../../Documentation/solids.htm">Solid</a> | <a href="../../Documentation/noderef.htm">VRML97</a> ]<br>[  
<a href="vrrendertraverser.htm#aag">Summary</a> | </a>
<a href="vrrendertraverser.htm#DESCRIPTION">Description</a> | 
<a href="vrrendertraverser.htm#NOTES">Notes</a> | 
<a href="vrrendertraverser.htm#EXAMPLE_CODE">Example Code</a> | 
<a href="vrrendertraverser.htm#MEMBERS">Members</a> | 
<a href="vrrendertraverser.htm#parents">Ancestors</a> | <a href="vrrendertraverser.htm#children">Descendants</a>  ]</strong><p>
<a name="aag"><hr><p></p></a><h2><i>Summary</i></h2>
class <spc> vrRenderTraverser : public <a href="vrTraverser.htm">vrTraverser</a><br>
<br>
 {
<br>
<table>
<tr><td align="left"><font size="+1"><i><b>public:</b></i></font>
</td></tr>
<tr><td align="right" valign="top">const <a href="vrMaterial.htm">vrMaterial</a> *</td><td><a href="vrRenderTraverser.htm#const_vrMaterial_*currMaterial$">currMaterial</a>;</td></tr>
<tr><td align="right" valign="top"><a href="../types.htm#SFBool">SFBool </a> </td><td><a href="vrRenderTraverser.htm#SFBool_m_isPicking$">m_isPicking</a>;</td></tr>
<tr><td align="right" valign="top"></td><td><a href="vrRenderTraverser.htm#vrRenderTraverser()_$">vrRenderTraverser</a>() ;</td></tr>
<tr><td align="right" valign="top"></td><td><a href="vrRenderTraverser.htm#vrRenderTraverser(vrBrowser_*b,_void_*h)$">vrRenderTraverser</a>(<a href="vrBrowser.htm">vrBrowser</a> *b, void *h);</td></tr>
<tr><td align="right" valign="top"></td><td>~<i><a href="vrRenderTraverser.htm#~vrRenderTraverser(void)$">vrRenderTraverser</a></i>(void);</td></tr>
<tr><td align="right" valign="top">void </td><td><i><a href="vrRenderTraverser.htm#void_Traverse(const_vrImageTexture_*node)$">Traverse</a></i>(const <a href="vrImageTexture.htm">vrImageTexture</a> *node);</td></tr>
<tr><td align="right" valign="top">void </td><td><i><a href="vrRenderTraverser.htm#void_Traverse(const_vrTextureTransform_*node)$">Traverse</a></i>(const <a href="vrTextureTransform.htm">vrTextureTransform</a> *node);</td></tr>
<tr><td align="right" valign="top">void </td><td><i><a href="vrRenderTraverser.htm#void_Traverse(const_vrAudioClip_*node)$">Traverse</a></i>(const <a href="vrAudioClip.htm">vrAudioClip</a> *node);</td></tr>
<tr><td align="right" valign="top">void </td><td><i><a href="vrRenderTraverser.htm#void_Traverse(const_vrScript_*node)$">Traverse</a></i>(const <a href="vrScript.htm">vrScript</a> *node);</td></tr>
<tr><td align="right" valign="top">void </td><td><i><a href="vrRenderTraverser.htm#void_Traverse(const_vrSound_*node)$">Traverse</a></i>(const <a href="vrSound.htm">vrSound</a> *node);</td></tr>
<tr><td align="right" valign="top">void </td><td><i><a href="vrRenderTraverser.htm#void_Traverse(const_vrAnchor_*node)$">Traverse</a></i>(const <a href="vrAnchor.htm">vrAnchor</a> *node);</td></tr>
<tr><td align="right" valign="top">void </td><td><i><a href="vrRenderTraverser.htm#void_Traverse(const_vrGroup_*node)$">Traverse</a></i>(const <a href="vrGroup.htm">vrGroup</a> *node);</td></tr>
<tr><td align="right" valign="top">void </td><td><i><a href="vrRenderTraverser.htm#void_Traverse(const_vrInline_*node)$">Traverse</a></i>(const <a href="vrInline.htm">vrInline</a> *node);</td></tr>
<tr><td align="right" valign="top">void </td><td><i><a href="vrRenderTraverser.htm#void_Traverse(const_vrLOD_*node)$">Traverse</a></i>(const <a href="vrLOD.htm">vrLOD</a> *node);</td></tr>
<tr><td align="right" valign="top">void </td><td><i><a href="vrRenderTraverser.htm#void_Traverse(const_vrSwitch_*node)$">Traverse</a></i>(const <a href="vrSwitch.htm">vrSwitch</a> *node);</td></tr>
<tr><td align="right" valign="top">void </td><td><i><a href="vrRenderTraverser.htm#void_Traverse(const_vrBrowser_*node)$">Traverse</a></i>(const <a href="vrBrowser.htm">vrBrowser</a> *node);</td></tr>
<tr><td align="right" valign="top">void </td><td><i><a href="vrRenderTraverser.htm#void_PreTraverse(void)$">PreTraverse</a></i>(void);</td></tr>
<tr><td align="right" valign="top">void </td><td><i><a href="vrRenderTraverser.htm#void_PostTraverse(void)$">PostTraverse</a></i>(void);</td></tr>
<tr><td align="right" valign="top">void </td><td><i><a href="vrRenderTraverser.htm#void_Traverse(const_vrSolid_*node)_$">Traverse</a></i>(const <a href="vrSolid.htm">vrSolid</a> *node) ;</td></tr>
<tr><td align="right" valign="top">void </td><td><i><a href="vrRenderTraverser.htm#void_Traverse(const_vrFace_*node)_$">Traverse</a></i>(const <a href="vrFace.htm">vrFace</a> *node) ;</td></tr>
<tr><td align="right" valign="top">void </td><td><i><a href="vrRenderTraverser.htm#void_DrawComplexFace(const_vrFace_*node)_$">DrawComplexFace</a></i>(const <a href="vrFace.htm">vrFace</a> *node) ;</td></tr>
<tr><td align="right" valign="top">void </td><td><i><a href="vrRenderTraverser.htm#void_DrawSimpleFace(const_vrFace_*node)_$">DrawSimpleFace</a></i>(const <a href="vrFace.htm">vrFace</a> *node) ;</td></tr>
<tr><td align="right" valign="top"><a href="SFVec2f.htm">SFVec2f</a> </td><td><a href="vrRenderTraverser.htm#SFVec2f_TransformTexCoord(const_SFVec2f&amp;_t)_const$">TransformTexCoord</a>(const <a href="SFVec2f.htm">SFVec2f</a>&amp; t) const;</td></tr>
<tr><td align="right" valign="top">void </td><td><i><a href="vrRenderTraverser.htm#void_Clear(void)$">Clear</a></i>(void);</td></tr>
<tr><td align="right" valign="top">void </td><td><i><a href="vrRenderTraverser.htm#void_Init(void)$">Init</a></i>(void);</td></tr>
<tr><td align="right" valign="top"></td><td><a href="vrRenderTraverser.htm#DECLARE_NODE(vrRenderTraverser)$">DECLARE_NODE</a>(vrRenderTraverser);</td></tr>
<tr><td align="left"><font size="+1"><i><b>protected:</b></i></font>
</td></tr>
<tr><td align="right" valign="top">void *</td><td><a href="vrRenderTraverser.htm#void_*m_hDC$">m_hDC</a>;</td></tr>
<tr><td align="right" valign="top"><a href="vrMatrix.htm">vrMatrix</a> </td><td><a href="vrRenderTraverser.htm#vrMatrix_m_TextureCoordTransform$">m_TextureCoordTransform</a>;</td></tr>
</table>
}; <p>
<a name="DESCRIPTION"><hr><p></p></a><h2><i>Description</i></h2>
	<ul>
	This class is the base class for traversers that render to the
	window (for example an OGL or D3D traverser).  This class handles
	nodes common to all rendering traversers.  This class stores a
	pointer to the device context into which to draw the scene graph.
	</ul>
<p>
<a name="NOTES"><hr><p></p></a><h2><i>Notes</i></h2>
	<ul>
	<li>Methods documented with 'does nothing' provide interfaces only.</li>
	</ul>
<p>
<a name="EXAMPLE_CODE"><hr><p></p></a><h2><i>Example Code</i></h2>
	<pre>
	// None.
	</pre>
<p>
<a name="MEMBERS"><hr><p></p></a><h2><i>Members</i></h2>
<a name="void_*m_hDC$"><ul><h3><li>void *m_hDC;</li></h3></a>
</ul>
</ul>	   <dd>The device context into which to render.
<p>
<dl><dl>
<dt><i>default</i><strong> hWnd-&gt;hDC</strong>
<p>
</dl></dl>
<a name="vrMatrix_m_TextureCoordTransform$"><ul><h3><li>vrMatrix m_TextureCoordTransform;</li></h3></a>
</ul>
</ul>	   <dd>The device context into which to render.
<p>
<dl><dl>
<dt><i>default</i><strong> hWnd-&gt;hDC</strong>
<p>
</dl></dl>
<a name="const_vrMaterial_*currMaterial$"><ul><h3><li>const vrMaterial *currMaterial;</li></h3></a>
</ul>
</ul>	   <dd>The most recently encountered <a href="vrMaterial.htm">vrMaterial</a> node used for default rendering of vrGeometry nodes.
<p>
<dl><dl>
<dt><i>default</i><strong> NULL</strong>
<p>
</dl></dl>
<a name="SFBool_m_isPicking$"><ul><h3><li>SFBool m_isPicking;</li></h3></a>
</ul>
</ul>	   <dd>TRUE if the current traversal if for purposes of picking the scene.
<p>
<dl><dl>
<dt><i>default</i><strong> FALSE</strong>
<p>
</dl></dl>
<a name="vrRenderTraverser()_$"><ul><h3><li>vrRenderTraverser() ;</li></h3></a>
</ul>
</ul>	   <dd>Constructor (don't use).
<p>
<a name="vrRenderTraverser(vrBrowser_*b,_void_*h)$"><ul><h3><li>vrRenderTraverser(vrBrowser *b, void *h);</li></h3></a>
</ul>
</ul>	   <dd>Constructor.
<p>
<dl><dl>
<dt><i>in</i><strong> b:</strong>
<dd>The browser to attach this traverser to.
<dt><i>in</i><strong> h:</strong>
<dd>A window handle.
<p>
</dl></dl>
<a name="~vrRenderTraverser(void)$"><ul><h3><li>~vrRenderTraverser(void);</li></h3></a>
</ul>
</ul>	   <dd>Destructor.
<p>
<a name="void_Traverse(const_vrImageTexture_*node)$"><ul><h3><li>void Traverse(const vrImageTexture *node);</li></h3></a>
</ul>
</ul>	   <dd>Traverse this node.
<p>
<a name="void_Traverse(const_vrTextureTransform_*node)$"><ul><h3><li>void Traverse(const vrTextureTransform *node);</li></h3></a>
</ul>
</ul>	   <dd>Traverse this node.
<p>
<a name="void_Traverse(const_vrAudioClip_*node)$"><ul><h3><li>void Traverse(const vrAudioClip *node);</li></h3></a>
</ul>
</ul>	   <dd>Traverse this node.
<p>
<a name="void_Traverse(const_vrScript_*node)$"><ul><h3><li>void Traverse(const vrScript *node);</li></h3></a>
</ul>
</ul>	   <dd>Traverse this node.
<p>
<a name="void_Traverse(const_vrSound_*node)$"><ul><h3><li>void Traverse(const vrSound *node);</li></h3></a>
</ul>
</ul>	   <dd>Traverse this node.
<p>
<a name="void_Traverse(const_vrAnchor_*node)$"><ul><h3><li>void Traverse(const vrAnchor *node);</li></h3></a>
</ul>
</ul>	   <dd>Traverse this node.
<p>
<a name="void_Traverse(const_vrGroup_*node)$"><ul><h3><li>void Traverse(const vrGroup *node);</li></h3></a>
</ul>
</ul>	   <dd>Traverse this node.
<p>
<a name="void_Traverse(const_vrInline_*node)$"><ul><h3><li>void Traverse(const vrInline *node);</li></h3></a>
</ul>
</ul>	   <dd>Traverse this node.
<p>
<a name="void_Traverse(const_vrLOD_*node)$"><ul><h3><li>void Traverse(const vrLOD *node);</li></h3></a>
</ul>
</ul>	   <dd>Traverse this node.
<p>
<a name="void_Traverse(const_vrSwitch_*node)$"><ul><h3><li>void Traverse(const vrSwitch *node);</li></h3></a>
</ul>
</ul>	   <dd>Traverse this node.
<p>
<a name="void_Traverse(const_vrBrowser_*node)$"><ul><h3><li>void Traverse(const vrBrowser *node);</li></h3></a>
</ul>
</ul>	   <dd>Traverse this node.
<p>
<a name="void_PreTraverse(void)$"><ul><h3><li>void PreTraverse(void);</li></h3></a>
</ul>
</ul>	   <dd>A chance to do something just prior to a traversal.
<p>
<a name="void_PostTraverse(void)$"><ul><h3><li>void PostTraverse(void);</li></h3></a>
</ul>
</ul>	   <dd>A chance to do something just after a traversal.
<p>
<a name="void_Traverse(const_vrSolid_*node)_$"><ul><h3><li>void Traverse(const vrSolid *node) ;</li></h3></a>
</ul>
</ul>	   <dd>Traverse a <a href="vrSolid.htm">vrSolid</a> (does nothing).
<p>
<a name="void_Traverse(const_vrFace_*node)_$"><ul><h3><li>void Traverse(const vrFace *node) ;</li></h3></a>
</ul>
</ul>	   <dd>Traverse a <a href="vrFace.htm">vrFace</a> (does nothing).
<p>
<a name="void_DrawComplexFace(const_vrFace_*node)_$"><ul><h3><li>void DrawComplexFace(const vrFace *node) ;</li></h3></a>
</ul>
</ul>	   <dd>Traverse a complex (with holes) <a href="vrFace.htm">vrFace</a> (does nothing).
<p>
<a name="void_DrawSimpleFace(const_vrFace_*node)_$"><ul><h3><li>void DrawSimpleFace(const vrFace *node) ;</li></h3></a>
</ul>
</ul>	   <dd>Traverse a simple (no holes) <a href="vrFace.htm">vrFace</a> (does nothing).
<p>
<a name="SFVec2f_TransformTexCoord(const_SFVec2f&amp;_t)_const$"><ul><h3><li>SFVec2f TransformTexCoord(const SFVec2f&amp; t) const;</li></h3></a>
</ul>
</ul>	   <dd>Modify the given texture coordinate by the current texture transform matrix.
<p>
<a name="void_Clear(void)$"><ul><h3><li>void Clear(void);</li></h3></a>
</ul>
</ul>	   <dd>Clear the traverser.
<p>
<a name="void_Init(void)$"><ul><h3><li>void Init(void);</li></h3></a>
</ul>
</ul>	   <dd>Initialize the traverser.
<p>
<a name="DECLARE_NODE(vrRenderTraverser)$"><ul><h3><li>DECLARE_NODE(vrRenderTraverser);</li></h3></a>
</ul>
</ul>	   <dd>Declare that this class may be runtime typed. [ <a href="../../Documentation/define.htm#DECLARE_NODE">DECLARE_NODE</a> ]
<p>
<a name="parents"><hr><p></p></a>
<h2><i>Ancestors</i></h2>
<ul>
Inheritance chain for vrRenderTraverser:<p>
<ul>
<li><a href="vrBaseNode.htm">vrBaseNode</a>
<li><a href="vrTraverser.htm">vrTraverser</a>
</ul>
</ul>
<a name="children"><hr><p></p></a>
<h2><i>Descendants</i></h2>
<ul>
<ul>
<li><a href="vrD3DTraverser.htm">vrD3DTraverser</a>
<li><a href="vrOGLTraverser.htm">vrOGLTraverser</a>
</ul>
</ul>
<hr><p></p>
Generated from source by the <i><a href="http://www.cs.umn.edu/~kotula/cocoon/cocoon.htm">Cocoon</a></i> utilities on Mon Feb 01 22:21:02 1999
.<p>
</body></html>
