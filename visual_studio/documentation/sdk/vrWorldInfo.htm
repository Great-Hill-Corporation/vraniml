<html><head><title>vrWorldInfo Documentation</title></head>
<body BACKGROUND="sumtextb.jpg" BGCOLOR="#FFFFFF"><h1>
<a name="topofdoc"><img src="logo.gif" WIDTH="75" HEIGHT="75">vrWorldInfo</a></h1>
<dl>
<dd>
	This class corresponds to the WorldInfo node in VRML.  
	<a href="../spec/part1/nodesRef.html#WorldInfo">Further information</a> 
	about this class is available in any VRML related documentation.

</dl>
<hr><p></p>
<p><strong>[ 
<a href="../../Documentation/utility.htm">Utility</a> | <a href="../../Documentation/solids.htm">Solid</a> | <a href="../../Documentation/noderef.htm">VRML97</a> ]<br>[  
<a href="vrworldinfo.htm#aag">Summary</a> | </a>
<a href="vrworldinfo.htm#DESCRIPTION">Description</a> | 
<a href="vrworldinfo.htm#NOTES">Notes</a> | 
<a href="vrworldinfo.htm#EXAMPLE_CODE">Example Code</a> | 
<a href="vrworldinfo.htm#MEMBERS">Members</a> | 
<a href="vrworldinfo.htm#parents">Ancestors</a> | <a href="vrworldinfo.htm#children">Descendants</a>  ]</strong><p>
<a name="aag"><hr><p></p></a><h2><i>Summary</i></h2>
class <spc> vrWorldInfo : public <a href="vrNode.htm">vrNode</a><br>
<br>
 {
<br>
<table>
<tr><td align="left"><font size="+1"><i><b>public:</b></i></font>
</td></tr>
<tr><td align="right" valign="top"></td><td><a href="vrWorldInfo.htm#vrWorldInfo(void)$">vrWorldInfo</a>(void);</td></tr>
<tr><td align="right" valign="top"></td><td><a href="vrWorldInfo.htm#vrWorldInfo(const_vrWorldInfo&amp;_v)$">vrWorldInfo</a>(const vrWorldInfo&amp; v);</td></tr>
<tr><td align="right" valign="top"></td><td>~<i><a href="vrWorldInfo.htm#~vrWorldInfo(void)$">vrWorldInfo</a></i>(void);</td></tr>
<tr><td align="right" valign="top">vrWorldInfo&amp; </td><td><a href="vrWorldInfo.htm#vrWorldInfo&amp;_operator$(const_vrWorldInfo&amp;_v)$">operator=</a>(const vrWorldInfo&amp; v);</td></tr>
<tr><td align="right" valign="top"><a href="../types.htm#SFNode">SFNode </a> </td><td><i><a href="vrWorldInfo.htm#SFNode_Clone(void)_const$">Clone</a></i>(void) const;</td></tr>
<tr><td align="right" valign="top">void </td><td><a href="vrWorldInfo.htm#void_AddInfo(const_SFString&amp;_info)$">AddInfo</a>(const <a href="SFString.htm">SFString</a>&amp; info);</td></tr>
<tr><td align="right" valign="top">void </td><td><a href="vrWorldInfo.htm#void_SetInfo(const_MFString&amp;_info)$">SetInfo</a>(const <a href="MFString.htm">MFString</a>&amp; info);</td></tr>
<tr><td align="right" valign="top">void </td><td><a href="vrWorldInfo.htm#void_SetTitle(const_SFString&amp;_title)$">SetTitle</a>(const <a href="SFString.htm">SFString</a>&amp; title);</td></tr>
<tr><td align="right" valign="top"><a href="../types.htm#SFInt32">SFInt32 </a> </td><td><a href="vrWorldInfo.htm#SFInt32_GetNInfos(void)_const$">GetNInfos</a>(void) const;</td></tr>
<tr><td align="right" valign="top"><a href="SFString.htm">SFString</a> </td><td><a href="vrWorldInfo.htm#SFString_GetInfo(SFInt32_n)_const$">GetInfo</a>(SFInt32 n) const;</td></tr>
<tr><td align="right" valign="top">const <a href="MFString.htm">MFString</a>&amp; </td><td><a href="vrWorldInfo.htm#const_MFString&amp;_GetInfoArray(void)_const$">GetInfoArray</a>(void) const;</td></tr>
<tr><td align="right" valign="top"><a href="SFString.htm">SFString</a> </td><td><a href="vrWorldInfo.htm#SFString_GetTitle(void)_const$">GetTitle</a>(void) const;</td></tr>
<tr><td align="right" valign="top">void </td><td><i><a href="vrWorldInfo.htm#void_Traverse(vrTraverser_*trav)_const$">Traverse</a></i>(<a href="vrTraverser.htm">vrTraverser</a> *trav) const;</td></tr>
<tr><td align="right" valign="top"><a href="../types.htm#SFBool">SFBool </a> </td><td><i><a href="vrWorldInfo.htm#SFBool_IsDefault(const_SFString&amp;_fieldName_,_vrField_*field_)_const$">IsDefault</a></i>(const <a href="SFString.htm">SFString</a>&amp; fieldName , <a href="vrField.htm">vrField</a> *field ) const;</td></tr>
<tr><td align="right" valign="top"></td><td><a href="vrWorldInfo.htm#DECLARE_NODE(vrWorldInfo)$">DECLARE_NODE</a>(vrWorldInfo);</td></tr>
<tr><td align="left"><font size="+1"><i><b>protected:</b></i></font>
</td></tr>
<tr><td align="right" valign="top"><a href="MFString.htm">MFString</a> </td><td><a href="vrWorldInfo.htm#MFString_m_Info$">m_Info</a>;</td></tr>
<tr><td align="right" valign="top"><a href="SFString.htm">SFString</a> </td><td><a href="vrWorldInfo.htm#SFString_m_Title$">m_Title</a>;</td></tr>
</table>
}; <p>
<a name="DESCRIPTION"><hr><p></p></a><h2><i>Description</i></h2>
	<ul>This node corresponds to the WorldInfo node as defined in the VRML97 
	specification.  Like all Node Classes this class is better described in the 
	<a href="../spec/index.html">VRML97 Specification</a>.  In particular, at this 
	<a href="../spec/part1/nodesRef.html#WorldInfo">link</a>.</ul>
<p>
<a name="NOTES"><hr><p></p></a><h2><i>Notes</i></h2>
	<ul>
	<li>All node classes share certain aspects which are described <a href="../nodespec.htm">here</a>.</li>
	</ul>
<p>
<a name="EXAMPLE_CODE"><hr><p></p></a><h2><i>Example Code</i></h2>
	<pre>
	// None.
	</pre>
<p>
<a name="MEMBERS"><hr><p></p></a><h2><i>Members</i></h2>
<a name="MFString_m_Info$"><ul><h3><li>MFString m_Info;</li></h3></a>
</ul>
</ul>	  <dd>Corresponds to the 'info' field.
<p>
<dl><dl>
<dt><i>default</i><strong> []</strong>
<p>
</dl></dl>
<a name="SFString_m_Title$"><ul><h3><li>SFString m_Title;</li></h3></a>
</ul>
</ul>	  <dd>Corresponds to the 'title' field.
<p>
<dl><dl>
<dt><i>default</i><strong> NULL</strong>
<p>
</dl></dl>
<a name="vrWorldInfo(void)$"><ul><h3><li>vrWorldInfo(void);</li></h3></a>
</ul>
</ul>	   <dd>Default constructor.
<p>
<a name="vrWorldInfo(const_vrWorldInfo&amp;_v)$"><ul><h3><li>vrWorldInfo(const vrWorldInfo&amp; v);</li></h3></a>
</ul>
</ul>	   <dd>Copy constructor.
<p>
<a name="~vrWorldInfo(void)$"><ul><h3><li>~vrWorldInfo(void);</li></h3></a>
</ul>
</ul>	   <dd>Destructor.
<p>
<a name="vrWorldInfo&amp;_operator$(const_vrWorldInfo&amp;_v)$"><ul><h3><li>vrWorldInfo&amp; operator=(const vrWorldInfo&amp; v);</li></h3></a>
</ul>
</ul>	   <dd>Equals operator.
<p>
<a name="SFNode_Clone(void)_const$"><ul><h3><li>SFNode Clone(void) const;</li></h3></a>
</ul>
</ul>	   <dd>Returns an exact copy of the given node.
<p>
<a name="void_AddInfo(const_SFString&amp;_info)$"><ul><h3><li>void AddInfo(const SFString&amp; info);</li></h3></a>
</ul>
</ul>	   <dd>Add an item to the m_Info array (grow if needed).
<p>
<dl><dl>
<dt><i>in</i><strong> info:</strong>
<dd>The value to add to the m_Info array.
<p>
</dl></dl>
<a name="void_SetInfo(const_MFString&amp;_info)$"><ul><h3><li>void SetInfo(const MFString&amp; info);</li></h3></a>
</ul>
</ul>	   <dd>Replace the values of the m_Info member (copies values).
<p>
<dl><dl>
<dt><i>in</i><strong> info:</strong>
<dd>The m_Info array.
<p>
</dl></dl>
<a name="void_SetTitle(const_SFString&amp;_title)$"><ul><h3><li>void SetTitle(const SFString&amp; title);</li></h3></a>
</ul>
</ul>	   <dd>Set the value of the m_Title member.
<p>
<dl><dl>
<dt><i>in</i><strong> title:</strong>
<dd>The title value.
<p>
</dl></dl>
<a name="SFInt32_GetNInfos(void)_const$"><ul><h3><li>SFInt32 GetNInfos(void) const;</li></h3></a>
</ul>
</ul>	   <dd>Return the number of values in the m_Info member.
<p>
<a name="SFString_GetInfo(SFInt32_n)_const$"><ul><h3><li>SFString GetInfo(SFInt32 n) const;</li></h3></a>
</ul>
</ul>	   <dd>Return the nth value in the m_Info member.
<p>
<dl><dl>
<dt><i>in</i><strong> n:</strong>
<dd>The index into the array.
<p>
</dl></dl>
<a name="const_MFString&amp;_GetInfoArray(void)_const$"><ul><h3><li>const MFString&amp; GetInfoArray(void) const;</li></h3></a>
</ul>
</ul>	   <dd>Return the m_Info member.
<p>
<a name="SFString_GetTitle(void)_const$"><ul><h3><li>SFString GetTitle(void) const;</li></h3></a>
</ul>
</ul>	   <dd>Return the value of the m_Title member.
<p>
<a name="void_Traverse(vrTraverser_*trav)_const$"><ul><h3><li>void Traverse(vrTraverser *trav) const;</li></h3></a>
</ul>
</ul>	   <dd>Respond to a traversal by an arbitrary traverser.  Note: Normally, nodes just call t-&gt;<a href="vrworldinfo.htm#void_Traverse(vrTraverser_*trav)_const$">Traverse</a>(this)
	   <dd>to have the traverser handle the traversal.  you may override this method in your derived class to
	   <dd>handle traversals of node types.
<p>
<dl><dl>
<dt><i>in</i><strong> trav:</strong>
<dd>The <a href="vrTraverser.htm">vrTraverser</a> requesting the traversal.
<p>
</dl></dl>
<a name="SFBool_IsDefault(const_SFString&amp;_fieldName_,_vrField_*field_)_const$"><ul><h3><li>SFBool IsDefault(const SFString&amp; fieldName , vrField *field ) const;</li></h3></a>
</ul>
</ul>	   <dd>Returns TRUE if the node (or a particular field) is in it's default state.
<p>
<dl><dl>
<dt><i>in</i><strong> fieldName:</strong>
<dd>The field to check for default value.  NULL implies check all fields of this node.
<dt><i>out</i><strong> field:</strong>
<dd>If non-NULL the value of the field will be returned in field.
<p>
</dl></dl>
<a name="DECLARE_NODE(vrWorldInfo)$"><ul><h3><li>DECLARE_NODE(vrWorldInfo);</li></h3></a>
</ul>
</ul>	   <dd>Declare that this node may be runtime typed and dynamically created. [ <a href="../../Documentation/define.htm#DECLARE_NODE">DECLARE_NODE</a> ]
<p>
<a name="parents"><hr><p></p></a>
<h2><i>Ancestors</i></h2>
<ul>
Inheritance chain for vrWorldInfo:<p>
<ul>
<li><a href="vrBaseNode.htm">vrBaseNode</a>
<li><a href="vrNode.htm">vrNode</a>
</ul>
</ul>
<a name="children"><hr><p></p></a>
<h2><i>Descendants</i></h2>
<ul>
No descendants.<p>
</ul>
<hr><p></p>
Generated from source by the <i><a href="http://www.cs.umn.edu/~kotula/cocoon/cocoon.htm">Cocoon</a></i> utilities on Mon Feb 01 22:20:57 1999
.<p>
</body></html>
