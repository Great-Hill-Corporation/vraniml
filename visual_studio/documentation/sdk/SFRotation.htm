<html><head><title>SFRotation Documentation</title></head>
<body BACKGROUND="sumtextb.jpg" BGCOLOR="#FFFFFF"><h1>
<a name="topofdoc"><img src="logo.gif" WIDTH="75" HEIGHT="75">SFRotation</a></h1>
<dl>
<dd>
	Represents a rotation as an axis and angle.

</dl>
<hr><p></p>
<p><strong>[ 
<a href="../../Documentation/utility.htm">Utility</a> | <a href="../../Documentation/solids.htm">Solid</a> | <a href="../../Documentation/noderef.htm">VRML97</a> ]<br>[  
<a href="sfrotation.htm#aag">Summary</a> | </a>
<a href="sfrotation.htm#DESCRIPTION">Description</a> | 
<a href="sfrotation.htm#NOTES">Notes</a> | 
<a href="sfrotation.htm#EXAMPLE_CODE">Example Code</a> | 
<a href="sfrotation.htm#MEMBERS">Members</a> | 
<a href="sfrotation.htm#parents">Ancestors</a> | <a href="sfrotation.htm#children">Descendants</a>  ]</strong><p>
<a name="aag"><hr><p></p></a><h2><i>Summary</i></h2>
class UL_Interface SFRotation : public <a href="SFVec3f.htm">SFVec3f</a><br>
<br>
 {
<br>
<table>
<tr><td align="left"><font size="+1"><i><b>public:</b></i></font>
</td></tr>
<tr><td align="right" valign="top"><a href="../types.htm#SFFloat">SFFloat </a> </td><td><a href="SFRotation.htm#SFFloat_w$">w</a>;</td></tr>
<tr><td align="right" valign="top"></td><td><a href="SFRotation.htm#SFRotation_(void)$">SFRotation</a> (void);</td></tr>
<tr><td align="right" valign="top"></td><td><a href="SFRotation.htm#SFRotation_(const_SFRotation&amp;_v)$">SFRotation</a> (const SFRotation&amp; v);</td></tr>
<tr><td align="right" valign="top"></td><td><a href="SFRotation.htm#SFRotation_(const_SFVec3f&amp;_axis,_SFFloat_radians)$">SFRotation</a> (const <a href="SFVec3f.htm">SFVec3f</a>&amp; axis, SFFloat radians);</td></tr>
<tr><td align="right" valign="top"></td><td><a href="SFRotation.htm#SFRotation_(SFFloat_x,_SFFloat_y,_SFFloat_z,_SFFloat_radians)$">SFRotation</a> (SFFloat x, SFFloat y, SFFloat z, SFFloat radians);</td></tr>
<tr><td align="right" valign="top">SFRotation&amp; </td><td><a href="SFRotation.htm#SFRotation&amp;_operator$_(const_SFRotation&amp;_v)$">operator=</a> (const SFRotation&amp; v);</td></tr>
<tr><td align="right" valign="top">void </td><td><a href="SFRotation.htm#void_Invert_(void)$">Invert</a> (void);</td></tr>
<tr><td align="right" valign="top">friend UL_Interface SFRotation </td><td><a href="SFRotation.htm#friend_UL_Interface_SFRotation_operator+_(const_SFRotation&amp;_r1,_const_SFRotation&amp;_r2)$">operator+</a> (const SFRotation&amp; r1, const SFRotation&amp; r2);</td></tr>
<tr><td align="right" valign="top">friend UL_Interface SFRotation </td><td><a href="SFRotation.htm#friend_UL_Interface_SFRotation_operator-_(const_SFRotation&amp;_r1,_const_SFRotation&amp;_r2)$">operator-</a> (const SFRotation&amp; r1, const SFRotation&amp; r2);</td></tr>
<tr><td align="right" valign="top">friend UL_Interface SFRotation </td><td><a href="SFRotation.htm#friend_UL_Interface_SFRotation_operator*_(const_SFRotation&amp;_r,_SFFloat_f)$">operator*</a> (const SFRotation&amp; r, SFFloat f);</td></tr>
<tr><td align="right" valign="top">friend UL_Interface SFBool </td><td><a href="SFRotation.htm#friend_UL_Interface_SFBool_operator$$_(const_SFRotation&amp;_r1,_const_SFRotation&amp;_r2)$">operator==</a> (const SFRotation&amp; r1, const SFRotation&amp; r2);</td></tr>
<tr><td align="right" valign="top">friend UL_Interface SFBool </td><td><a href="SFRotation.htm#friend_UL_Interface_SFBool_operator!$_(const_SFRotation&amp;_r1,_const_SFRotation&amp;_r2)$">operator!=</a> (const SFRotation&amp; r1, const SFRotation&amp; r2);</td></tr>
<tr><td align="left"><font size="+1"><i><b>protected:</b></i></font>
</td></tr>
</table>
}; <p>
<a name="DESCRIPTION"><hr><p></p></a><h2><i>Description</i></h2>
	<ul>
	Represents the SFRotation field as defined in VRML.
	</ul>
<p>
<a name="NOTES"><hr><p></p></a><h2><i>Notes</i></h2>
	<ul>
	<li>SFRotations are stored as an axis and a rotation (in radians)
	about the given axis. This is as per the VRML spec.</li>
	</ul>
<p>
<a name="EXAMPLE_CODE"><hr><p></p></a><h2><i>Example Code</i></h2>
	<pre>
	// None.
	</pre>
<p>
<a name="MEMBERS"><hr><p></p></a><h2><i>Members</i></h2>
<a name="SFFloat_w$"><ul><h3><li>SFFloat w;</li></h3></a>
</ul>
</ul>     <dd>The angle (in radians) of the rotation (axis is represented by x, y, z).
<dl><dl>
<dt><i>default:</i><strong> 0.0</strong>
<p>
</dl></dl>
<a name="SFRotation_(void)$"><ul><h3><li>SFRotation (void);</li></h3></a>
</ul>
</ul>     <dd>Default constructor.
<p>
<a name="SFRotation_(const_SFRotation&amp;_v)$"><ul><h3><li>SFRotation (const SFRotation&amp; v);</li></h3></a>
</ul>
</ul>     <dd>Copy constructor.
<p>
<a name="SFRotation_(const_SFVec3f&amp;_axis,_SFFloat_radians)$"><ul><h3><li>SFRotation (const SFVec3f&amp; axis, SFFloat radians);</li></h3></a>
</ul>
</ul>     <dd>Constructor.
<p>
<dl><dl>
<dt><i>in</i><strong> axis:</strong>
<dd>The axis about which to rotate.
<dt><i>in</i><strong> radians:</strong>
<dd>The angle of the rotation.
<p>
</dl></dl>
<a name="SFRotation_(SFFloat_x,_SFFloat_y,_SFFloat_z,_SFFloat_radians)$"><ul><h3><li>SFRotation (SFFloat x, SFFloat y, SFFloat z, SFFloat radians);</li></h3></a>
</ul>
</ul>     <dd>Constructor.
<p>
<dl><dl>
<dt><i>in</i><strong> x:</strong>
<dd>The x component of the axis about which to rotate.
<dt><i>in</i><strong> y:</strong>
<dd>The y component of the axis about which to rotate.
<dt><i>in</i><strong> z:</strong>
<dd>The z component of the axis about which to rotate.
<dt><i>in</i><strong> radians:</strong>
<dd>The angle of the rotation.
<p>
</dl></dl>
<a name="SFRotation&amp;_operator$_(const_SFRotation&amp;_v)$"><ul><h3><li>SFRotation&amp; operator= (const SFRotation&amp; v);</li></h3></a>
</ul>
</ul>     <dd>Equals operator.
<p>
<a name="void_Invert_(void)$"><ul><h3><li>void Invert (void);</li></h3></a>
</ul>
</ul>     <dd>Multiplies the angle component of the rotation by -1 inverting the rotation.
<p>
<a name="friend_UL_Interface_SFRotation_operator+_(const_SFRotation&amp;_r1,_const_SFRotation&amp;_r2)$"><ul><h3><li>friend UL_Interface SFRotation operator+ (const SFRotation&amp; r1, const SFRotation&amp; r2);</li></h3></a>
</ul>
</ul>     <dd>Adds two rotations.
<p>
<dl><dl>
<dt><i>in</i><strong> r1:</strong>
<dd>The first rotation.
<dt><i>in</i><strong> r2:</strong>
<dd>The second rotation.
<dt><i>known bug</i><strong> This</strong>
<dd>calculation should happen after conversion to Quarternions.
<p>
</dl></dl>
<a name="friend_UL_Interface_SFRotation_operator-_(const_SFRotation&amp;_r1,_const_SFRotation&amp;_r2)$"><ul><h3><li>friend UL_Interface SFRotation operator- (const SFRotation&amp; r1, const SFRotation&amp; r2);</li></h3></a>
</ul>
</ul>     <dd>Subtract two rotations.
<p>
<dl><dl>
<dt><i>in</i><strong> r1:</strong>
<dd>The first rotation.
<dt><i>in</i><strong> r2:</strong>
<dd>The second rotation.
<dt><i>known bug</i><strong> This</strong>
<dd>calculation should happen after conversion to Quarternions.
<p>
</dl></dl>
<a name="friend_UL_Interface_SFRotation_operator*_(const_SFRotation&amp;_r,_SFFloat_f)$"><ul><h3><li>friend UL_Interface SFRotation operator* (const SFRotation&amp; r, SFFloat f);</li></h3></a>
</ul>
</ul>     <dd>Multiply a rotation by a scalar.
<p>
<dl><dl>
<dt><i>in</i><strong> r1:</strong>
<dd>The first rotation.
<dt><i>in</i><strong> f:</strong>
<dd>A scalar
<p>
</dl></dl>
<a name="friend_UL_Interface_SFBool_operator$$_(const_SFRotation&amp;_r1,_const_SFRotation&amp;_r2)$"><ul><h3><li>friend UL_Interface SFBool operator== (const SFRotation&amp; r1, const SFRotation&amp; r2);</li></h3></a>
</ul>
</ul>     <dd>Returns TRUE if the two rotations are identical
<p>
<dl><dl>
<dt><i>in</i><strong> r1:</strong>
<dd>The first rotation.
<dt><i>in</i><strong> r2:</strong>
<dd>The second rotation.
<p>
</dl></dl>
<a name="friend_UL_Interface_SFBool_operator!$_(const_SFRotation&amp;_r1,_const_SFRotation&amp;_r2)$"><ul><h3><li>friend UL_Interface SFBool operator!= (const SFRotation&amp; r1, const SFRotation&amp; r2);</li></h3></a>
</ul>
</ul>     <dd>Returns TRUE if the two rotations are different
<p>
<dl><dl>
<dt><i>in</i><strong> r1:</strong>
<dd>The first rotation.
<dt><i>in</i><strong> r2:</strong>
<dd>The second rotation.
<p>
</dl></dl>
<a name="parents"><hr><p></p></a>
<h2><i>Ancestors</i></h2>
<ul>
Inheritance chain for SFRotation:<p>
<ul>
<li><a href="SFVec3f.htm">SFVec3f</a>
</ul>
</ul>
<a name="children"><hr><p></p></a>
<h2><i>Descendants</i></h2>
<ul>
No descendants.<p>
</ul>
<hr><p></p>
Generated from source by the <i><a href="http://www.cs.umn.edu/~kotula/cocoon/cocoon.htm">Cocoon</a></i> utilities on Mon Feb 01 22:21:02 1999
.<p>
</body></html>
