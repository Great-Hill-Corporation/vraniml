/* A lexical scanner generated by flex */


#define FLEX_SCANNER

#include <io.h>
#include <stdlib.h>
#include <stdio.h>


/* cfront 1.2 defines "c_plusplus" instead of "__cplusplus" */
#ifdef c_plusplus
#ifndef __cplusplus
#define __cplusplus
#endif
#endif


#ifdef __cplusplus

#include <stdlib.h>

/* Use prototypes in function declarations. */
#define YY_USE_PROTOS

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

#ifdef __STDC__

#define YY_USE_PROTOS
#define YY_USE_CONST

#endif	/* __STDC__ */
#endif	/* ! __cplusplus */


#ifdef __TURBOC__
#define YY_USE_CONST
#endif


#ifndef YY_USE_CONST
#ifndef const
#define const
#endif
#endif


#ifdef YY_USE_PROTOS
#define YY_PROTO(proto) proto
#else
#define YY_PROTO(proto) ()
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN yy_start = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.
 */
#define YY_START ((yy_start - 1) / 2)

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file".  Now included
 * only for backward compatibility with previous versions of flex.
 */
#define YY_NEW_FILE yyrestart( yyin )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#define YY_BUF_SIZE 16384

typedef struct yy_buffer_state *YY_BUFFER_STATE;

extern int yyleng;
extern FILE *yyin, *yyout;

#ifdef __cplusplus
extern "C" {
#endif
	extern int yywrap YY_PROTO(( void ));
#ifdef __cplusplus
	}
#endif

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

/* The funky do-while in the following #define is used to turn the definition
 * int a single C statement (which needs a semi-colon terminator).  This
 * avoids problems with code like:
 *
 * 	if ( condition_holds )
 *		yyless( 5 );
 *	else
 *		do_something_else();
 *
 * Prior to using the do-while the compiler would get upset at the
 * "else" because it interpreted the "if" statement as being all
 * done when it reached the ';' after the yyless() call.
 */

/* Return all but the first 'n' matched characters back to the input stream. */

#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		*yy_cp = yy_hold_char; \
		yy_c_buf_p = yy_cp = yy_bp + n - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, yytext_ptr )


struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	int yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;
#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2
	};

static YY_BUFFER_STATE yy_current_buffer = 0;

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 */
#define YY_CURRENT_BUFFER yy_current_buffer


/* yy_hold_char holds the character lost when yytext is formed. */
static char yy_hold_char;

static int yy_n_chars;		/* number of characters read into yy_ch_buf */


int yyleng;

/* Points to current character in buffer. */
static char *yy_c_buf_p = (char *) 0;
static int yy_init = 1;		/* whether we need to initialize */
static int yy_start = 0;	/* start state number */

/* Flag which is used to allow yywrap()'s to do buffer switches
 * instead of setting up a fresh yyin.  A bit of a hack ...
 */
static int yy_did_buffer_switch_on_eof;

static void yyunput YY_PROTO(( int c, char *buf_ptr ));
void yyrestart YY_PROTO(( FILE *input_file ));
void yy_switch_to_buffer YY_PROTO(( YY_BUFFER_STATE new_buffer ));
void yy_load_buffer_state YY_PROTO(( void ));
YY_BUFFER_STATE yy_create_buffer YY_PROTO(( FILE *file, int size ));
void yy_delete_buffer YY_PROTO(( YY_BUFFER_STATE b ));
void yy_init_buffer YY_PROTO(( YY_BUFFER_STATE b, FILE *file ));

static int yy_start_stack_ptr = 0;
static int yy_start_stack_depth = 0;
static int *yy_start_stack = 0;
static void yy_push_state YY_PROTO(( int new_state ));
static void yy_pop_state YY_PROTO(( void ));
static int yy_top_state YY_PROTO(( void ));

static void *yy_flex_alloc YY_PROTO(( unsigned int ));
static void *yy_flex_realloc YY_PROTO(( void *, unsigned int ));
static void yy_flex_free YY_PROTO(( void * ));

#define yy_new_buffer yy_create_buffer

#define INITIAL 0
#define PARSING_NODE 1
#define SEARCH_BOOL 2
#define SEARCH_INT32 3
#define SEARCH_FLOAT 4
#define SEARCH_TIME 5
#define SEARCH_STRING 6
#define SEARCH_VEC2 7
#define SEARCH_VEC3 8
#define SEARCH_COLOR 9
#define SEARCH_ROTATION 10
#define SEARCH_IMAGE 11
#define SEARCH_MINT32 12
#define SEARCH_MFLOAT 13
#define SEARCH_MSTRING 14
#define SEARCH_MVEC2 15
#define SEARCH_MVEC3 16
#define SEARCH_MCOLOR 17
#define SEARCH_MROTATION 18
#define PARSING_STRING 19
#define PARSING_MSTRING 20
#define PARSING_IMAGE 21
typedef unsigned char YY_CHAR;
typedef int yy_state_type;
FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
extern char *yytext;
#define yytext_ptr yytext

#ifndef yytext_ptr
static void yy_flex_strncpy YY_PROTO(( char *, const char *, int ));
#endif

#ifdef __cplusplus
static int yyinput YY_PROTO(( void ));
#else
static int input YY_PROTO(( void ));
#endif

static yy_state_type yy_get_previous_state YY_PROTO(( void ));
static yy_state_type yy_try_NUL_trans YY_PROTO(( yy_state_type current_state ));
static int yy_get_next_buffer YY_PROTO(( void ));
static void yy_fatal_error YY_PROTO(( const char msg[] ));

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	yytext_ptr = yy_bp; \
	yyleng = yy_cp - yy_bp; \
	yy_hold_char = *yy_cp; \
	*yy_cp = '\0'; \
	yy_c_buf_p = yy_cp;

#define YY_END_OF_BUFFER 52
static const short int yy_accept[1053] =
    {   0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   52,   50,   48,   49,   48,   15,
       48,   15,   15,   15,   15,   15,   15,   15,   15,   15,
       15,   50,   50,   50,   50,   22,   22,   50,   50,   23,
       50,   50,   24,   26,   25,   26,   26,   50,   50,   50,
       50,   50,   50,   50,   50,   50,   50,   50,   50,   50,
       50,   50,   50,   36,   36,   50,   18,   19,   50,   50,

       37,   40,   39,   40,   40,   50,   50,   50,   50,   50,
       50,   50,   50,   50,   50,   50,   50,   28,   28,   29,
       28,   28,   42,   42,   42,   43,   42,   42,   50,   31,
       31,   48,   49,   48,   49,   49,   48,   48,   48,   48,
       15,   15,   15,    8,   15,   15,   15,   15,    7,   15,
       15,   15,   15,    0,   16,    0,   22,   22,    0,   23,
       23,   23,    0,    0,   24,   24,   24,    0,   26,   26,
       26,   16,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,   36,   36,   17,    0,   37,   37,
       37,    0,   40,   38,   40,   40,   17,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   28,   28,   28,   28,   28,
       28,   27,   42,   42,   42,   42,   42,   42,   42,   42,
       42,   41,   31,   31,   49,   49,   49,   48,    5,   15,
       15,   15,   15,   15,    6,   15,   15,   15,    0,    0,
       22,    0,   23,    0,   24,    0,    0,   32,    0,    0,
        0,    0,    0,   32,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       30,   30,    0,    0,    0,    0,   30,   30,    0,   36,
        0,   37,    0,    0,   44,    0,    0,    0,    0,    0,
       44,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,   42,   42,   42,   31,
       48,   15,   10,   15,   15,   15,   15,   15,   15,    0,

       20,   32,   32,    0,   32,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,   30,   30,   44,   44,
        0,   44,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   48,   15,    2,   15,    9,   15,   15,
       13,   21,    0,   32,    0,    0,   32,    0,    0,   33,
        0,    0,    0,    0,    0,   33,    0,    0,    0,    0,

       33,    0,    0,    0,   33,    0,    0,    0,    0,    0,
       33,    0,    0,    0,    0,    0,   34,    0,    0,    0,
        0,    0,   34,    0,    0,    0,    0,   34,    0,    0,
        0,   34,    0,    0,    0,    0,    0,   34,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,   30,   30,
       30,   30,    0,   44,    0,    0,   44,    0,    0,   45,
        0,    0,    0,    0,    0,   45,    0,    0,    0,    0,
       45,    0,    0,    0,   45,    0,    0,    0,    0,    0,

       45,    0,    0,    0,    0,    0,   46,    0,    0,    0,
        0,    0,   46,    0,    0,    0,    0,   46,    0,    0,
        0,   46,    0,    0,    0,    0,    0,   46,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,   48,   15,
       15,   15,   15,   15,   33,   33,    0,   33,    0,   33,
       33,    0,   33,   33,    0,   33,    0,   34,   34,    0,
       34,    0,   34,   34,    0,   34,   34,    0,   34,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   45,   45,    0,   45,    0,   45,
       45,    0,   45,   45,    0,   45,    0,   46,   46,    0,
       46,    0,   46,   46,    0,   46,   46,    0,   46,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   48,   15,   15,   11,   15,   15,
        0,   33,    0,    0,   33,    0,    0,   33,    0,   33,
        0,    0,   33,    0,   34,    0,    0,   34,    0,    0,
       34,    0,   34,    0,    0,   34,    0,    0,   35,    0,

        0,    0,    0,    0,   35,    0,    0,    0,    0,   35,
        0,    0,   35,    0,    0,    0,    0,    0,   35,    0,
        0,    0,    0,    0,   35,    0,    0,    0,   35,    0,
        0,    0,    0,    0,   35,    0,    0,    0,    0,    0,
        0,    0,   35,    0,    0,    0,    0,   45,    0,    0,
       45,    0,    0,   45,    0,   45,    0,    0,   45,    0,
       46,    0,    0,   46,    0,    0,   46,    0,   46,    0,
        0,   46,    0,    0,   47,    0,    0,    0,    0,    0,
       47,    0,    0,    0,    0,   47,    0,    0,   47,    0,
        0,    0,    0,    0,   47,    0,    0,    0,    0,    0,

       47,    0,    0,    0,   47,    0,    0,    0,    0,    0,
       47,    0,    0,    0,    0,    0,    0,    0,   47,    0,
        0,    0,   48,   15,   15,   12,   15,   35,   35,    0,
       35,    0,   35,   35,    0,   35,   35,    0,   35,    0,
       35,   35,    0,   35,   35,    0,   35,    0,   35,   35,
        0,   47,   47,    0,   47,    0,   47,   47,    0,   47,
       47,    0,   47,    0,   47,   47,    0,   47,   47,    0,
       47,    0,   47,   47,    0,   48,   15,   15,   15,    0,
       35,    0,    0,   35,    0,    0,   35,    0,   35,    0,
        0,   35,    0,    0,   35,    0,   35,    0,    0,   35,

        0,    0,   35,    0,   47,    0,    0,   47,    0,    0,
       47,    0,   47,    0,    0,   47,    0,    0,   47,    0,
       47,    0,    0,   47,    0,    0,   47,   48,   15,   15,
       15,   48,    3,   15,   15,   48,   15,   14,   48,    4,
       48,   48,   48,   48,    1,   48,    1,    1,    1,    1,
        1,    0
    } ;

static const int yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    2,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    4,    5,    6,    7,    5,    5,    5,    1,    5,
        5,    5,    8,    2,    9,   10,    5,   11,   12,   13,
       12,   12,   12,   12,   12,   14,   12,    5,    5,    5,
        5,    5,    5,    5,   15,   16,   16,   17,   18,   19,
        5,    5,   20,    5,    5,   21,   22,   23,   24,   25,
        5,   26,   27,   28,   29,   30,    5,   31,    5,    5,
       32,   33,   34,    5,    5,    5,   16,   16,   16,   35,

       36,   37,    5,    5,   38,    5,    5,   39,    5,   40,
       41,   42,    5,    5,   43,   44,   45,   46,    5,   47,
        5,    5,    1,    5,    1,    5,    1,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,

        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5
    } ;

static const int yy_meta[48] =
    {   0,
        1,    2,    3,    2,    4,    5,    6,    4,    4,    1,
        7,    7,    7,    7,    7,    7,    7,    7,    7,    4,
        4,    4,    4,    4,    4,    4,    4,    4,    4,    4,
        4,    8,    1,    8,    7,    7,    7,    4,    4,    4,
        4,    4,    4,    4,    4,    4,    4
    } ;

static const short int yy_base[1207] =
    {   0,
        0,    6,   13,    0,   59,   65,   92,    0,  104,  110,
      116,  122,  135,  141,  140,  153,  159,  165,  171,  177,
      183,  189,   62,   77,  195,  221,  247,  273,  306,  339,
      365,  391,  417,  443,  469,  495,  521,  547,  210,  216,
      244,  262,  305,  319,  877, 8426,  235,  224,  268,    0,
      287,  858,  840,  825,  822,  819,   46,  820,  815,   34,
      794,  792,  779,  775,   96,  289,  145,  337,  310,  344,
      353,  370,  376,    0, 8426,  389,  773,  396,  402,  580,
      407,  421,  615,  428,  432,  650,  448,  453,  685,  457,
      720,   51,  473,  479,  483,  772, 8426, 8426,  506,  500,

      526,    0,  790,  543,  769,  511,  552,  766,  558,  588,
      801,  593,  597,  836,  624,  601,  871,    0,  637, 8426,
      643,  779,    0,  663,  667, 8426,  673,  769,  670,  694,
      698,  711,  733,  740,  746,  750,  756,  779,  785,  791,
        0,  755,  743,    0,  745,  741,  735,  732,    0,  737,
      713,  703,  703,  715, 8426,  700,  809,    0,  813,  850,
      817,  844,  879,  883,  888,  897,  905,  914,    0,  863,
      928,    0,  925,    0,  930,  943,  956,   47,  963,  967,
        0,  972,  985,  998,  218, 1005, 1009,    0, 1014, 1027,
     1040,  226, 1047, 1051,    0, 1056, 1069, 1082,  227, 1089,

        0, 1102, 1115, 1128, 1125,    0, 8426, 1129, 1134, 1142,
     1150, 1160,    0, 8426, 1173, 1179,    0, 1176,    0, 1181,
     1212, 1225,  256, 1188, 1229, 1242, 1251, 1277, 1290,  260,
     1258, 1262, 1303, 1312, 1338, 1351,  270, 1319, 1323, 1364,
     1373, 1399, 1412,  279, 1380,    0, 1425, 1431, 1437, 1443,
     1449, 8426,    0, 1455, 1202, 1461, 1467, 1473, 1479, 1485,
     1491, 8426, 1384,    0, 1497, 1498, 1504, 1510,    0,  708,
      696,  688,  680,  672,    0,  651,  644,  639,  632,  640,
        0, 1507, 1511, 1515, 1522, 1527, 1531, 1536, 1571, 1584,
        0,    0,    0,  317, 1544, 1597, 1549, 1553, 1610, 1645,

     1658,    0,    0,    0, 1627, 1557, 1671, 1628, 1675, 1688,
     1723, 1736,    0,    0,    0, 1705, 1705, 1749, 1754, 1758,
     1771, 1806, 1819,    0,    0,    0, 1788, 1788, 1832, 1836,
     1840, 1844, 1886, 1899, 1912, 1925, 1938,  174, 1857,    0,
     1854, 1861, 1866, 1870, 1943, 1984, 1997,    0,    0,    0,
      334, 1951, 2010, 1960, 1964, 2023, 2058, 2071,    0,    0,
        0, 2040, 1969, 2084, 2041, 2088, 2101, 2136, 2149,    0,
        0,    0, 2118, 2118, 2162, 2167, 2171, 2184, 2219, 2232,
        0,    0,    0, 2201, 2201, 2245, 2258, 2264, 2270,    0,
     2276,  630,    0,  619,  611,  613,  579,  578,  585,  579,

     8426, 2273, 2281, 2290,    0, 2299, 2304, 2317, 2330,  293,
     2337, 2350, 2363, 2376, 2389, 2386, 2391, 2404, 2417,  560,
     2424, 2437, 2450, 2463, 2476, 2489, 2502, 2537, 2550,  606,
     2510, 2563, 2576, 2589, 2602, 2615,    0, 2628, 2519, 2514,
     2640, 2664, 2677, 2690, 2725, 2738,  612, 2647, 2751, 2764,
     2777, 2790, 2803, 2816, 2851, 2864,  637, 2698, 2877, 2890,
     2903, 2916, 2929, 2942, 2977, 2990,  654, 2705, 3003, 3016,
     3029, 3042, 3055, 2718,  572,    0,  550,    0,  256,  540,
        0, 8426, 2824, 2828, 3068, 3081,  683, 2833, 2837, 2959,
     3094, 3107,    0,    0,    0,  684, 2950, 3120, 3133, 3146,

     3159, 3194, 3168, 2954, 3207, 3242,    0,    0,    0,    0,
      720, 3172, 3176, 3221, 3216, 3180, 3248, 3283, 3296,    0,
        0,    0,  754, 3256, 3309, 3322, 3335, 3348, 3383, 3261,
     3265, 3396, 3431,    0,    0,    0,    0,  800, 3269, 3356,
     3365, 3405, 3360, 3444, 3479, 3492,    0,    0,    0, 3461,
     3409, 3505, 3518, 3531, 3544, 3579, 3414, 3461, 3592, 3627,
        0,    0,    0,    0, 3561, 3561, 3600, 3640,    0, 3676,
      193,  441, 3604, 3608, 3722, 3735,  823, 3613, 3648, 3740,
     3775, 3788,    0,    0,    0, 1089, 3652, 3801, 3814, 3827,
     3840, 3875, 3657, 3661, 3888, 3923,    0,    0,    0,    0,

     1148, 3748, 3752, 3757, 3849, 3853, 3902, 3937, 3950,    0,
        0,    0, 1241, 3857, 3963, 3976, 3989, 4002, 4037, 3897,
     3861, 4050, 4085,    0,    0,    0,    0, 1302, 4010, 4014,
     4019, 4059, 4063, 4098, 4133, 4146,    0,    0,    0, 4115,
     4067, 4159, 4172, 4185, 4198, 4233, 4116, 4071, 4246, 4281,
        0,    0,    0,    0, 4215, 4215, 4254, 4294, 3234,  529,
      530,  488,  457,  465, 4263, 4258, 4302, 4329, 4342, 4355,
     4390, 4403, 4416,  710, 4309, 4451, 4464, 4372, 4313, 4363,
     4477, 4490, 4503, 4538, 4551, 4564,  773, 4424, 4599, 4612,
     4625, 4660, 4673,  798, 4431, 4686, 4699, 4712, 4725, 4738,

     4751, 4786, 4799, 4812, 4437, 4825, 4838, 4873,  885, 4511,
     4886, 4899, 4912, 4925, 4520, 4367, 4572, 4938, 4951, 4964,
     4999, 5012, 5025,  955, 4579, 5060, 5073, 4642, 4515, 4633,
     5086, 5099, 5112, 5147, 5160, 5173,  997, 4759, 5208, 5221,
     5234, 5269, 5282, 1039, 4766, 5295, 5308, 5321, 5334, 5347,
     5360, 5395, 5408, 5421, 4585, 5434, 5447, 5482, 1072, 4846,
     5495, 5508, 5521, 5534, 3915,  450,  433,    0,  392,  405,
     4637, 4770, 5547, 5560, 1363, 5573, 5586, 4981, 4850, 5599,
     5612, 5625, 1460, 4854, 4858, 5638, 5651, 1597, 5664, 5677,
     5042, 4981, 5690, 5703, 5716, 1608, 5043, 5120, 5129, 5729,

     5742,    0,    0,    0, 1617, 5124, 5755, 5768, 5781, 5794,
     5182, 5186, 5829, 5864, 5877,    0,    0,    0, 1686, 5190,
     5194, 5251, 5890, 5903, 5916, 5951, 5243, 5368, 5964, 5999,
        0,    0,    0,    0, 1693, 5372, 5376, 5464, 5380, 6012,
     6025, 6038, 6051, 5455, 5459, 5808, 5802, 5837, 6086, 6099,
     1695, 6112, 6125, 5933, 5841, 6138, 6151, 6164, 1769, 5845,
     5849, 6177, 6190, 1776, 6203, 6216, 5981, 5933, 6229, 6242,
     6255, 1778, 5982, 6059, 6068, 6268, 6281,    0,    0,    0,
     1886, 6063, 6294, 6307, 6320, 6333, 6342, 6346, 6368, 6403,
     6416,    0,    0,    0, 1899, 6350, 6354, 6385, 6429, 6442,

     6455, 6490, 6377, 6463, 6503, 6538,    0,    0,    0,    0,
     1948, 6467, 6471, 6517, 6475, 6552, 6565, 6578, 6591, 6511,
     6599, 6604, 6621,  398,  373,    0,  334, 6621, 6630, 6637,
     6656, 6669, 6682, 6717, 6730, 6743, 1115, 6690, 6778, 6791,
     6804, 6839, 6852, 6865, 1131, 6697, 6900, 6913, 6926, 6961,
     6974, 6760, 6641, 6751,    0, 6812, 6702, 5821, 6819, 6756,
     1194, 6873,    0, 6880, 6824, 6530, 6934, 6885, 1232, 6941,
        0, 6981, 6946, 6994, 6991, 7004,  309,  308,  268, 7005,
     7009,    3,  202, 2010,  352,  360, 7014, 7022, 7026,  439,
      465, 2030,  490,  534, 7031, 7040, 7044,  543,  565, 2108,

      577,  580, 7050, 7058, 7062, 7066, 7070, 7077, 7085, 7089,
     7094, 7103, 7107, 7111, 7115, 7121, 7129, 7133, 7138, 7147,
     7151, 7155, 7159, 7165, 7173, 7177, 7182, 7195,  275,  249,
      213, 7201,    0,  197,  125, 7207,  122,    0, 7213,    0,
     7219, 7225, 7232, 7238, 7245, 7251, 7255, 7259, 7263, 7267,
     7271, 8426, 7278, 7286, 7294, 7302, 7310, 7318, 7323, 7330,
     7338, 7346, 7353, 7361, 7369, 7377, 7385, 7393,  133, 7401,
     7409, 7417, 7425, 7433, 7440,  104, 7447, 7455, 7463, 7471,
     7479, 7487, 7495, 7503, 7511,   95, 7519, 7527, 7532,   93,
     7539, 7547, 7555, 7563, 7571, 7578,   90, 7585, 7593, 7601,

     7609, 7617, 7625, 7633, 7641, 7649, 7657, 7665, 7673,   85,
     7681, 7689, 7697, 7705, 7713, 7721, 7729, 7737, 7745, 7753,
     7761, 7769, 7774, 7781, 7789, 7797, 7805, 7813, 7821, 7829,
     7837, 7845, 7853,   70, 7861, 7869, 7877, 7885, 7893, 7901,
     7909, 7917, 7925, 7933, 7941, 7946, 7953, 7961, 7969, 7977,
     7985, 7993, 8001, 8009, 8017, 8025, 8033, 8041, 8049, 8057,
     8065, 8073, 8081, 8089, 8097, 8105, 8113, 8121, 8129, 8137,
     8145, 8150, 8157, 8165, 8173, 8181, 8189, 8197, 8205, 8213,
     8221, 8229, 8237, 8245, 8253, 8261, 8269, 8277, 8285, 8293,
     8301, 8309, 8317, 8325, 8333, 8341, 8349, 8354, 8361, 8369,

     8377, 8385, 8393, 8401, 8409, 8417
    } ;

static const short int yy_def[1207] =
    {   0,
     1053, 1053, 1052,    3, 1053, 1053, 1053,    7,    7,    7,
        7,    7, 1054, 1054,    7,    7,    7,    7,    7,    7,
        7,    7,    7,    7,    7,    7,    7,    7, 1055, 1055,
        7,    7,    7,    7,    7,    7,    7,    7, 1056, 1056,
     1057, 1057,    7,    7, 1052, 1052, 1052, 1052, 1058, 1059,
     1058, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1060, 1052, 1061, 1060, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052,   91, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,

     1052, 1062, 1052, 1063, 1062, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1064, 1064, 1052,
     1065, 1064, 1066, 1066, 1066, 1052, 1067, 1066, 1052, 1052,
     1052, 1052, 1052, 1058, 1052, 1068, 1058, 1058, 1058, 1058,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1052, 1052, 1052, 1052, 1069, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1060, 1061,
     1061, 1060, 1052,   80,   80, 1052, 1070,  175, 1052, 1052,
       83,   83, 1052, 1071,  182, 1052, 1052,   86,   86, 1052,
     1072,  189, 1052, 1052,   89,   89, 1052, 1073,  196, 1052,

       92, 1052, 1074, 1075, 1052, 1076, 1052, 1052, 1052, 1052,
     1052, 1052, 1062, 1052, 1063, 1063, 1062, 1052,  108,  108,
     1052, 1077,  220, 1052, 1052, 1052,  226, 1052, 1078,  227,
     1052, 1052, 1052,  233, 1052, 1079,  234, 1052, 1052, 1052,
      240, 1052, 1080,  241, 1052, 1081, 1081, 1082, 1082, 1082,
     1082, 1052, 1083, 1083, 1083, 1084, 1083, 1085, 1084, 1084,
     1084, 1052, 1052, 1086, 1087, 1087, 1087, 1088, 1089, 1089,
     1089, 1089, 1089, 1089, 1089, 1089, 1089, 1089, 1052, 1052,
     1090, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1091, 1091,
      290,  290,  290,  290, 1052, 1052, 1052, 1052, 1052, 1092,

     1092,  301,  301,  301,  301, 1052, 1052, 1052, 1052, 1052,
     1093, 1093,  312,  312,  312,  312, 1052, 1052, 1052, 1052,
     1052, 1094, 1094,  323,  323,  323,  323, 1052, 1052, 1052,
     1052, 1052, 1095, 1095, 1095, 1095, 1095,  337, 1096, 1097,
     1052, 1052, 1052, 1052, 1052, 1098, 1098,  347,  347,  347,
      347, 1052, 1052, 1052, 1052, 1052, 1099, 1099,  358,  358,
      358,  358, 1052, 1052, 1052, 1052, 1052, 1100, 1100,  369,
      369,  369,  369, 1052, 1052, 1052, 1052, 1052, 1101, 1101,
      380,  380,  380,  380, 1052, 1052, 1085, 1085, 1085, 1086,
     1088, 1089, 1089, 1089, 1089, 1089, 1089, 1089, 1089, 1052,

     1052, 1052, 1052, 1052,  290,  290,  299, 1052, 1102,  407,
     1052,  301, 1052, 1103,  301,  301,  310, 1052, 1104,  417,
     1052, 1105, 1052, 1106, 1105,  425, 1052, 1052, 1107,  427,
     1052, 1108, 1052, 1109, 1108,  435, 1110, 1111, 1052, 1052,
     1052, 1112, 1112, 1052, 1052, 1113,  444, 1052, 1114, 1052,
     1115, 1114,  452, 1052, 1052, 1116,  454, 1052, 1117, 1052,
     1118, 1117,  462, 1052, 1052, 1119,  464, 1052, 1120, 1052,
     1121, 1120,  472, 1122, 1123, 1123, 1123, 1123, 1123, 1123,
     1123, 1052, 1052, 1052, 1124, 1124,  486, 1052, 1052, 1052,
     1125, 1125,  492,  492,  492,  492, 1052, 1052, 1126, 1126,

      500, 1127, 1052, 1052, 1052, 1127,  506,  506,  506,  506,
      506,  500,  500,  501, 1052, 1052, 1052, 1128, 1128,  519,
      519,  519,  519, 1052, 1052, 1129, 1129,  527, 1130, 1052,
     1052, 1052, 1130,  533,  533,  533,  533,  533,  527,  527,
      528, 1052, 1052, 1052, 1131, 1131,  546,  546,  546,  546,
     1052, 1052, 1132, 1132,  554, 1133, 1052, 1052, 1052, 1133,
      560,  560,  560,  560,  560,  554,  554,  554, 1134, 1052,
      570,  570, 1052, 1052, 1135, 1135,  576, 1052, 1052, 1052,
     1136, 1136,  582,  582,  582,  582, 1052, 1052, 1137, 1137,
      590, 1138, 1052, 1052, 1052, 1138,  596,  596,  596,  596,

      596,  590,  590,  591, 1052, 1052, 1052, 1139, 1139,  609,
      609,  609,  609, 1052, 1052, 1140, 1140,  617, 1141, 1052,
     1052, 1052, 1141,  623,  623,  623,  623,  623,  617,  617,
      618, 1052, 1052, 1052, 1142, 1142,  636,  636,  636,  636,
     1052, 1052, 1143, 1143,  644, 1144, 1052, 1052, 1052, 1144,
      650,  650,  650,  650,  650,  644,  644,  644, 1145, 1146,
     1146, 1146, 1146, 1146, 1052, 1052, 1052, 1147, 1147, 1148,
     1148,  671, 1052,  673, 1052, 1149, 1149, 1052, 1052, 1052,
     1150, 1150, 1151, 1151,  684, 1052,  686, 1052, 1152, 1152,
     1052, 1052, 1153,  691, 1052, 1154, 1052, 1155, 1154,  699,

     1156, 1156, 1052, 1157,  702,  702, 1052, 1155,  707, 1052,
     1158, 1157, 1158,  713, 1052, 1052, 1052, 1159, 1159, 1160,
     1160,  721, 1052,  723, 1052, 1161, 1161, 1052, 1052, 1052,
     1162, 1162, 1163, 1163,  734, 1052,  736, 1052, 1164, 1164,
     1052, 1052, 1165,  741, 1052, 1166, 1052, 1167, 1166,  749,
     1168, 1168, 1052, 1169,  752,  752, 1052, 1167,  757, 1052,
     1170, 1169, 1170,  763, 1171, 1172, 1172, 1172, 1172, 1172,
     1052, 1052, 1173, 1173,  774, 1174, 1174,  777, 1052, 1052,
     1175, 1175,  782, 1052, 1052, 1176, 1176,  787, 1177, 1177,
      790, 1052, 1052, 1178, 1178,  795, 1052, 1052, 1052, 1179,

     1179,  801,  801,  801,  801, 1052, 1052, 1180, 1180,  809,
     1052, 1052, 1052, 1181, 1181,  815,  815,  815,  815,  809,
      809,  810, 1182, 1182,  824, 1183, 1052, 1052, 1052, 1183,
      830,  830,  830,  830,  830,  824,  824,  825, 1052, 1052,
     1184, 1184,  842,  842,  842,  843, 1052, 1052, 1185, 1185,
      850, 1186, 1186,  853, 1052, 1052, 1187, 1187,  858, 1052,
     1052, 1188, 1188,  863, 1189, 1189,  866, 1052, 1052, 1190,
     1190,  871, 1052, 1052, 1052, 1191, 1191,  877,  877,  877,
      877, 1052, 1052, 1192, 1192,  885, 1052, 1052, 1052, 1193,
     1193,  891,  891,  891,  891,  885,  885,  886, 1194, 1194,

      900, 1195, 1052, 1052, 1052, 1195,  906,  906,  906,  906,
      906,  900,  900,  901, 1052, 1052, 1196, 1196,  918,  918,
      918,  919, 1197, 1198, 1198, 1198, 1198, 1052, 1052, 1052,
     1199, 1199, 1200, 1200,  934, 1052,  936, 1052, 1201, 1201,
     1202, 1202,  942, 1052,  944, 1052, 1203, 1203, 1204, 1204,
      950, 1052, 1052, 1052,  877,  877,  886,  885,  885,  889,
      960, 1052,  891,  891,  901,  900,  900,  905,  968, 1052,
      906,  906,  919,  918,  918, 1197, 1198, 1198, 1198, 1052,
     1052,  932,  932,  932,  935,  935,  934, 1052,  937,  940,
      940,  940,  943,  943,  942, 1052,  945,  948,  948,  948,

      951,  951,  950, 1052, 1052,  877,  877,  877,  885,  885,
      886, 1052,  961,  891,  891,  891,  900,  900,  901, 1052,
      969,  906,  906,  906,  918,  918,  919, 1197, 1198, 1198,
     1198, 1197, 1198, 1198, 1198, 1197, 1198, 1198, 1197, 1198,
     1197, 1205, 1205, 1205, 1052, 1205, 1052, 1206, 1206, 1206,
     1206,    0, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,

     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,

     1052, 1052, 1052, 1052, 1052, 1052
    } ;

static const short int yy_nxt[8474] =
    {   0,
     1052,   47,   48,   47, 1052, 1052,   49,   47,   48,   47,
      800,  803,   49,   46,   47,   48,   47,   50,   46,   51,
       46,   46,   46,   46,   46,   46,   46,   50,   50,   52,
       53,   50,   54,   50,   50,   55,   50,   56,   57,   50,
       58,   59,   50,   50,   46,   46,   46,   50,   60,   61,
       50,   50,   50,   50,   50,   50,   50,   50,   50,   50,
       47,   48,   47,  147, 1052,   51,   47,   48,   47,  148,
       90,   51,   91,   92,   92,   92,  569,   62,   63,  151,
      152, 1052, 1052,   62,   63,   90,   64,   91,   92,   92,
       92,  569,   64,   47,   48,   47,  340, 1052,   51,  281,

       65,  390,   66,   67,   67,   67,  157,  157,  157,  157,
      340,   63,   68,   69,   70,   70,   70,   70,   68,   69,
       70,   70,   70,   70,   71,   72,   73,   73,   73,   73,
       71,   72,   73,   73,   73,   73,   47,   48,   47,  281,
       75,   76,   47,   48,   47, 1040,   75,   76,   78,   79,
       80,   80,   80,   80,   77,  157,  157,  157,  157, 1038,
       77,   78,   79,   80,   80,   80,   80,   81,   82,   83,
       83,   83,   83,   81,   82,   83,   83,   83,   83,   84,
       85,   86,   86,   86,   86,   84,   85,   86,   86,   86,
       86,   87,   88,   89,   89,   89,   89,   87,   88,   89,

       89,   89,   89,   93,  333,   94,   95,   95,   95,  800,
      803,  119,   48,  119,   96,  120,  121,  119,   48,  119,
      333,  120,  121,  333, 1037,  135,   97,  135,   98,   93,
      136,   94,   95,   95,   95, 1052,  132,  133,  132,  333,
       96,  134,  122, 1052, 1052,  124,  125,  124,  122,  126,
      127, 1035,   97, 1052,   98,   99,  100,  101,  101,  101,
      101, 1052, 1052,  124,  125,  124,   96,  126,  127,  138,
      133,  138, 1034, 1052,  139,  662,  128, 1052,   97,  663,
       98,   99,  100,  101,  101,  101,  101, 1052,  138,  133,
      138, 1052,   96,  139,  128, 1052, 1052,  140, 1033,  157,

      157,  157,  157, 1031,   97, 1052,   98,   47,   48,   47,
     1052,  103,  104,  129, 1052,  130,  131,  131,  131,  158,
      161,  161,  161,  161,   46,  105,  405,  129, 1052,  130,
      131,  131,  131, 1030,  406,  158, 1029,   97,   46,   98,
       47,   48,   47,  442,  103,  104,  159,  160,  160,  160,
      160,  443,  406,  162,  160,  160,  160,  160,  105,  545,
      548,  163,  164,  165,  165,  165,  165,  545,  548,  443,
       97,  979,   98,  106,  107,  108,  108,  108,  108,  163,
      166,  166,  166,  166,   96,  167,  165,  165,  165,  165,
      138,  133,  138,  168,  137,  171,   97,  978,   98,  106,

      107,  108,  108,  108,  108,  173,  174,  174,  174,  174,
       96,  168,  175,  175,  175,  175,  180,  181,  181,  181,
      181,  977,   97,  927,   98,  109,  110,  111,  111,  111,
      111,  182,  182,  182,  182,  926,   96,  187,  188,  188,
      188,  188,  189,  189,  189,  189,  814,  817,   97,  925,
       98,  109,  110,  111,  111,  111,  111,  194,  195,  195,
      195,  195,   96,  196,  196,  196,  196,  201,  201,  201,
      201,  333,  814,  817,   97,  924,   98,  112,  113,  114,
      114,  114,  114,  205,  205,  205,  205,  333,   96,  205,
      205,  205,  205,  205,  205,  205,  205,  322,  325,  770,

       97,  769,   98,  112,  113,  114,  114,  114,  114,  206,
      210,  210,  210,  210,   96,  208,  209,  209,  209,  209,
      218,  219,  219,  219,  219,  206,   97,  768,   98,  115,
      116,  117,  117,  117,  117,  211,  209,  209,  209,  209,
       96,  322,  325,  212,  138,  133,  138,  767,  137,  216,
      830,  833,   97,  766,   98,  115,  116,  117,  117,  117,
      117,  212,  220,  220,  220,  220,   96,  225,  226,  226,
      226,  226,  830,  833,  137,  664,  137, 1052,   97,  661,
       98,  176,  176,  176,  560,  563,  177,  560,  563,  178,
      174,  174,  174,  174,  660, 1052,  482,  179,  227,  227,

      227,  227,  232,  233,  233,  233,  233,  234,  234,  234,
      234,  241,  241,  241,  241,  179,  183,  183,  183,  481,
      480,  184,  479, 1052,  185,  181,  181,  181,  181, 1052,
      478,  477,  186,  239,  240,  240,  240,  240,  247,  133,
      247, 1052,  476,  248,  250,  133,  250, 1052,  137,  251,
      186,  190,  190,  190, 1052,  475,  191,  401,  400,  192,
      188,  188,  188,  188,  254,  255,  254,  193,  257,  256,
      257, 1052, 1052,  258,  260,  255,  260,  399,  137,  261,
      263,  263,  263,  263,  398,  193,  197,  197,  197, 1052,
      397,  198,  405,  668,  199,  195,  195,  195,  195,  396,

      406,  669,  200,  395,  263,  263,  263,  263,  263,  263,
      263,  263,  132,  133,  132,  394,  393,  134,  406,  669,
      200,  202,  202,  202,  264,  392,  203, 1052,  280,  676,
      201,  201,  201,  201,  135,  279,  135,  677,  278,  136,
      264,  138,  133,  138,  277, 1052,  139,  135,  276,  135,
      204,  266,  136,  266,  275,  677,  267,  138,  133,  138,
      274,  273,  139,  681,  272,  271,  204,  221,  221,  221,
      270,  682,  222,  269,  262,  223,  219,  219,  219,  219,
      138,  133,  138,  224,  252,  139,  138,  133,  138,  682,
     1052,  139,  138,  133,  138,  217,  214,  139,  207,  172,

      156,  224,  228,  228,  228,  155,  154,  229, 1052,  689,
      230,  226,  226,  226,  226, 1052,  268,  690,  231,  157,
      157,  157,  157,  161,  161,  161,  161,  161,  161,  161,
      161,  153,  442, 1052,  163,  690,  231,  235,  235,  235,
      443,  150,  236,  149,  146,  237,  233,  233,  233,  233,
      145,  144,  163,  238,  161,  161,  161,  161,  443,  162,
      160,  160,  160,  160,  138,  133,  138,  163,  137,  171,
      143,  238,  242,  242,  242,  142, 1052,  243, 1052, 1052,
      244,  240,  240,  240,  240,  163,  282,  282,  245,  283,
      283,  283,  283,  166,  166,  166,  166,  167,  165,  165,

      165,  165, 1052, 1052, 1052,  168,  245,  166,  166,  166,
      166, 1052, 1052, 1052,  168,  166,  166,  166,  166, 1052,
     1052,  284,  284,  168,  285,  285,  285,  285, 1052,  138,
      133,  138,  168,  137,  171,  175,  175,  175,  175, 1052,
      175,  175,  175,  175,  176,  176,  176, 1052, 1052,  177,
     1052,  286,  287,  288,  288,  288,  288,  290,  176,  290,
     1052, 1052,  291, 1052,  292,  293,  294,  294,  294,  294,
      295,  295, 1052,  296,  296,  296,  296,  182,  182,  182,
      182, 1052,  182,  182,  182,  182,  183,  183,  183, 1052,
     1052,  184, 1052,  297,  298,  299,  299,  299,  299,  301,

      183,  301, 1052, 1052,  302, 1052,  303,  304,  305,  305,
      305,  305,  306,  306, 1052,  307,  307,  307,  307,  189,
      189,  189,  189, 1052,  189,  189,  189,  189,  190,  190,
      190, 1052, 1052,  191, 1052,  308,  309,  310,  310,  310,
      310,  312,  190,  312, 1052, 1052,  313, 1052,  314,  315,
      316,  316,  316,  316,  317,  317, 1052,  318,  318,  318,
      318,  196,  196,  196,  196, 1052,  196,  196,  196,  196,
      197,  197,  197, 1052, 1052,  198, 1052,  319,  320,  321,
      321,  321,  321,  323,  197,  323, 1052, 1052,  324, 1052,
      325,  326,  327,  327,  327,  327,  328,  328,  718,  329,

      329,  329,  329,  202,  202,  202,  719, 1052,  203, 1052,
      330, 1052,  331,  332,  332,  332,  334,  202,  334, 1052,
     1052,  335, 1052,  336,  719,  337,  338,  338,  338,  202,
      202,  202, 1052, 1052,  203,  205,  205,  205,  205,  210,
      210,  210,  210,  211,  209,  209,  209,  209, 1052, 1052,
     1052,  212,  210,  210,  210,  210, 1052,  726, 1052,  212,
      210,  210,  210,  210, 1052,  727, 1052,  341,  341,  212,
      342,  342,  342,  342,  138,  133,  138,  212,  137,  216,
      138,  133,  138,  727,  137,  216,  220,  220,  220,  220,
     1052,  220,  220,  220,  220,  352,  352, 1052,  353,  353,

      353,  353, 1052,  257,  137,  257,  137, 1052,  258, 1052,
      137, 1052,  137,  221,  221,  221, 1052, 1052,  222, 1052,
      343,  344,  345,  345,  345,  345,  347,  221,  347, 1052,
     1052,  348, 1052,  349,  350,  351,  351,  351,  351,  227,
      227,  227,  227,  228,  228,  228, 1052, 1052,  229, 1052,
      731,  230,  226,  226,  226,  226, 1052, 1052,  732,  231,
     1052,  227,  227,  227,  227,  363,  363, 1052,  364,  364,
      364,  364,  234,  234,  234,  234,  732,  231,  228,  228,
      228, 1052, 1052,  229, 1052,  354,  355,  356,  356,  356,
      356,  358,  228,  358, 1052, 1052,  359, 1052,  360,  361,

      362,  362,  362,  362,  235,  235,  235, 1052, 1052,  236,
     1052,  739,  237,  233,  233,  233,  233, 1052, 1052,  740,
      238, 1052,  234,  234,  234,  234,  374,  374, 1052,  375,
      375,  375,  375,  241,  241,  241,  241,  740,  238,  235,
      235,  235, 1052, 1052,  236, 1052,  365,  366,  367,  367,
      367,  367,  369,  235,  369, 1052, 1052,  370, 1052,  371,
      372,  373,  373,  373,  373,  242,  242,  242, 1052, 1052,
      243, 1052,  668,  244,  240,  240,  240,  240, 1052, 1052,
      669,  245, 1052,  241,  241,  241,  241,  385,  385, 1052,
      386,  386,  386,  386,  263,  263,  263,  263,  669,  245,

      242,  242,  242, 1052, 1052,  243, 1052,  376,  377,  378,
      378,  378,  378,  380,  242,  380, 1052, 1052,  381, 1052,
      382,  383,  384,  384,  384,  384,  247,  133,  247, 1052,
     1052,  248,  250,  133,  250, 1052,  137,  251,  250,  133,
      250, 1052,  137,  251,  250,  133,  250, 1052,  137,  251,
      250,  133,  250, 1052,  137,  251,  254,  255,  254, 1052,
     1052,  256,  260,  255,  260, 1052,  137,  261,  257,  676,
      257, 1052, 1052,  258,  388,  253,  388,  677,  265,  389,
      260,  255,  260, 1052,  137,  261,  260,  255,  260, 1052,
      137,  261,  260,  255,  260,  677,  137,  261,  266,  266,

      266,  266, 1052,  267,  267,  266, 1052,  266, 1052, 1052,
      267,  138,  133,  138, 1052, 1052,  139,  283,  283,  283,
      283,  283,  283,  283,  283,  285,  285,  285,  285, 1052,
     1052,  391,  285,  285,  285,  285,  287,  288,  288,  288,
      288,  402,  402,  402,  402,  403,  288,  288,  288,  288,
     1052, 1052, 1052,  404,  296,  296,  296,  296,  298,  299,
      299,  299,  299,  407,  407,  407,  407,  307,  307,  307,
      307,  404,  290,  176,  290, 1052, 1052,  291, 1052,  292,
      293,  294,  294,  294,  294,  290,  176,  290, 1052, 1052,
      291, 1052,  292,  293,  294,  294,  294,  294,  176,  176,

      176, 1052, 1052,  177, 1052, 1052,  681,  296,  296,  296,
      296,  408,  408,  408,  682, 1052,  409,  689, 1052,  410,
      299,  299,  299,  299, 1052,  690,  931,  411,  412,  413,
      412, 1052,  682,  414,  932, 1052,  415,  309,  310,  310,
      310,  310, 1052,  690,  416,  411,  301,  183,  301, 1052,
     1052,  302,  932,  303,  304,  305,  305,  305,  305,  301,
      183,  301,  416, 1052,  302, 1052,  303,  304,  305,  305,
      305,  305,  183,  183,  183, 1052, 1052,  184, 1052, 1052,
     1052,  307,  307,  307,  307,  417,  417,  417,  417,  418,
      418,  418, 1052, 1052,  419,  939, 1052,  420,  310,  310,

      310,  310,  947,  940,  718,  421,  422,  423,  422, 1052,
      948,  424,  719, 1052,  425,  318,  318,  318,  318, 1052,
     1052,  940,  426,  421,  312,  190,  312, 1052,  948,  313,
      719,  314,  315,  316,  316,  316,  316,  312,  190,  312,
      426, 1052,  313, 1052,  314,  315,  316,  316,  316,  316,
      190,  190,  190, 1052, 1052,  191, 1052, 1052, 1052,  318,
      318,  318,  318,  320,  321,  321,  321,  321,  427,  427,
      427,  427,  428,  428,  428, 1052, 1052,  429,  726, 1052,
      430,  321,  321,  321,  321,  731,  727,  739,  431,  432,
      433,  432, 1052,  732,  434,  740, 1052,  435,  329,  329,

      329,  329, 1052, 1052,  727,  436,  431,  323,  197,  323,
     1052,  732,  324,  740,  325,  326,  327,  327,  327,  327,
      323,  197,  323,  436, 1052,  324, 1052,  325,  326,  327,
      327,  327,  327,  197,  197,  197, 1052, 1052,  198, 1052,
     1052, 1052,  329,  329,  329,  329,  332,  332,  332,  332,
      332,  332,  332,  332,  332,  332,  332,  332,  202,  202,
      202, 1052, 1052,  203,  342,  342,  342,  342, 1052, 1052,
      437,  342,  342,  342,  342,  344,  345,  345,  345,  345,
      439,  439,  439,  439, 1052, 1052,  437,  334,  202,  334,
     1052, 1052,  335, 1052,  336,  955,  337,  338,  338,  338,

      334,  202,  334,  956, 1052,  335, 1052,  336,  963,  337,
      338,  338,  338,  334,  202,  334,  964, 1052,  335, 1052,
      336,  956,  337,  338,  338,  338,  334,  202,  334, 1052,
     1052,  335, 1052,  336,  964,  337,  338,  338,  338,  334,
      202,  334, 1052, 1052,  335, 1052,  336, 1052,  337,  338,
      338,  338,  440,  345,  345,  345,  345,  971, 1052, 1052,
      441,  353,  353,  353,  353,  972, 1052, 1052,  438,  355,
      356,  356,  356,  356,  444,  444,  444,  444,  441,  364,
      364,  364,  364,  972,  438,  347,  221,  347, 1052, 1052,
      348, 1052,  349,  350,  351,  351,  351,  351,  347,  221,

      347, 1052, 1052,  348, 1052,  349,  350,  351,  351,  351,
      351,  221,  221,  221, 1052, 1052,  222,  800,  803,  931,
      353,  353,  353,  353,  445,  445,  445,  932, 1052,  446,
     1052, 1052,  447,  356,  356,  356,  356,  814,  817,  939,
      448,  449,  450,  449, 1052,  932,  451,  940, 1052,  452,
      366,  367,  367,  367,  367, 1052, 1052,  453,  448,  358,
      228,  358, 1052, 1052,  359,  940,  360,  361,  362,  362,
      362,  362,  358,  228,  358,  453, 1052,  359, 1052,  360,
      361,  362,  362,  362,  362,  228,  228,  228, 1052, 1052,
      229, 1052, 1052, 1052,  364,  364,  364,  364,  454,  454,

      454,  454,  455,  455,  455, 1052, 1052,  456, 1052, 1052,
      457,  367,  367,  367,  367,  830,  833,  947,  458,  459,
      460,  459, 1052, 1052,  461,  948, 1052,  462,  375,  375,
      375,  375, 1052, 1052, 1052,  463,  458,  369,  235,  369,
     1052, 1052,  370,  948,  371,  372,  373,  373,  373,  373,
      369,  235,  369,  463, 1052,  370, 1052,  371,  372,  373,
      373,  373,  373,  235,  235,  235, 1052, 1052,  236, 1052,
     1052, 1052,  375,  375,  375,  375,  377,  378,  378,  378,
      378,  464,  464,  464,  464,  465,  465,  465, 1052, 1052,
      466, 1052, 1052,  467,  378,  378,  378,  378, 1052, 1052,

     1052,  468,  469,  470,  469, 1052, 1052,  471, 1052, 1052,
      472,  386,  386,  386,  386, 1052, 1052, 1052,  473,  468,
      380,  242,  380, 1052, 1052,  381, 1052,  382,  383,  384,
      384,  384,  384,  380,  242,  380,  473, 1052,  381, 1052,
      382,  383,  384,  384,  384,  384,  242,  242,  242, 1052,
     1052,  243, 1052, 1052, 1052,  386,  386,  386,  386,  388,
      253,  388, 1052,  265,  389,  388,  253,  388, 1052,  265,
      389,  388,  253,  388, 1052,  265,  389,  138,  133,  138,
     1052, 1052,  139,  402,  402,  402,  402, 1052, 1052, 1052,
      404,  402,  402,  402,  402, 1052,  474,  483,  483, 1052,

      484,  484,  484,  484, 1052, 1052,  485,  486,  404,  487,
      487,  487,  487, 1052,  407,  407,  407,  407,  408,  408,
      408, 1052, 1052,  409, 1052,  488,  489,  490,  490,  490,
      490,  492,  408,  492, 1052, 1052,  493, 1052,  494,  495,
      496,  496,  496,  496,  497,  497, 1052,  498,  498,  498,
      498,  412,  413,  412, 1052, 1052,  414, 1052,  499,  500,
      501,  501,  501,  501,  413,  413,  413, 1052, 1052,  502,
     1052,  503,  504,  505,  505,  505,  505,  507,  413,  507,
     1052, 1052,  508, 1052,  509,  510,  511,  511,  511,  511,
      412,  413,  412,  512,  513,  414,  514,  514,  514,  514,

     1052,  417,  417,  417,  417,  418,  418,  418, 1052, 1052,
      419, 1052,  515,  516,  517,  517,  517,  517,  519,  418,
      519, 1052, 1052,  520, 1052,  521,  522,  523,  523,  523,
      523,  524,  524, 1052,  525,  525,  525,  525,  422,  423,
      422, 1052, 1052,  424, 1052,  526,  527,  528,  528,  528,
      528,  423,  423,  423, 1052, 1052,  529, 1052,  530,  531,
      532,  532,  532,  532,  534,  423,  534, 1052, 1052,  535,
     1052,  536,  537,  538,  538,  538,  538,  422,  423,  422,
     1052, 1052,  424, 1052,  314,  315,  316,  316,  316,  316,
      312,  190,  312, 1052, 1052,  313,  539,  540, 1052,  541,

      541,  541,  541,  428,  428,  428, 1052, 1052,  429, 1052,
     1052, 1052,  427,  427,  427,  427, 1052,  551,  551,  431,
      552,  552,  552,  552,  439,  439,  439,  439, 1052,  439,
      439,  439,  439, 1052, 1052, 1052,  441,  431,  428,  428,
      428, 1052, 1052,  429, 1052,  542,  543,  544,  544,  544,
      544,  546,  428,  546,  441, 1052,  547, 1052,  548,  549,
      550,  550,  550,  550,  432,  433,  432, 1052, 1052,  434,
     1052,  553,  554,  555,  555,  555,  555,  433,  433,  433,
     1052, 1052,  556, 1052,  557,  558,  559,  559,  559,  559,
      561,  433,  561, 1052, 1052,  562, 1052,  563,  564,  565,

      565,  565,  565,  432,  433,  432, 1052, 1052,  434, 1052,
      325,  326,  327,  327,  327,  327,  323,  197,  323, 1052,
     1052,  324,  566,  567, 1052,  568,  568,  568,  568,  334,
      202,  334, 1052, 1052,  335, 1052,  336, 1052,  570,  571,
      571,  571,  572,  572,  572,  572,  572,  573,  573, 1052,
      574,  574,  574,  574,  587,  587, 1052,  588,  588,  588,
      588, 1052,  572,  572,  572,  347,  221,  347, 1052, 1052,
      348, 1052,  349,  350,  351,  351,  351,  351,  347,  221,
      347, 1052, 1052,  348,  575,  576,  350,  577,  577,  577,
      577,  445,  445,  445, 1052, 1052,  446, 1052, 1052, 1052,

      444,  444,  444,  444, 1052,  614,  614,  448,  615,  615,
      615,  615,  641,  641, 1052,  642,  642,  642,  642,  138,
      133,  659, 1052, 1052,  139,  448,  445,  445,  445, 1052,
     1052,  446, 1052,  578,  579,  580,  580,  580,  580,  582,
      445,  582, 1052, 1052,  583, 1052,  584,  585,  586,  586,
      586,  586,  449,  450,  449, 1052, 1052,  451, 1052,  589,
      590,  591,  591,  591,  591,  450,  450,  450, 1052, 1052,
      592, 1052,  593,  594,  595,  595,  595,  595,  597,  450,
      597, 1052, 1052,  598, 1052,  599,  600,  601,  601,  601,
      601,  449,  450,  449, 1052, 1052,  451, 1052,  360,  361,

      362,  362,  362,  362,  358,  228,  358, 1052, 1052,  359,
      602,  603, 1052,  604,  604,  604,  604,  455,  455,  455,
     1052, 1052,  456, 1052, 1052, 1052,  454,  454,  454,  454,
     1052, 1052, 1052,  458,  484,  484,  484,  484,  484,  484,
      484,  484,  489,  490,  490,  490,  490,  665,  665,  665,
      665,  458,  455,  455,  455, 1052, 1052,  456, 1052,  605,
      606,  607,  607,  607,  607,  609,  455,  609, 1052, 1052,
      610, 1052,  611,  612,  613,  613,  613,  613,  459,  460,
      459, 1052, 1052,  461, 1052,  616,  617,  618,  618,  618,
      618,  460,  460,  460, 1052, 1052,  619, 1052,  620,  621,

      622,  622,  622,  622,  624,  460,  624, 1052, 1052,  625,
     1052,  626,  627,  628,  628,  628,  628,  459,  460,  459,
     1052, 1052,  461, 1052,  371,  372,  373,  373,  373,  373,
      369,  235,  369, 1052, 1052,  370,  629,  630, 1052,  631,
      631,  631,  631,  465,  465,  465, 1052, 1052,  466, 1052,
     1052, 1052,  464,  464,  464,  464, 1052, 1052, 1052,  468,
      498,  498,  498,  498,  673,  673,  673,  673,  666,  490,
      490,  490,  490, 1052, 1052, 1052,  667,  468,  465,  465,
      465, 1052, 1052,  466, 1052,  632,  633,  634,  634,  634,
      634,  636,  465,  636,  667, 1052,  637, 1052,  638,  639,

      640,  640,  640,  640,  469,  470,  469, 1052, 1052,  471,
     1052,  643,  644,  645,  645,  645,  645,  470,  470,  470,
     1052, 1052,  646, 1052,  647,  648,  649,  649,  649,  649,
      651,  470,  651, 1052, 1052,  652, 1052,  653,  654,  655,
      655,  655,  655,  469,  470,  469, 1052, 1052,  471, 1052,
      382,  383,  384,  384,  384,  384,  380,  242,  380, 1052,
     1052,  381,  656,  657, 1052,  658,  658,  658,  658,  290,
      176,  290, 1052, 1052,  291, 1052,  292,  293,  487,  487,
      487,  487,  290,  176,  290, 1052, 1052,  291, 1052,  292,
      293,  487,  487,  487,  487,  492,  408,  492, 1052, 1052,

      493, 1052,  494,  495,  496,  496,  496,  496,  492,  408,
      492, 1052, 1052,  493, 1052,  494,  495,  496,  496,  496,
      496,  408,  408,  408, 1052, 1052,  409, 1052, 1052, 1052,
      498,  498,  498,  498,  301,  183,  301, 1052, 1052,  302,
     1052,  303,  500,  501,  501,  501,  501,  301,  183,  301,
     1052, 1052,  302, 1052,  303,  304,  670,  670,  670,  670,
      412,  413,  412, 1052, 1052,  414, 1052, 1052,  671,  501,
      501,  501,  501, 1052, 1052, 1052,  672,  504,  505,  505,
      505,  505,  514,  514,  514,  514,  514,  514,  514,  514,
      678,  678,  678,  678,  672,  507,  413,  507, 1052, 1052,

      508, 1052,  509,  510,  511,  511,  511,  511,  408,  408,
      408, 1052, 1052,  409, 1052, 1052,  674,  505,  505,  505,
      505, 1052, 1052, 1052,  675,  516,  517,  517,  517,  517,
      415,  514,  514,  514,  514,  138,  133,  138,  416, 1052,
      139, 1052,  675,  507,  413,  507, 1052, 1052,  508, 1052,
      509,  510,  511,  511,  511,  511,  416,  679,  517,  517,
      517,  517, 1052,  765, 1052,  680,  525,  525,  525,  525,
      531,  532,  532,  532,  532,  686,  686,  686,  686,  541,
      541,  541,  541,  680,  519,  418,  519, 1052, 1052,  520,
     1052,  521,  522,  523,  523,  523,  523,  519,  418,  519,

     1052, 1052,  520, 1052,  521,  522,  523,  523,  523,  523,
      418,  418,  418, 1052, 1052,  419, 1052, 1052, 1052,  525,
      525,  525,  525,  312,  190,  312, 1052, 1052,  313, 1052,
      314,  527,  528,  528,  528,  528,  312,  190,  312, 1052,
     1052,  313, 1052,  314,  315,  683,  683,  683,  683,  422,
      423,  422, 1052, 1052,  424, 1052, 1052,  684,  528,  528,
      528,  528, 1052, 1052, 1052,  685,  541,  541,  541,  541,
      691,  691,  691,  691,  425,  541,  541,  541,  541, 1052,
     1052, 1052,  426,  685,  534,  423,  534, 1052, 1052,  535,
     1052,  536,  537,  538,  538,  538,  538,  418,  418,  418,

      426, 1052,  419, 1052, 1052,  687,  532,  532,  532,  532,
     1052, 1052, 1052,  688,  543,  544,  544,  544,  544,  552,
      552,  552,  552,  558,  559,  559,  559,  559, 1052, 1052,
     1052,  688,  534,  423,  534, 1052, 1052,  535, 1052,  536,
      537,  538,  538,  538,  538,  692,  692,  692, 1052, 1052,
      693, 1052, 1052,  694,  544,  544,  544,  544, 1052, 1052,
     1052,  695,  696,  697,  696, 1052, 1052,  698, 1052, 1052,
      699,  707,  707,  707,  707, 1052, 1052, 1052,  700,  695,
      546,  428,  546, 1052, 1052,  547, 1052,  548,  549,  550,
      550,  550,  550,  546,  428,  546,  700, 1052,  547, 1052,

      548,  549,  550,  550,  550,  550,  428,  428,  428, 1052,
     1052,  429, 1052, 1052, 1052,  552,  552,  552,  552,  323,
      197,  323, 1052, 1052,  324, 1052,  325,  554,  555,  555,
      555,  555,  323,  197,  323, 1052, 1052,  324, 1052,  325,
      326,  701,  701,  701,  701,  702,  703,  702, 1052, 1052,
      704, 1052, 1052,  705,  555,  555,  555,  555, 1052, 1052,
     1052,  706,  711,  703,  711, 1052, 1052,  712, 1052, 1052,
      713,  568,  568,  568,  568, 1052, 1052, 1052,  714,  706,
      561,  433,  561, 1052, 1052,  562, 1052,  563,  564,  565,
      565,  565,  565,  697,  697,  697,  714, 1052,  708, 1052,

     1052,  709,  559,  559,  559,  559, 1052, 1052, 1052,  710,
      568,  568,  568,  568,  574,  574,  574,  574,  574,  574,
      574,  574,  579,  580,  580,  580,  580,  710,  561,  433,
      561, 1052, 1052,  562, 1052,  563,  564,  565,  565,  565,
      565,  432,  433,  432, 1052, 1052,  434, 1052, 1052,  435,
      568,  568,  568,  568, 1052, 1052, 1052,  436,  715,  715,
      715,  715,  588,  588,  588,  588,  594,  595,  595,  595,
      595,  723,  723,  723,  723,  436,  333,  334,  202,  334,
      333,  333,  335,  333,  336,  333,  570,  571,  571,  571,
      572,  572,  572,  572,  572,  333,  333,  333,  333,  333,

      333,  333,  333,  333,  333,  333,  438,  333,  333,  333,
      572,  572,  572,  333,  333,  333,  333,  333,  333,  333,
      333,  333,  438,  347,  221,  347, 1052, 1052,  348, 1052,
      349,  350,  577,  577,  577,  577,  347,  221,  347, 1052,
     1052,  348, 1052,  349,  350,  577,  577,  577,  577,  716,
      580,  580,  580,  580, 1052, 1052, 1052,  717,  604,  604,
      604,  604,  604,  604,  604,  604,  452,  604,  604,  604,
      604, 1052, 1052, 1052,  453,  717,  582,  445,  582, 1052,
     1052,  583, 1052,  584,  585,  586,  586,  586,  586,  582,
      445,  582,  453, 1052,  583, 1052,  584,  585,  586,  586,

      586,  586,  445,  445,  445, 1052, 1052,  446, 1052, 1052,
     1052,  588,  588,  588,  588,  358,  228,  358, 1052, 1052,
      359, 1052,  360,  590,  591,  591,  591,  591,  358,  228,
      358, 1052, 1052,  359, 1052,  360,  361,  720,  720,  720,
      720,  449,  450,  449, 1052, 1052,  451, 1052, 1052,  721,
      591,  591,  591,  591, 1052, 1052, 1052,  722,  606,  607,
      607,  607,  607,  728,  728,  728,  728,  615,  615,  615,
      615,  736,  736,  736,  736,  722,  597,  450,  597, 1052,
     1052,  598, 1052,  599,  600,  601,  601,  601,  601,  445,
      445,  445, 1052, 1052,  446, 1052, 1052,  724,  595,  595,

      595,  595, 1052, 1052, 1052,  725,  621,  622,  622,  622,
      622,  729,  607,  607,  607,  607,  138,  133,  138,  730,
     1052,  139, 1052,  725,  597,  450,  597,  923, 1052,  598,
     1052,  599,  600,  601,  601,  601,  601,  730,  609,  455,
      609, 1052, 1052,  610, 1052,  611,  612,  613,  613,  613,
      613,  609,  455,  609, 1052, 1052,  610, 1052,  611,  612,
      613,  613,  613,  613,  455,  455,  455, 1052, 1052,  456,
     1052, 1052, 1052,  615,  615,  615,  615,  369,  235,  369,
     1052, 1052,  370, 1052,  371,  617,  618,  618,  618,  618,
      369,  235,  369, 1052, 1052,  370, 1052,  371,  372,  733,

      733,  733,  733,  459,  460,  459, 1052, 1052,  461, 1052,
     1052,  734,  618,  618,  618,  618, 1052, 1052, 1052,  735,
      631,  631,  631,  631,  631,  631,  631,  631,  462,  631,
      631,  631,  631, 1052, 1052, 1052,  463,  735,  624,  460,
      624, 1052, 1052,  625, 1052,  626,  627,  628,  628,  628,
      628,  455,  455,  455,  463, 1052,  456, 1052, 1052,  737,
      622,  622,  622,  622, 1052, 1052, 1052,  738,  633,  634,
      634,  634,  634,  741,  741,  741,  741,  642,  642,  642,
      642,  757,  757,  757,  757,  738,  624,  460,  624, 1052,
     1052,  625, 1052,  626,  627,  628,  628,  628,  628,  742,

      742,  742, 1052, 1052,  743, 1052, 1052,  744,  634,  634,
      634,  634, 1052, 1052, 1052,  745,  746,  747,  746, 1052,
     1052,  748, 1052, 1052,  749,  648,  649,  649,  649,  649,
     1052, 1052,  750,  745,  636,  465,  636, 1052, 1052,  637,
     1052,  638,  639,  640,  640,  640,  640,  636,  465,  636,
      750, 1052,  637, 1052,  638,  639,  640,  640,  640,  640,
      465,  465,  465, 1052, 1052,  466, 1052, 1052, 1052,  642,
      642,  642,  642,  380,  242,  380, 1052, 1052,  381, 1052,
      382,  644,  645,  645,  645,  645,  380,  242,  380, 1052,
     1052,  381, 1052,  382,  383,  751,  751,  751,  751,  752,

      753,  752, 1052, 1052,  754, 1052, 1052,  755,  645,  645,
      645,  645, 1052, 1052, 1052,  756,  761,  753,  761, 1052,
     1052,  762, 1052, 1052,  763,  658,  658,  658,  658, 1052,
     1052, 1052,  764,  756,  651,  470,  651, 1052, 1052,  652,
     1052,  653,  654,  655,  655,  655,  655,  747,  747,  747,
      764, 1052,  758, 1052, 1052,  759,  649,  649,  649,  649,
     1052, 1052, 1052,  760,  658,  658,  658,  658,  665,  665,
      665,  665, 1052,  665,  665,  665,  665, 1052, 1052, 1052,
      667,  760,  651,  470,  651, 1052, 1052,  652, 1052,  653,
      654,  655,  655,  655,  655,  469,  470,  469,  667, 1052,

      471, 1052, 1052,  472,  658,  658,  658,  658, 1052,  771,
      771,  473,  772,  772,  772,  772,  779,  779, 1052,  780,
      780,  780,  780,  678,  678,  678,  678, 1052, 1052,  473,
      492,  408,  492, 1052, 1052,  493, 1052,  494,  495,  496,
      496,  496,  496,  492,  408,  492, 1052, 1052,  493,  773,
      774,  495,  775,  775,  775,  775,  412,  413,  412, 1052,
     1052,  414, 1052,  303,  415,  670,  670,  670,  670, 1052,
      784,  784,  672,  785,  785,  785,  785,  715,  715,  715,
      715, 1052,  678,  678,  678,  678, 1052, 1052, 1052,  680,
      672,  412,  413,  412, 1052, 1052,  414, 1052,  303,  304,

      670,  670,  670,  670,  301,  183,  301,  680, 1052,  302,
      776,  777, 1052,  778,  778,  778,  778,  408,  408,  408,
     1052, 1052,  409, 1052, 1052, 1052,  673,  673,  673,  673,
     1052,  792,  792,  675,  793,  793,  793,  793,  806,  806,
     1052,  807,  807,  807,  807,  325,  326,  701,  701,  701,
      701,  675,  507,  413,  507, 1052, 1052,  508, 1052,  509,
      510,  511,  511,  511,  511,  507,  413,  507, 1052, 1052,
      508,  781,  782,  510,  783,  783,  783,  783,  519,  418,
      519, 1052, 1052,  520, 1052,  521,  522,  523,  523,  523,
      523,  519,  418,  519, 1052, 1052,  520,  786,  787,  522,

      788,  788,  788,  788,  422,  423,  422, 1052, 1052,  424,
     1052,  314,  425,  683,  683,  683,  683, 1052,  839,  839,
      685,  840,  840,  840,  840,  728,  728,  728,  728, 1052,
      715,  715,  715,  715, 1052, 1052, 1052,  717,  685,  422,
      423,  422, 1052, 1052,  424, 1052,  314,  315,  683,  683,
      683,  683,  312,  190,  312,  717, 1052,  313,  789,  790,
     1052,  791,  791,  791,  791,  418,  418,  418, 1052, 1052,
      419, 1052, 1052, 1052,  686,  686,  686,  686, 1052,  847,
      847,  688,  848,  848,  848,  848,  855,  855, 1052,  856,
      856,  856,  856,  382,  383,  751,  751,  751,  751,  688,

      534,  423,  534, 1052, 1052,  535, 1052,  536,  537,  538,
      538,  538,  538,  534,  423,  534, 1052, 1052,  535,  794,
      795,  537,  796,  796,  796,  796,  692,  692,  692, 1052,
     1052,  693, 1052, 1052, 1052,  691,  691,  691,  691, 1052,
      860,  860,  695,  861,  861,  861,  861,  772,  772,  772,
      772, 1052,  728,  728,  728,  728, 1052, 1052, 1052,  730,
      695,  692,  692,  692, 1052, 1052,  693, 1052,  797,  798,
      799,  799,  799,  799,  801,  692,  801,  730, 1052,  802,
     1052,  803,  804,  805,  805,  805,  805,  696,  697,  696,
     1052, 1052,  698, 1052,  808,  809,  810,  810,  810,  810,

      697,  697,  697, 1052, 1052,  708, 1052,  811,  812,  813,
      813,  813,  813,  815,  697,  815, 1052, 1052,  816, 1052,
      817,  818,  819,  819,  819,  819,  696,  697,  696, 1052,
     1052,  698, 1052,  548,  549,  550,  550,  550,  550,  546,
      428,  546, 1052, 1052,  547,  820,  821, 1052,  822,  822,
      822,  822,  702,  703,  702, 1052, 1052,  704, 1052,  325,
      435,  701,  701,  701,  701, 1052,  868,  868,  706,  869,
      869,  869,  869,  882,  882, 1052,  883,  883,  883,  883,
      772,  772,  772,  772, 1052, 1052,  706,  702,  703,  702,
     1052, 1052,  704, 1052,  823,  824,  825,  825,  825,  825,

      703,  703,  703, 1052, 1052,  826, 1052,  827,  828,  829,
      829,  829,  829,  831,  703,  831, 1052, 1052,  832, 1052,
      833,  834,  835,  835,  835,  835,  323,  197,  323, 1052,
     1052,  324,  836,  837,  326,  838,  838,  838,  838,  697,
      697,  697, 1052, 1052,  708, 1052, 1052, 1052,  707,  707,
      707,  707, 1052,  915,  915,  710,  916,  916,  916,  916,
      780,  780,  780,  780,  785,  785,  785,  785,  785,  785,
      785,  785, 1052,  710,  815,  697,  815, 1052, 1052,  816,
     1052,  817,  818,  819,  819,  819,  819,  711,  703,  711,
     1052, 1052,  712, 1052,  841,  842,  843,  843,  843,  843,

      831,  703,  831, 1052, 1052,  832, 1052,  833,  834,  835,
      835,  835,  835,  711,  703,  711, 1052, 1052,  712, 1052,
      563,  564,  565,  565,  565,  565,  561,  433,  561, 1052,
     1052,  562,  844,  845, 1052,  846,  846,  846,  846,  582,
      445,  582, 1052, 1052,  583, 1052,  584,  585,  586,  586,
      586,  586,  582,  445,  582, 1052, 1052,  583,  849,  850,
      585,  851,  851,  851,  851,  449,  450,  449, 1052, 1052,
      451, 1052,  360,  452,  720,  720,  720,  720, 1052, 1052,
     1052,  722,  412,  413,  412, 1052, 1052,  414, 1052, 1052,
      415,  793,  793,  793,  793, 1052, 1052, 1052,  416,  722,

      449,  450,  449, 1052, 1052,  451, 1052,  360,  361,  720,
      720,  720,  720,  358,  228,  358,  416, 1052,  359,  852,
      853, 1052,  854,  854,  854,  854,  445,  445,  445, 1052,
     1052,  446, 1052, 1052, 1052,  723,  723,  723,  723, 1052,
     1052, 1052,  725,  422,  423,  422, 1052, 1052,  424, 1052,
     1052,  425,  798,  799,  799,  799,  799, 1052, 1052,  426,
      725,  597,  450,  597, 1052, 1052,  598, 1052,  599,  600,
      601,  601,  601,  601,  597,  450,  597,  426, 1052,  598,
      857,  858,  600,  859,  859,  859,  859,  609,  455,  609,
     1052, 1052,  610, 1052,  611,  612,  613,  613,  613,  613,

      609,  455,  609, 1052, 1052,  610,  862,  863,  612,  864,
      864,  864,  864,  459,  460,  459, 1052, 1052,  461, 1052,
      371,  462,  733,  733,  733,  733, 1052, 1052, 1052,  735,
      928,  928,  928,  928,  807,  807,  807,  807,  929,  799,
      799,  799,  799, 1052, 1052, 1052,  930,  735,  459,  460,
      459, 1052, 1052,  461, 1052,  371,  372,  733,  733,  733,
      733,  369,  235,  369,  930, 1052,  370,  865,  866, 1052,
      867,  867,  867,  867,  455,  455,  455, 1052, 1052,  456,
     1052, 1052, 1052,  736,  736,  736,  736, 1052, 1052, 1052,
      738,  812,  813,  813,  813,  813,  936,  936,  936,  936,

      822,  822,  822,  822,  822,  822,  822,  822,  738,  624,
      460,  624, 1052, 1052,  625, 1052,  626,  627,  628,  628,
      628,  628,  624,  460,  624, 1052, 1052,  625,  870,  871,
      627,  872,  872,  872,  872,  742,  742,  742, 1052, 1052,
      743, 1052, 1052, 1052,  741,  741,  741,  741, 1052, 1052,
     1052,  745,  828,  829,  829,  829,  829, 1052, 1052, 1052,
      699,  822,  822,  822,  822, 1052, 1052, 1052,  700,  745,
      742,  742,  742, 1052, 1052,  743, 1052,  873,  874,  875,
      875,  875,  875,  877,  742,  877,  700, 1052,  878, 1052,
      879,  880,  881,  881,  881,  881,  746,  747,  746, 1052,

     1052,  748, 1052,  884,  885,  886,  886,  886,  886,  747,
      747,  747, 1052, 1052,  758, 1052,  887,  888,  889,  889,
      889,  889,  891,  747,  891, 1052, 1052,  892, 1052,  893,
      894,  895,  895,  895,  895,  746,  747,  746, 1052, 1052,
      748, 1052,  638,  639,  640,  640,  640,  640,  636,  465,
      636, 1052, 1052,  637,  896,  897, 1052,  898,  898,  898,
      898,  752,  753,  752, 1052, 1052,  754, 1052,  382,  472,
      751,  751,  751,  751, 1052, 1052, 1052,  756,  944,  944,
      944,  944,  838,  838,  838,  838,  838,  838,  838,  838,
      840,  840,  840,  840, 1052,  756,  752,  753,  752, 1052,

     1052,  754, 1052,  899,  900,  901,  901,  901,  901,  753,
      753,  753, 1052, 1052,  902, 1052,  903,  904,  905,  905,
      905,  905,  907,  753,  907, 1052, 1052,  908, 1052,  909,
      910,  911,  911,  911,  911,  380,  242,  380, 1052, 1052,
      381,  912,  913,  383,  914,  914,  914,  914,  747,  747,
      747, 1052, 1052,  758, 1052, 1052, 1052,  757,  757,  757,
      757, 1052, 1052, 1052,  760,  846,  846,  846,  846,  846,
      846,  846,  846,  435,  838,  838,  838,  838, 1052, 1052,
     1052,  436,  760,  891,  747,  891, 1052, 1052,  892, 1052,
      893,  894,  895,  895,  895,  895,  761,  753,  761,  436,

     1052,  762, 1052,  917,  918,  919,  919,  919,  919,  907,
      753,  907, 1052, 1052,  908, 1052,  909,  910,  911,  911,
      911,  911,  761,  753,  761, 1052, 1052,  762, 1052,  653,
      654,  655,  655,  655,  655,  651,  470,  651, 1052, 1052,
      652,  920,  921, 1052,  922,  922,  922,  922,  492,  408,
      492, 1052, 1052,  493, 1052,  494,  495,  775,  775,  775,
      775,  492,  408,  492, 1052, 1052,  493, 1052,  494,  495,
      775,  775,  775,  775,  301,  183,  301, 1052, 1052,  302,
     1052,  303,  304,  778,  778,  778,  778,  301,  183,  301,
     1052, 1052,  302, 1052,  303,  304,  778,  778,  778,  778,

      408,  408,  408, 1052, 1052,  409, 1052, 1052, 1052,  780,
      780,  780,  780,  507,  413,  507, 1052, 1052,  508, 1052,
      509,  510,  783,  783,  783,  783,  507,  413,  507, 1052,
     1052,  508, 1052,  509,  510,  783,  783,  783,  783,  519,
      418,  519, 1052, 1052,  520, 1052,  521,  522,  788,  788,
      788,  788,  519,  418,  519, 1052, 1052,  520, 1052,  521,
      522,  788,  788,  788,  788,  312,  190,  312, 1052, 1052,
      313, 1052,  314,  315,  791,  791,  791,  791,  312,  190,
      312, 1052, 1052,  313, 1052,  314,  315,  791,  791,  791,
      791,  418,  418,  418, 1052, 1052,  419, 1052, 1052, 1052,

      793,  793,  793,  793,  534,  423,  534, 1052, 1052,  535,
     1052,  536,  537,  796,  796,  796,  796,  534,  423,  534,
     1052, 1052,  535, 1052,  536,  537,  796,  796,  796,  796,
      801,  692,  801, 1052, 1052,  802, 1052,  803,  804,  805,
      805,  805,  805,  801,  692,  801, 1052, 1052,  802, 1052,
      803,  804,  805,  805,  805,  805,  692,  692,  692, 1052,
     1052,  693, 1052, 1052, 1052,  807,  807,  807,  807,  546,
      428,  546, 1052, 1052,  547, 1052,  548,  809,  810,  810,
      810,  810,  546,  428,  546, 1052, 1052,  547, 1052,  548,
      549,  933,  933,  933,  933,  696,  697,  696, 1052, 1052,

      698, 1052, 1052,  934,  810,  810,  810,  810, 1052, 1052,
     1052,  935,  848,  848,  848,  848, 1052,  713,  846,  846,
      846,  846,  746,  747,  746,  714, 1052,  748, 1052,  935,
      692,  692,  692, 1052, 1052,  693, 1052, 1052,  937,  813,
      813,  813,  813,  714, 1052, 1052,  938,  848,  848,  848,
      848,  856,  856,  856,  856,  861,  861,  861,  861,  861,
      861,  861,  861, 1052,  938,  815,  697,  815, 1052, 1052,
      816, 1052,  817,  818,  819,  819,  819,  819,  815,  697,
      815, 1052, 1052,  816, 1052,  817,  818,  819,  819,  819,
      819,  323,  197,  323, 1052, 1052,  324, 1052,  325,  824,

      825,  825,  825,  825,  323,  197,  323, 1052, 1052,  324,
     1052,  325,  326,  941,  941,  941,  941,  702,  703,  702,
     1052, 1052,  704, 1052, 1052,  942,  825,  825,  825,  825,
     1052, 1052, 1052,  943,  449,  450,  449, 1052, 1052,  451,
     1052, 1052,  452,  869,  869,  869,  869, 1052, 1052, 1052,
      453,  943,  831,  703,  831, 1052, 1052,  832, 1052,  833,
      834,  835,  835,  835,  835,  697,  697,  697,  453, 1052,
      708, 1052, 1052,  945,  829,  829,  829,  829, 1052, 1052,
     1052,  946,  459,  460,  459, 1052, 1052,  461, 1052, 1052,
      462,  874,  875,  875,  875,  875, 1052, 1052,  463,  946,

      831,  703,  831, 1052, 1052,  832, 1052,  833,  834,  835,
      835,  835,  835,  697,  697,  697,  463, 1052,  708, 1052,
     1052, 1052,  840,  840,  840,  840,  561,  433,  561, 1052,
     1052,  562, 1052,  563,  842,  843,  843,  843,  843,  561,
      433,  561, 1052, 1052,  562, 1052,  563,  564,  949,  949,
      949,  949,  711,  703,  711, 1052, 1052,  712, 1052, 1052,
      950,  843,  843,  843,  843, 1052, 1052, 1052,  951,  952,
      952,  952,  952,  883,  883,  883,  883,  953,  875,  875,
      875,  875, 1052, 1052, 1052,  954,  951,  582,  445,  582,
     1052, 1052,  583, 1052,  584,  585,  851,  851,  851,  851,

      582,  445,  582,  954, 1052,  583, 1052,  584,  585,  851,
      851,  851,  851,  358,  228,  358, 1052, 1052,  359, 1052,
      360,  361,  854,  854,  854,  854,  358,  228,  358, 1052,
     1052,  359, 1052,  360,  361,  854,  854,  854,  854,  445,
      445,  445, 1052, 1052,  446, 1052, 1052, 1052,  856,  856,
      856,  856,  597,  450,  597, 1052, 1052,  598, 1052,  599,
      600,  859,  859,  859,  859,  597,  450,  597, 1052, 1052,
      598, 1052,  599,  600,  859,  859,  859,  859,  609,  455,
      609, 1052, 1052,  610, 1052,  611,  612,  864,  864,  864,
      864,  609,  455,  609, 1052, 1052,  610, 1052,  611,  612,

      864,  864,  864,  864,  369,  235,  369, 1052, 1052,  370,
     1052,  371,  372,  867,  867,  867,  867,  369,  235,  369,
     1052, 1052,  370, 1052,  371,  372,  867,  867,  867,  867,
      455,  455,  455, 1052, 1052,  456, 1052, 1052, 1052,  869,
      869,  869,  869,  624,  460,  624, 1052, 1052,  625, 1052,
      626,  627,  872,  872,  872,  872,  624,  460,  624, 1052,
     1052,  625, 1052,  626,  627,  872,  872,  872,  872,  877,
      742,  877, 1052, 1052,  878, 1052,  879,  880,  881,  881,
      881,  881,  877,  742,  877, 1052, 1052,  878, 1052,  879,
      880,  881,  881,  881,  881,  742,  742,  742, 1052, 1052,

      743, 1052, 1052, 1052,  883,  883,  883,  883,  636,  465,
      636, 1052, 1052,  637, 1052,  638,  885,  886,  886,  886,
      886,  636,  465,  636, 1052, 1052,  637, 1052,  638,  639,
      957,  957,  957,  957,  746,  747,  746, 1052, 1052,  748,
     1052, 1052,  958,  886,  886,  886,  886, 1052, 1052, 1052,
      959,  888,  889,  889,  889,  889,  960,  960,  960,  960,
      898,  898,  898,  898,  898,  898,  898,  898,  959,  742,
      742,  742, 1052, 1052,  743, 1052, 1052,  961,  889,  889,
      889,  889, 1052, 1052, 1052,  962,  904,  905,  905,  905,
      905, 1052, 1052, 1052,  749,  898,  898,  898,  898, 1052,

     1052, 1052,  750,  962,  891,  747,  891, 1052, 1052,  892,
     1052,  893,  894,  895,  895,  895,  895,  891,  747,  891,
      750, 1052,  892, 1052,  893,  894,  895,  895,  895,  895,
      380,  242,  380, 1052, 1052,  381, 1052,  382,  900,  901,
      901,  901,  901,  380,  242,  380, 1052, 1052,  381, 1052,
      382,  383,  965,  965,  965,  965,  752,  753,  752, 1052,
     1052,  754, 1052, 1052,  966,  901,  901,  901,  901, 1052,
     1052, 1052,  967,  968,  968,  968,  968,  914,  914,  914,
      914,  914,  914,  914,  914,  916,  916,  916,  916, 1052,
      967,  907,  753,  907, 1052, 1052,  908, 1052,  909,  910,

      911,  911,  911,  911,  747,  747,  747, 1052, 1052,  758,
     1052, 1052,  969,  905,  905,  905,  905, 1052, 1052, 1052,
      970,  922,  922,  922,  922, 1052,  472,  914,  914,  914,
      914,  752,  753,  752,  473, 1052,  754, 1052,  970,  907,
      753,  907, 1052, 1052,  908, 1052,  909,  910,  911,  911,
      911,  911,  473,  747,  747,  747, 1052, 1052,  758, 1052,
     1052, 1052,  916,  916,  916,  916,  651,  470,  651, 1052,
     1052,  652, 1052,  653,  918,  919,  919,  919,  919,  651,
      470,  651, 1052, 1052,  652, 1052,  653,  654,  973,  973,
      973,  973,  761,  753,  761, 1052, 1052,  762, 1052, 1052,

      974,  919,  919,  919,  919, 1052, 1052, 1052,  975,  922,
      922,  922,  922,  763,  922,  922,  922,  922, 1052, 1052,
     1052,  764,  138,  133,  138, 1052,  975,  139, 1052, 1052,
      976,  928,  928,  928,  928, 1052, 1052, 1052,  930,  764,
      928,  928,  928,  928,  980,  980, 1052,  981,  981,  981,
      981,  952,  952,  952,  952, 1052,  930,  801,  692,  801,
     1052, 1052,  802, 1052,  803,  804,  805,  805,  805,  805,
      801,  692,  801, 1052, 1052,  802,  982,  983,  804,  984,
      984,  984,  984,  696,  697,  696, 1052, 1052,  698, 1052,
      548,  699,  933,  933,  933,  933, 1052,  988,  988,  935,

      989,  989,  989,  989,  996,  996, 1052,  997,  997,  997,
      997,  749,  957,  957,  957,  957, 1052,  935,  696,  697,
      696, 1052, 1052,  698, 1052,  548,  549,  933,  933,  933,
      933,  546,  428,  546, 1052, 1052,  547,  985,  986, 1052,
      987,  987,  987,  987,  692,  692,  692, 1052, 1052,  693,
     1052, 1052, 1052,  936,  936,  936,  936, 1052, 1004, 1004,
      938, 1005, 1005, 1005, 1005, 1052,  960,  960,  960,  960,
      952,  952,  952,  952, 1052, 1052, 1052,  954,  938,  815,
      697,  815, 1052, 1052,  816, 1052,  817,  818,  819,  819,
      819,  819,  815,  697,  815,  954, 1052,  816,  990,  991,

      818,  992,  992,  992,  992,  702,  703,  702, 1052, 1052,
      704, 1052,  325,  435,  941,  941,  941,  941, 1052, 1006,
     1007,  943, 1008, 1008, 1008, 1008, 1009, 1010, 1052, 1011,
     1011, 1011, 1011,  472,  965,  965,  965,  965, 1052,  943,
      702,  703,  702, 1052, 1052,  704, 1052,  325,  326,  941,
      941,  941,  941,  323,  197,  323, 1052, 1052,  324,  993,
      994, 1052,  995,  995,  995,  995,  697,  697,  697, 1052,
     1052,  708, 1052, 1052, 1052,  944,  944,  944,  944, 1052,
     1012, 1012,  946, 1013, 1013, 1013, 1013, 1014, 1015, 1052,
     1016, 1016, 1016, 1016, 1052,  968,  968,  968,  968, 1052,

      946,  831,  703,  831, 1052, 1052,  832, 1052,  833,  834,
      835,  835,  835,  835,  831,  703,  831, 1052, 1052,  832,
      998,  999,  834, 1000, 1000, 1000, 1000,  711,  703,  711,
     1052, 1052,  712, 1052,  563,  713,  949,  949,  949,  949,
     1052, 1017, 1018,  951, 1019, 1019, 1019, 1019, 1020, 1020,
     1052, 1021, 1021, 1021, 1021,  763,  973,  973,  973,  973,
     1052,  951,  711,  703,  711, 1052, 1052,  712, 1052,  563,
      564,  949,  949,  949,  949,  561,  433,  561, 1052, 1052,
      562, 1001, 1002, 1052, 1003, 1003, 1003, 1003, 1022, 1023,
     1052, 1024, 1024, 1024, 1024,  761,  753,  761, 1025, 1026,

      762, 1027, 1027, 1027, 1027,  138,  133,  138, 1052, 1052,
      139, 1052, 1052, 1052, 1028,  981,  981,  981,  981,  981,
      981,  981,  981,  699,  987,  987,  987,  987, 1052, 1052,
     1052,  700,  989,  989,  989,  989,  989,  989,  989,  989,
      435,  995,  995,  995,  995, 1052, 1052, 1052,  436,  700,
      997,  997,  997,  997,  997,  997,  997,  997, 1052,  713,
     1003, 1003, 1003, 1003, 1052, 1052,  436,  714, 1005, 1005,
     1005, 1005, 1005, 1005, 1005, 1005, 1008, 1008, 1008, 1008,
     1008, 1008, 1008, 1008, 1052,  714,  955, 1008, 1008, 1008,
     1008, 1052, 1052, 1052,  956, 1011, 1011, 1011, 1011, 1011,

     1011, 1011, 1011,  749, 1011, 1011, 1011, 1011, 1052, 1052,
     1052,  750,  956, 1013, 1013, 1013, 1013, 1013, 1013, 1013,
     1013, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016,  750,
      963, 1016, 1016, 1016, 1016, 1052, 1052, 1052,  964, 1019,
     1019, 1019, 1019, 1019, 1019, 1019, 1019,  472, 1019, 1019,
     1019, 1019, 1052, 1052, 1052,  473,  964, 1021, 1021, 1021,
     1021, 1021, 1021, 1021, 1021, 1024, 1024, 1024, 1024, 1024,
     1024, 1024, 1024,  473,  971, 1024, 1024, 1024, 1024, 1052,
     1052, 1052,  972, 1027, 1027, 1027, 1027, 1027, 1027, 1027,
     1027,  763, 1027, 1027, 1027, 1027,  138,  133, 1032,  764,

      972,  139,  138,  133,  138, 1052, 1052,  139,  138,  133,
      138, 1052, 1052,  139,  138,  133,  138,  764, 1052,  139,
      138,  133,  138, 1052, 1052,  139, 1044, 1045, 1044, 1052,
     1052, 1046, 1042, 1044, 1045, 1044, 1052, 1052, 1046, 1044,
     1045, 1044, 1052, 1052, 1046, 1036, 1047, 1052, 1047, 1041,
     1039, 1048, 1044, 1045, 1044, 1052, 1047, 1046, 1047, 1052,
     1050, 1048, 1050, 1052, 1050, 1051, 1050, 1052, 1050, 1051,
     1050, 1052, 1050, 1051, 1050, 1052, 1052, 1051,   46,   46,
       46,   46,   46,   46,   46,   46,   74,   74,   74,   74,
       74,   74,   74,   74,  102,  102,  102,  102,  102,  102,

      102,  102,  118,  118,  118,  118,  118,  118,  118,  118,
      123,  123,  123,  123,  123,  123,  123,  123,  137,  137,
      137,  137,  137,  137,  137,  137,  141, 1052, 1052,  141,
      169, 1052, 1052,  169, 1052,  169,  169,  169,  170,  170,
      170,  170,  170,  170,  170,  170,  213, 1052, 1052,  213,
     1052,  213,  213,  215,  215,  215,  215,  215,  215,  215,
      215,  246,  246, 1052,  246, 1052,  246,  246,  246,  249,
      249,  249,  249,  249,  249,  249,  249,  253,  253,  253,
      253, 1052,  253,  253,  253,  259,  259,  259,  259,  259,
      259,  259,  259,  265,  265, 1052,  265,  265,  265,  265,

      265,  289,  289,  289,  289,  289,  289,  289,  289,  300,
      300,  300,  300,  300,  300,  300,  300,  311,  311,  311,
      311,  311,  311,  311,  311,  322,  322,  322,  322,  322,
      322,  322,  322,  333,  333,  333,  333,  333,  333,  333,
      333,  339,  339, 1052, 1052,  339,  339,  346,  346,  346,
      346,  346,  346,  346,  346,  357,  357,  357,  357,  357,
      357,  357,  357,  368,  368,  368,  368,  368,  368,  368,
      368,  379,  379,  379,  379,  379,  379,  379,  379,  246,
      246, 1052,  246, 1052,  246,  246,  246,  249,  249,  249,
      249,  249,  249,  249,  249,  253,  253,  253,  253, 1052,

      253,  253,  253,  259,  259,  259,  259,  259,  259,  259,
      259,  387,  387,  387,  387,  387,  387,  387,  387,  265,
      265, 1052,  265,  265,  265,  265,  265,  137,  137,  137,
      137,  137,  137,  137,  137,  141, 1052, 1052,  141,  289,
      289,  289,  289,  289,  289,  289,  289,  300,  300,  300,
      300,  300,  300,  300,  300,  311,  311,  311,  311,  311,
      311,  311,  311,  322,  322,  322,  322,  322,  322,  322,
      322,  333,  333,  333,  333,  333,  333,  333,  333,  339,
      339, 1052, 1052,  339,  339,  346,  346,  346,  346,  346,
      346,  346,  346,  357,  357,  357,  357,  357,  357,  357,

      357,  368,  368,  368,  368,  368,  368,  368,  368,  379,
      379,  379,  379,  379,  379,  379,  379,  491,  491,  491,
      491,  491,  491,  491,  491,  506,  506,  506,  506,  506,
      506,  506,  506,  518,  518,  518,  518,  518,  518,  518,
      518,  311,  311,  311,  311,  311,  311,  311,  311,  533,
      533,  533,  533,  533,  533,  533,  533,  545,  545,  545,
      545,  545,  545,  545,  545,  322,  322,  322,  322,  322,
      322,  322,  322,  560,  560,  560,  560,  560,  560,  560,
      560,  333,  333,  333,  333,  333,  333,  333,  333,  346,
      346,  346,  346,  346,  346,  346,  346,  581,  581,  581,

      581,  581,  581,  581,  581,  357,  357,  357,  357,  357,
      357,  357,  357,  596,  596,  596,  596,  596,  596,  596,
      596,  608,  608,  608,  608,  608,  608,  608,  608,  368,
      368,  368,  368,  368,  368,  368,  368,  623,  623,  623,
      623,  623,  623,  623,  623,  635,  635,  635,  635,  635,
      635,  635,  635,  379,  379,  379,  379,  379,  379,  379,
      379,  650,  650,  650,  650,  650,  650,  650,  650,  137,
      137,  137,  137,  137,  137,  137,  137,  141, 1052, 1052,
      141,  289,  289,  289,  289,  289,  289,  289,  289,  491,
      491,  491,  491,  491,  491,  491,  491,  300,  300,  300,

      300,  300,  300,  300,  300,  506,  506,  506,  506,  506,
      506,  506,  506,  518,  518,  518,  518,  518,  518,  518,
      518,  311,  311,  311,  311,  311,  311,  311,  311,  533,
      533,  533,  533,  533,  533,  533,  533,  545,  545,  545,
      545,  545,  545,  545,  545,  322,  322,  322,  322,  322,
      322,  322,  322,  560,  560,  560,  560,  560,  560,  560,
      560,  346,  346,  346,  346,  346,  346,  346,  346,  581,
      581,  581,  581,  581,  581,  581,  581,  357,  357,  357,
      357,  357,  357,  357,  357,  596,  596,  596,  596,  596,
      596,  596,  596,  608,  608,  608,  608,  608,  608,  608,

      608,  368,  368,  368,  368,  368,  368,  368,  368,  623,
      623,  623,  623,  623,  623,  623,  623,  635,  635,  635,
      635,  635,  635,  635,  635,  379,  379,  379,  379,  379,
      379,  379,  379,  650,  650,  650,  650,  650,  650,  650,
      650,  137,  137,  137,  137,  137,  137,  137,  137,  141,
     1052, 1052,  141,  491,  491,  491,  491,  491,  491,  491,
      491,  300,  300,  300,  300,  300,  300,  300,  300,  506,
      506,  506,  506,  506,  506,  506,  506,  518,  518,  518,
      518,  518,  518,  518,  518,  311,  311,  311,  311,  311,
      311,  311,  311,  533,  533,  533,  533,  533,  533,  533,

      533,  800,  800,  800,  800,  800,  800,  800,  800,  545,
      545,  545,  545,  545,  545,  545,  545,  814,  814,  814,
      814,  814,  814,  814,  814,  322,  322,  322,  322,  322,
      322,  322,  322,  830,  830,  830,  830,  830,  830,  830,
      830,  560,  560,  560,  560,  560,  560,  560,  560,  581,
      581,  581,  581,  581,  581,  581,  581,  357,  357,  357,
      357,  357,  357,  357,  357,  596,  596,  596,  596,  596,
      596,  596,  596,  608,  608,  608,  608,  608,  608,  608,
      608,  368,  368,  368,  368,  368,  368,  368,  368,  623,
      623,  623,  623,  623,  623,  623,  623,  876,  876,  876,

      876,  876,  876,  876,  876,  635,  635,  635,  635,  635,
      635,  635,  635,  890,  890,  890,  890,  890,  890,  890,
      890,  379,  379,  379,  379,  379,  379,  379,  379,  906,
      906,  906,  906,  906,  906,  906,  906,  650,  650,  650,
      650,  650,  650,  650,  650,  137,  137,  137,  137,  137,
      137,  137,  137,  141, 1052, 1052,  141,  491,  491,  491,
      491,  491,  491,  491,  491,  300,  300,  300,  300,  300,
      300,  300,  300,  506,  506,  506,  506,  506,  506,  506,
      506,  518,  518,  518,  518,  518,  518,  518,  518,  311,
      311,  311,  311,  311,  311,  311,  311,  533,  533,  533,

      533,  533,  533,  533,  533,  800,  800,  800,  800,  800,
      800,  800,  800,  545,  545,  545,  545,  545,  545,  545,
      545,  814,  814,  814,  814,  814,  814,  814,  814,  322,
      322,  322,  322,  322,  322,  322,  322,  830,  830,  830,
      830,  830,  830,  830,  830,  560,  560,  560,  560,  560,
      560,  560,  560,  581,  581,  581,  581,  581,  581,  581,
      581,  357,  357,  357,  357,  357,  357,  357,  357,  596,
      596,  596,  596,  596,  596,  596,  596,  608,  608,  608,
      608,  608,  608,  608,  608,  368,  368,  368,  368,  368,
      368,  368,  368,  623,  623,  623,  623,  623,  623,  623,

      623,  876,  876,  876,  876,  876,  876,  876,  876,  635,
      635,  635,  635,  635,  635,  635,  635,  890,  890,  890,
      890,  890,  890,  890,  890,  379,  379,  379,  379,  379,
      379,  379,  379,  906,  906,  906,  906,  906,  906,  906,
      906,  650,  650,  650,  650,  650,  650,  650,  650,  137,
      137,  137,  137,  137,  137,  137,  137,  141, 1052, 1052,
      141,  800,  800,  800,  800,  800,  800,  800,  800,  545,
      545,  545,  545,  545,  545,  545,  545,  814,  814,  814,
      814,  814,  814,  814,  814,  322,  322,  322,  322,  322,
      322,  322,  322,  830,  830,  830,  830,  830,  830,  830,

      830,  560,  560,  560,  560,  560,  560,  560,  560, 1043,
     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1049, 1049, 1052,
     1049, 1049, 1049, 1049, 1049,   45, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052
    } ;

static const short int yy_chk[8474] =
    {   0,
        0,    1,    1,    1,    0,    0,    1,    2,    2,    2,
      982,  982,    2,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        5,    5,    5,   57,  178,    5,    6,    6,    6,   57,
       23,    6,   23,   23,   23,   23, 1134,    5,    5,   60,
       60,   92,  178,    6,    6,   24,    5,   24,   24,   24,
       24, 1110,    6,    7,    7,    7, 1097,   92,    7, 1090,

        7, 1086,    7,    7,    7,    7,   65,   65,   65,   65,
     1076,    7,    9,    9,    9,    9,    9,    9,   10,   10,
       10,   10,   10,   10,   11,   11,   11,   11,   11,   11,
       12,   12,   12,   12,   12,   12,   13,   13,   13, 1069,
       13,   13,   14,   14,   14, 1037,   14,   14,   15,   15,
       15,   15,   15,   15,   13,   67,   67,   67,   67, 1035,
       14,   16,   16,   16,   16,   16,   16,   17,   17,   17,
       17,   17,   17,   18,   18,   18,   18,   18,   18,   19,
       19,   19,   19,   19,   19,   20,   20,   20,   20,   20,
       20,   21,   21,   21,   21,   21,   21,   22,   22,   22,

       22,   22,   22,   25,  338,   25,   25,   25,   25,  983,
      983,   39,   39,   39,   25,   39,   39,   40,   40,   40,
      338,   40,   40,  571, 1034,   48,   25,   48,   25,   26,
       48,   26,   26,   26,   26,  185,   47,   47,   47,  571,
       26,   47,   39,  192,  199,   41,   41,   41,   40,   41,
       41, 1031,   26,  185,   26,   27,   27,   27,   27,   27,
       27,  192,  199,   42,   42,   42,   27,   42,   42,   49,
       49,   49, 1030,  223,   49,  479,   41,  230,   27,  479,
       27,   28,   28,   28,   28,   28,   28,  237,   51,   51,
       51,  223,   28,   51,   42,  230,  244,   49, 1029,   66,

       66,   66,   66,  979,   28,  237,   28,   29,   29,   29,
      410,   29,   29,   43,  244,   43,   43,   43,   43,   66,
       69,   69,   69,   69,   43,   29,  294,   44,  410,   44,
       44,   44,   44,  978,  294,   66,  977,   29,   44,   29,
       30,   30,   30,  351,   30,   30,   68,   68,   68,   68,
       68,  351,  294,   70,   70,   70,   70,   70,   30,  985,
      985,   70,   71,   71,   71,   71,   71,  986,  986,  351,
       30,  927,   30,   31,   31,   31,   31,   31,   31,   70,
       72,   72,   72,   72,   31,   73,   73,   73,   73,   73,
       76,   76,   76,   73,   76,   76,   31,  925,   31,   32,

       32,   32,   32,   32,   32,   78,   78,   78,   78,   78,
       32,   73,   79,   79,   79,   79,   81,   81,   81,   81,
       81,  924,   32,  770,   32,   33,   33,   33,   33,   33,
       33,   82,   82,   82,   82,  769,   33,   84,   84,   84,
       84,   84,   85,   85,   85,   85,  990,  990,   33,  767,
       33,   34,   34,   34,   34,   34,   34,   87,   87,   87,
       87,   87,   34,   88,   88,   88,   88,   90,   90,   90,
       90,  572,  991,  991,   34,  766,   34,   35,   35,   35,
       35,   35,   35,   93,   93,   93,   93,  572,   35,   94,
       94,   94,   94,   95,   95,   95,   95,  993,  993,  664,

       35,  663,   35,   36,   36,   36,   36,   36,   36,   94,
      100,  100,  100,  100,   36,   99,   99,   99,   99,   99,
      106,  106,  106,  106,  106,   94,   36,  662,   36,   37,
       37,   37,   37,   37,   37,  101,  101,  101,  101,  101,
       37,  994,  994,  101,  104,  104,  104,  661,  104,  104,
      998,  998,   37,  660,   37,   38,   38,   38,   38,   38,
       38,  101,  107,  107,  107,  107,   38,  109,  109,  109,
      109,  109,  999,  999,  104,  480,  104,  420,   38,  477,
       38,   80,   80,   80, 1001, 1001,   80, 1002, 1002,   80,
       80,   80,   80,   80,  475,  420,  400,   80,  110,  110,

      110,  110,  112,  112,  112,  112,  112,  113,  113,  113,
      113,  116,  116,  116,  116,   80,   83,   83,   83,  399,
      398,   83,  397,  430,   83,   83,   83,   83,   83,  447,
      396,  395,   83,  115,  115,  115,  115,  115,  119,  119,
      119,  430,  394,  119,  121,  121,  121,  447,  121,  121,
       83,   86,   86,   86,  457,  392,   86,  280,  279,   86,
       86,   86,   86,   86,  124,  124,  124,   86,  125,  124,
      125,  467,  457,  125,  127,  127,  127,  278,  127,  127,
      129,  129,  129,  129,  277,   86,   89,   89,   89,  467,
      276,   89,  487,  496,   89,   89,   89,   89,   89,  274,

      487,  496,   89,  273,  130,  130,  130,  130,  131,  131,
      131,  131,  132,  132,  132,  272,  271,  132,  487,  496,
       89,   91,   91,   91,  130,  270,   91,  674,  156,  511,
       91,   91,   91,   91,  133,  154,  133,  511,  153,  133,
      130,  134,  134,  134,  152,  674,  134,  135,  151,  135,
       91,  136,  135,  136,  150,  511,  136,  137,  137,  137,
      148,  147,  137,  523,  146,  145,   91,  108,  108,  108,
      143,  523,  108,  142,  128,  108,  108,  108,  108,  108,
      138,  138,  138,  108,  122,  138,  139,  139,  139,  523,
      687,  139,  140,  140,  140,  105,  103,  140,   96,   77,

       64,  108,  111,  111,  111,   63,   62,  111,  687,  538,
      111,  111,  111,  111,  111,  694,  140,  538,  111,  157,
      157,  157,  157,  159,  159,  159,  159,  161,  161,  161,
      161,   61,  577,  694,  161,  538,  111,  114,  114,  114,
      577,   59,  114,   58,   56,  114,  114,  114,  114,  114,
       55,   54,  161,  114,  162,  162,  162,  162,  577,  160,
      160,  160,  160,  160,  170,  170,  170,  160,  170,  170,
       53,  114,  117,  117,  117,   52,   45,  117,    0,    0,
      117,  117,  117,  117,  117,  160,  163,  163,  117,  163,
      163,  163,  163,  164,  164,  164,  164,  165,  165,  165,

      165,  165,  709,    0,    0,  165,  117,  166,  166,  166,
      166,    0,    0,    0,  166,  167,  167,  167,  167,    0,
      709,  168,  168,  165,  168,  168,  168,  168,    0,  171,
      171,  171,  166,  171,  171,  173,  173,  173,  173,  175,
      175,  175,  175,  175,  176,  176,  176,    0,    0,  176,
        0,  176,  176,  176,  176,  176,  176,  177,  177,  177,
        0,    0,  177,    0,  177,  177,  177,  177,  177,  177,
      179,  179,  724,  179,  179,  179,  179,  180,  180,  180,
      180,  182,  182,  182,  182,  182,  183,  183,  183,    0,
      724,  183,    0,  183,  183,  183,  183,  183,  183,  184,

      184,  184,    0,    0,  184,    0,  184,  184,  184,  184,
      184,  184,  186,  186,  737,  186,  186,  186,  186,  187,
      187,  187,  187,  189,  189,  189,  189,  189,  190,  190,
      190,    0,  737,  190,    0,  190,  190,  190,  190,  190,
      190,  191,  191,  191,    0,    0,  191,    0,  191,  191,
      191,  191,  191,  191,  193,  193,  744,  193,  193,  193,
      193,  194,  194,  194,  194,  196,  196,  196,  196,  196,
      197,  197,  197,    0,  744,  197,    0,  197,  197,  197,
      197,  197,  197,  198,  198,  198,    0,    0,  198,  759,
      198,  198,  198,  198,  198,  198,  200,  200,  586,  200,

      200,  200,  200,  202,  202,  202,  586,  759,  202,    0,
      202,    0,  202,  202,  202,  202,  203,  203,  203,    0,
        0,  203,    0,  203,  586,  203,  203,  203,  203,  204,
      204,  204,  937,    0,  204,  205,  205,  205,  205,  208,
      208,  208,  208,  209,  209,  209,  209,  209,  945,    0,
      937,  209,  210,  210,  210,  210,    0,  601,    0,  210,
      211,  211,  211,  211,    0,  601,  945,  212,  212,  209,
      212,  212,  212,  212,  215,  215,  215,  210,  215,  215,
      216,  216,  216,  601,  216,  216,  218,  218,  218,  218,
      220,  220,  220,  220,  220,  224,  224,    0,  224,  224,

      224,  224,    0,  255,  215,  255,  215,    0,  255,    0,
      216,  961,  216,  221,  221,  221,    0,    0,  221,    0,
      221,  221,  221,  221,  221,  221,  222,  222,  222,  961,
        0,  222,    0,  222,  222,  222,  222,  222,  222,  225,
      225,  225,  225,  226,  226,  226,    0,    0,  226,  969,
      613,  226,  226,  226,  226,  226,    0,    0,  613,  226,
      227,  227,  227,  227,  227,  231,  231,  969,  231,  231,
      231,  231,  232,  232,  232,  232,  613,  226,  228,  228,
      228,    0,    0,  228,    0,  228,  228,  228,  228,  228,
      228,  229,  229,  229,    0,    0,  229,    0,  229,  229,

      229,  229,  229,  229,  233,  233,  233,    0,    0,  233,
        0,  628,  233,  233,  233,  233,  233,    0,    0,  628,
      233,  234,  234,  234,  234,  234,  238,  238,    0,  238,
      238,  238,  238,  239,  239,  239,  239,  628,  233,  235,
      235,  235,    0,    0,  235,    0,  235,  235,  235,  235,
      235,  235,  236,  236,  236,    0,    0,  236,    0,  236,
      236,  236,  236,  236,  236,  240,  240,  240,    0,    0,
      240,    0,  775,  240,  240,  240,  240,  240,    0,    0,
      775,  240,  241,  241,  241,  241,  241,  245,  245,    0,
      245,  245,  245,  245,  263,  263,  263,  263,  775,  240,

      242,  242,  242,    0,    0,  242,    0,  242,  242,  242,
      242,  242,  242,  243,  243,  243,    0,    0,  243,    0,
      243,  243,  243,  243,  243,  243,  247,  247,  247,    0,
        0,  247,  248,  248,  248,    0,  248,  248,  249,  249,
      249,    0,  249,  249,  250,  250,  250,    0,  250,  250,
      251,  251,  251,    0,  251,  251,  254,  254,  254,    0,
        0,  254,  256,  256,  256,    0,  256,  256,  257,  783,
      257,    0,    0,  257,  258,  258,  258,  783,  258,  258,
      259,  259,  259,    0,  259,  259,  260,  260,  260,    0,
      260,  260,  261,  261,  261,  783,  261,  261,  265,  266,

      265,  266,    0,  265,  266,  267,    0,  267,    0,    0,
      267,  268,  268,  268,    0,    0,  268,  282,  282,  282,
      282,  283,  283,  283,  283,  284,  284,  284,  284,    0,
        0,  268,  285,  285,  285,  285,  286,  286,  286,  286,
      286,  287,  287,  287,  287,  288,  288,  288,  288,  288,
        0,    0,    0,  288,  295,  295,  295,  295,  297,  297,
      297,  297,  297,  298,  298,  298,  298,  306,  306,  306,
      306,  288,  289,  289,  289,    0,    0,  289,    0,  289,
      289,  289,  289,  289,  289,  290,  290,  290,    0,    0,
      290,    0,  290,  290,  290,  290,  290,  290,  296,  296,

      296,    0,    0,  296,    0,    0,  788,  296,  296,  296,
      296,  299,  299,  299,  788,    0,  299,  796,    0,  299,
      299,  299,  299,  299,    0,  796,  805,  299,  305,  305,
      305,    0,  788,  305,  805,    0,  305,  308,  308,  308,
      308,  308,    0,  796,  305,  299,  300,  300,  300,    0,
        0,  300,  805,  300,  300,  300,  300,  300,  300,  301,
      301,  301,  305,    0,  301,    0,  301,  301,  301,  301,
      301,  301,  307,  307,  307,    0,    0,  307,    0,    0,
        0,  307,  307,  307,  307,  309,  309,  309,  309,  310,
      310,  310,    0,    0,  310,  819,    0,  310,  310,  310,

      310,  310,  835,  819,  851,  310,  316,  316,  316,    0,
      835,  316,  851,    0,  316,  317,  317,  317,  317,    0,
        0,  819,  316,  310,  311,  311,  311,    0,  835,  311,
      851,  311,  311,  311,  311,  311,  311,  312,  312,  312,
      316,    0,  312,    0,  312,  312,  312,  312,  312,  312,
      318,  318,  318,    0,    0,  318,    0,    0,    0,  318,
      318,  318,  318,  319,  319,  319,  319,  319,  320,  320,
      320,  320,  321,  321,  321,    0,    0,  321,  859,    0,
      321,  321,  321,  321,  321,  864,  859,  872,  321,  327,
      327,  327,    0,  864,  327,  872,    0,  327,  328,  328,

      328,  328,    0,    0,  859,  327,  321,  322,  322,  322,
        0,  864,  322,  872,  322,  322,  322,  322,  322,  322,
      323,  323,  323,  327,    0,  323,    0,  323,  323,  323,
      323,  323,  323,  329,  329,  329,    0,    0,  329,    0,
        0,    0,  329,  329,  329,  329,  330,  330,  330,  330,
      331,  331,  331,  331,  332,  332,  332,  332,  339,  339,
      339,    0,    0,  339,  341,  341,  341,  341,    0,    0,
      331,  342,  342,  342,  342,  343,  343,  343,  343,  343,
      344,  344,  344,  344,    0,    0,  331,  333,  333,  333,
        0,    0,  333,    0,  333,  881,  333,  333,  333,  333,

      334,  334,  334,  881,    0,  334,    0,  334,  895,  334,
      334,  334,  334,  335,  335,  335,  895,    0,  335,    0,
      335,  881,  335,  335,  335,  335,  336,  336,  336,    0,
        0,  336,    0,  336,  895,  336,  336,  336,  336,  337,
      337,  337,    0,    0,  337,    0,  337,    0,  337,  337,
      337,  337,  345,  345,  345,  345,  345,  911,    0,    0,
      345,  352,  352,  352,  352,  911,    0,    0,  337,  354,
      354,  354,  354,  354,  355,  355,  355,  355,  345,  363,
      363,  363,  363,  911,  337,  346,  346,  346,    0,    0,
      346,    0,  346,  346,  346,  346,  346,  346,  347,  347,

      347,    0,    0,  347,    0,  347,  347,  347,  347,  347,
      347,  353,  353,  353,    0,    0,  353,  984,  984,  984,
      353,  353,  353,  353,  356,  356,  356,  984,    0,  356,
        0,    0,  356,  356,  356,  356,  356,  992,  992,  992,
      356,  362,  362,  362,    0,  984,  362,  992,    0,  362,
      365,  365,  365,  365,  365,    0,    0,  362,  356,  357,
      357,  357,    0,    0,  357,  992,  357,  357,  357,  357,
      357,  357,  358,  358,  358,  362,    0,  358,    0,  358,
      358,  358,  358,  358,  358,  364,  364,  364,    0,    0,
      364,    0,    0,    0,  364,  364,  364,  364,  366,  366,

      366,  366,  367,  367,  367,    0,    0,  367,    0,    0,
      367,  367,  367,  367,  367, 1000, 1000, 1000,  367,  373,
      373,  373,    0,    0,  373, 1000,    0,  373,  374,  374,
      374,  374,    0,    0,    0,  373,  367,  368,  368,  368,
        0,    0,  368, 1000,  368,  368,  368,  368,  368,  368,
      369,  369,  369,  373,    0,  369,    0,  369,  369,  369,
      369,  369,  369,  375,  375,  375,    0,    0,  375,    0,
        0,    0,  375,  375,  375,  375,  376,  376,  376,  376,
      376,  377,  377,  377,  377,  378,  378,  378,    0,    0,
      378,    0,    0,  378,  378,  378,  378,  378,    0,    0,

        0,  378,  384,  384,  384,    0,    0,  384,    0,    0,
      384,  385,  385,  385,  385,    0,    0,    0,  384,  378,
      379,  379,  379,    0,    0,  379,    0,  379,  379,  379,
      379,  379,  379,  380,  380,  380,  384,    0,  380,    0,
      380,  380,  380,  380,  380,  380,  386,  386,  386,    0,
        0,  386,    0,    0,    0,  386,  386,  386,  386,  387,
      387,  387,    0,  387,  387,  388,  388,  388,    0,  388,
      388,  389,  389,  389,    0,  389,  389,  391,  391,  391,
        0,    0,  391,  402,  402,  402,  402,    0,    0,    0,
      402,  403,  403,  403,  403,    0,  391,  404,  404,    0,

      404,  404,  404,  404,    0,    0,  406,  406,  402,  406,
      406,  406,  406,  407,  407,  407,  407,  407,  408,  408,
      408,    0,    0,  408,    0,  408,  408,  408,  408,  408,
      408,  409,  409,  409,    0,    0,  409,    0,  409,  409,
      409,  409,  409,  409,  411,  411,    0,  411,  411,  411,
      411,  412,  412,  412,    0,    0,  412,    0,  412,  412,
      412,  412,  412,  412,  413,  413,  413,    0,    0,  413,
        0,  413,  413,  413,  413,  413,  413,  414,  414,  414,
        0,    0,  414,    0,  414,  414,  414,  414,  414,  414,
      415,  415,  415,  416,  416,  415,  416,  416,  416,  416,

      417,  417,  417,  417,  417,  418,  418,  418,    0,    0,
      418,    0,  418,  418,  418,  418,  418,  418,  419,  419,
      419,    0,    0,  419,    0,  419,  419,  419,  419,  419,
      419,  421,  421,    0,  421,  421,  421,  421,  422,  422,
      422,    0,    0,  422,    0,  422,  422,  422,  422,  422,
      422,  423,  423,  423,    0,    0,  423,    0,  423,  423,
      423,  423,  423,  423,  424,  424,  424,    0,    0,  424,
        0,  424,  424,  424,  424,  424,  424,  425,  425,  425,
        0,    0,  425,    0,  425,  425,  425,  425,  425,  425,
      426,  426,  426,    0,    0,  426,  426,  426,    0,  426,

      426,  426,  426,  427,  427,  427,    0,    0,  427,    0,
        0,    0,  427,  427,  427,  427,    0,  431,  431,  427,
      431,  431,  431,  431,  440,  440,  440,  440,    0,  439,
      439,  439,  439,    0,    0,    0,  439,  427,  428,  428,
      428,    0,    0,  428,    0,  428,  428,  428,  428,  428,
      428,  429,  429,  429,  439,    0,  429,    0,  429,  429,
      429,  429,  429,  429,  432,  432,  432,    0,    0,  432,
        0,  432,  432,  432,  432,  432,  432,  433,  433,  433,
        0,    0,  433,    0,  433,  433,  433,  433,  433,  433,
      434,  434,  434,    0,    0,  434,    0,  434,  434,  434,

      434,  434,  434,  435,  435,  435,    0,    0,  435,    0,
      435,  435,  435,  435,  435,  435,  436,  436,  436,    0,
        0,  436,  436,  436,    0,  436,  436,  436,  436,  438,
      438,  438,    0,    0,  438,    0,  438,    0,  438,  438,
      438,  438,  438,  438,  438,  438,  438,  441,  441,    0,
      441,  441,  441,  441,  448,  448,    0,  448,  448,  448,
      448,    0,  438,  438,  438,  442,  442,  442,    0,    0,
      442,    0,  442,  442,  442,  442,  442,  442,  443,  443,
      443,    0,    0,  443,  443,  443,  443,  443,  443,  443,
      443,  444,  444,  444,    0,    0,  444,    0,    0,    0,

      444,  444,  444,  444,    0,  458,  458,  444,  458,  458,
      458,  458,  468,  468,    0,  468,  468,  468,  468,  474,
      474,  474,    0,    0,  474,  444,  445,  445,  445,    0,
        0,  445,    0,  445,  445,  445,  445,  445,  445,  446,
      446,  446,    0,    0,  446,    0,  446,  446,  446,  446,
      446,  446,  449,  449,  449,    0,    0,  449,    0,  449,
      449,  449,  449,  449,  449,  450,  450,  450,    0,    0,
      450,    0,  450,  450,  450,  450,  450,  450,  451,  451,
      451,    0,    0,  451,    0,  451,  451,  451,  451,  451,
      451,  452,  452,  452,    0,    0,  452,    0,  452,  452,

      452,  452,  452,  452,  453,  453,  453,    0,    0,  453,
      453,  453,    0,  453,  453,  453,  453,  454,  454,  454,
        0,    0,  454,    0,    0,    0,  454,  454,  454,  454,
        0,    0,    0,  454,  483,  483,  483,  483,  484,  484,
      484,  484,  488,  488,  488,  488,  488,  489,  489,  489,
      489,  454,  455,  455,  455,    0,    0,  455,    0,  455,
      455,  455,  455,  455,  455,  456,  456,  456,    0,    0,
      456,    0,  456,  456,  456,  456,  456,  456,  459,  459,
      459,    0,    0,  459,    0,  459,  459,  459,  459,  459,
      459,  460,  460,  460,    0,    0,  460,    0,  460,  460,

      460,  460,  460,  460,  461,  461,  461,    0,    0,  461,
        0,  461,  461,  461,  461,  461,  461,  462,  462,  462,
        0,    0,  462,    0,  462,  462,  462,  462,  462,  462,
      463,  463,  463,    0,    0,  463,  463,  463,    0,  463,
      463,  463,  463,  464,  464,  464,    0,    0,  464,    0,
        0,    0,  464,  464,  464,  464,    0,    0,    0,  464,
      497,  497,  497,  497,  504,  504,  504,  504,  490,  490,
      490,  490,  490,    0,    0,    0,  490,  464,  465,  465,
      465,    0,    0,  465,    0,  465,  465,  465,  465,  465,
      465,  466,  466,  466,  490,    0,  466,    0,  466,  466,

      466,  466,  466,  466,  469,  469,  469,    0,    0,  469,
        0,  469,  469,  469,  469,  469,  469,  470,  470,  470,
        0,    0,  470,    0,  470,  470,  470,  470,  470,  470,
      471,  471,  471,    0,    0,  471,    0,  471,  471,  471,
      471,  471,  471,  472,  472,  472,    0,    0,  472,    0,
      472,  472,  472,  472,  472,  472,  473,  473,  473,    0,
        0,  473,  473,  473,    0,  473,  473,  473,  473,  485,
      485,  485,    0,    0,  485,    0,  485,  485,  485,  485,
      485,  485,  486,  486,  486,    0,    0,  486,    0,  486,
      486,  486,  486,  486,  486,  491,  491,  491,    0,    0,

      491,    0,  491,  491,  491,  491,  491,  491,  492,  492,
      492,    0,    0,  492,    0,  492,  492,  492,  492,  492,
      492,  498,  498,  498,    0,    0,  498,    0,    0,    0,
      498,  498,  498,  498,  499,  499,  499,    0,    0,  499,
        0,  499,  499,  499,  499,  499,  499,  500,  500,  500,
        0,    0,  500,    0,  500,  500,  500,  500,  500,  500,
      501,  501,  501,    0,    0,  501,    0,    0,  501,  501,
      501,  501,  501,    0,    0,    0,  501,  503,  503,  503,
      503,  503,  512,  512,  512,  512,  513,  513,  513,  513,
      516,  516,  516,  516,  501,  502,  502,  502,    0,    0,

      502,    0,  502,  502,  502,  502,  502,  502,  505,  505,
      505,    0,    0,  505,    0,    0,  505,  505,  505,  505,
      505,    0,    0,    0,  505,  515,  515,  515,  515,  515,
      514,  514,  514,  514,  514,  659,  659,  659,  514,    0,
      659,    0,  505,  506,  506,  506,    0,    0,  506,    0,
      506,  506,  506,  506,  506,  506,  514,  517,  517,  517,
      517,  517,    0,  659,    0,  517,  524,  524,  524,  524,
      530,  530,  530,  530,  530,  531,  531,  531,  531,  539,
      539,  539,  539,  517,  518,  518,  518,    0,    0,  518,
        0,  518,  518,  518,  518,  518,  518,  519,  519,  519,

        0,    0,  519,    0,  519,  519,  519,  519,  519,  519,
      525,  525,  525,    0,    0,  525,    0,    0,    0,  525,
      525,  525,  525,  526,  526,  526,    0,    0,  526,    0,
      526,  526,  526,  526,  526,  526,  527,  527,  527,    0,
        0,  527,    0,  527,  527,  527,  527,  527,  527,  528,
      528,  528,    0,    0,  528,    0,    0,  528,  528,  528,
      528,  528,    0,    0,    0,  528,  540,  540,  540,  540,
      543,  543,  543,  543,  541,  541,  541,  541,  541,    0,
        0,    0,  541,  528,  529,  529,  529,    0,    0,  529,
        0,  529,  529,  529,  529,  529,  529,  532,  532,  532,

      541,    0,  532,    0,    0,  532,  532,  532,  532,  532,
        0,    0,    0,  532,  542,  542,  542,  542,  542,  551,
      551,  551,  551,  557,  557,  557,  557,  557,    0,    0,
        0,  532,  533,  533,  533,    0,    0,  533,    0,  533,
      533,  533,  533,  533,  533,  544,  544,  544,    0,    0,
      544,    0,    0,  544,  544,  544,  544,  544,    0,    0,
        0,  544,  550,  550,  550,    0,    0,  550,    0,    0,
      550,  558,  558,  558,  558,    0,    0,    0,  550,  544,
      545,  545,  545,    0,    0,  545,    0,  545,  545,  545,
      545,  545,  545,  546,  546,  546,  550,    0,  546,    0,

      546,  546,  546,  546,  546,  546,  552,  552,  552,    0,
        0,  552,    0,    0,    0,  552,  552,  552,  552,  553,
      553,  553,    0,    0,  553,    0,  553,  553,  553,  553,
      553,  553,  554,  554,  554,    0,    0,  554,    0,  554,
      554,  554,  554,  554,  554,  555,  555,  555,    0,    0,
      555,    0,    0,  555,  555,  555,  555,  555,    0,    0,
        0,  555,  565,  565,  565,    0,    0,  565,    0,    0,
      565,  566,  566,  566,  566,    0,    0,    0,  565,  555,
      556,  556,  556,    0,    0,  556,    0,  556,  556,  556,
      556,  556,  556,  559,  559,  559,  565,    0,  559,    0,

        0,  559,  559,  559,  559,  559,    0,    0,    0,  559,
      567,  567,  567,  567,  573,  573,  573,  573,  574,  574,
      574,  574,  578,  578,  578,  578,  578,  559,  560,  560,
      560,    0,    0,  560,    0,  560,  560,  560,  560,  560,
      560,  568,  568,  568,    0,    0,  568,    0,    0,  568,
      568,  568,  568,  568,    0,    0,    0,  568,  579,  579,
      579,  579,  587,  587,  587,  587,  593,  593,  593,  593,
      593,  594,  594,  594,  594,  568,  570,  570,  570,  570,
      570,  570,  570,  570,  570,  570,  570,  570,  570,  570,
      570,  570,  570,  570,  570,  570,  570,  570,  570,  570,

      570,  570,  570,  570,  570,  570,  570,  570,  570,  570,
      570,  570,  570,  570,  570,  570,  570,  570,  570,  570,
      570,  570,  570,  575,  575,  575,    0,    0,  575,    0,
      575,  575,  575,  575,  575,  575,  576,  576,  576,    0,
        0,  576,    0,  576,  576,  576,  576,  576,  576,  580,
      580,  580,  580,  580,    0,    0,    0,  580,  602,  602,
      602,  602,  603,  603,  603,  603,  604,  604,  604,  604,
      604,    0,    0,    0,  604,  580,  581,  581,  581,    0,
        0,  581,    0,  581,  581,  581,  581,  581,  581,  582,
      582,  582,  604,    0,  582,    0,  582,  582,  582,  582,

      582,  582,  588,  588,  588,    0,    0,  588,    0,    0,
        0,  588,  588,  588,  588,  589,  589,  589,    0,    0,
      589,    0,  589,  589,  589,  589,  589,  589,  590,  590,
      590,    0,    0,  590,    0,  590,  590,  590,  590,  590,
      590,  591,  591,  591,    0,    0,  591,    0,    0,  591,
      591,  591,  591,  591,    0,    0,    0,  591,  605,  605,
      605,  605,  605,  606,  606,  606,  606,  614,  614,  614,
      614,  621,  621,  621,  621,  591,  592,  592,  592,    0,
        0,  592,    0,  592,  592,  592,  592,  592,  592,  595,
      595,  595,    0,    0,  595,    0,    0,  595,  595,  595,

      595,  595,    0,    0,    0,  595,  620,  620,  620,  620,
      620,  607,  607,  607,  607,  607,  765,  765,  765,  607,
        0,  765,    0,  595,  596,  596,  596,  765,    0,  596,
        0,  596,  596,  596,  596,  596,  596,  607,  608,  608,
      608,    0,    0,  608,    0,  608,  608,  608,  608,  608,
      608,  609,  609,  609,    0,    0,  609,    0,  609,  609,
      609,  609,  609,  609,  615,  615,  615,    0,    0,  615,
        0,    0,    0,  615,  615,  615,  615,  616,  616,  616,
        0,    0,  616,    0,  616,  616,  616,  616,  616,  616,
      617,  617,  617,    0,    0,  617,    0,  617,  617,  617,

      617,  617,  617,  618,  618,  618,    0,    0,  618,    0,
        0,  618,  618,  618,  618,  618,    0,    0,    0,  618,
      629,  629,  629,  629,  630,  630,  630,  630,  631,  631,
      631,  631,  631,    0,    0,    0,  631,  618,  619,  619,
      619,    0,    0,  619,    0,  619,  619,  619,  619,  619,
      619,  622,  622,  622,  631,    0,  622,    0,    0,  622,
      622,  622,  622,  622,    0,    0,    0,  622,  632,  632,
      632,  632,  632,  633,  633,  633,  633,  641,  641,  641,
      641,  648,  648,  648,  648,  622,  623,  623,  623,    0,
        0,  623,    0,  623,  623,  623,  623,  623,  623,  634,

      634,  634,    0,    0,  634,    0,    0,  634,  634,  634,
      634,  634,    0,    0,    0,  634,  640,  640,  640,    0,
        0,  640,    0,    0,  640,  647,  647,  647,  647,  647,
        0,    0,  640,  634,  635,  635,  635,    0,    0,  635,
        0,  635,  635,  635,  635,  635,  635,  636,  636,  636,
      640,    0,  636,    0,  636,  636,  636,  636,  636,  636,
      642,  642,  642,    0,    0,  642,    0,    0,    0,  642,
      642,  642,  642,  643,  643,  643,    0,    0,  643,    0,
      643,  643,  643,  643,  643,  643,  644,  644,  644,    0,
        0,  644,    0,  644,  644,  644,  644,  644,  644,  645,

      645,  645,    0,    0,  645,    0,    0,  645,  645,  645,
      645,  645,    0,    0,    0,  645,  655,  655,  655,    0,
        0,  655,    0,    0,  655,  656,  656,  656,  656,    0,
        0,    0,  655,  645,  646,  646,  646,    0,    0,  646,
        0,  646,  646,  646,  646,  646,  646,  649,  649,  649,
      655,    0,  649,    0,    0,  649,  649,  649,  649,  649,
        0,    0,    0,  649,  657,  657,  657,  657,  666,  666,
      666,  666,    0,  665,  665,  665,  665,    0,    0,    0,
      665,  649,  650,  650,  650,    0,    0,  650,    0,  650,
      650,  650,  650,  650,  650,  658,  658,  658,  665,    0,

      658,    0,    0,  658,  658,  658,  658,  658,    0,  667,
      667,  658,  667,  667,  667,  667,  675,  675,    0,  675,
      675,  675,  675,  679,  679,  679,  679,    0,    0,  658,
      668,  668,  668,    0,    0,  668,    0,  668,  668,  668,
      668,  668,  668,  669,  669,  669,    0,    0,  669,  669,
      669,  669,  669,  669,  669,  669,  670,  670,  670,    0,
        0,  670,    0,  670,  670,  670,  670,  670,  670,    0,
      680,  680,  670,  680,  680,  680,  680,  716,  716,  716,
      716,    0,  678,  678,  678,  678,    0,    0,    0,  678,
      670,  671,  671,  671,    0,    0,  671,    0,  671,  671,

      671,  671,  671,  671,  672,  672,  672,  678,    0,  672,
      672,  672,    0,  672,  672,  672,  672,  673,  673,  673,
        0,    0,  673,    0,    0,    0,  673,  673,  673,  673,
        0,  688,  688,  673,  688,  688,  688,  688,  695,  695,
        0,  695,  695,  695,  695,  705,  705,  705,  705,  705,
      705,  673,  676,  676,  676,    0,    0,  676,    0,  676,
      676,  676,  676,  676,  676,  677,  677,  677,    0,    0,
      677,  677,  677,  677,  677,  677,  677,  677,  681,  681,
      681,    0,    0,  681,    0,  681,  681,  681,  681,  681,
      681,  682,  682,  682,    0,    0,  682,  682,  682,  682,

      682,  682,  682,  682,  683,  683,  683,    0,    0,  683,
        0,  683,  683,  683,  683,  683,  683,    0,  710,  710,
      683,  710,  710,  710,  710,  729,  729,  729,  729,    0,
      715,  715,  715,  715,    0,    0,    0,  715,  683,  684,
      684,  684,    0,    0,  684,    0,  684,  684,  684,  684,
      684,  684,  685,  685,  685,  715,    0,  685,  685,  685,
        0,  685,  685,  685,  685,  686,  686,  686,    0,    0,
      686,    0,    0,    0,  686,  686,  686,  686,    0,  717,
      717,  686,  717,  717,  717,  717,  725,  725,    0,  725,
      725,  725,  725,  755,  755,  755,  755,  755,  755,  686,

      689,  689,  689,    0,    0,  689,    0,  689,  689,  689,
      689,  689,  689,  690,  690,  690,    0,    0,  690,  690,
      690,  690,  690,  690,  690,  690,  691,  691,  691,    0,
        0,  691,    0,    0,    0,  691,  691,  691,  691,    0,
      730,  730,  691,  730,  730,  730,  730,  771,  771,  771,
      771,    0,  728,  728,  728,  728,    0,    0,    0,  728,
      691,  692,  692,  692,    0,    0,  692,    0,  692,  692,
      692,  692,  692,  692,  693,  693,  693,  728,    0,  693,
        0,  693,  693,  693,  693,  693,  693,  696,  696,  696,
        0,    0,  696,    0,  696,  696,  696,  696,  696,  696,

      697,  697,  697,    0,    0,  697,    0,  697,  697,  697,
      697,  697,  697,  698,  698,  698,    0,    0,  698,    0,
      698,  698,  698,  698,  698,  698,  699,  699,  699,    0,
        0,  699,    0,  699,  699,  699,  699,  699,  699,  700,
      700,  700,    0,    0,  700,  700,  700,    0,  700,  700,
      700,  700,  701,  701,  701,    0,    0,  701,    0,  701,
      701,  701,  701,  701,  701,    0,  738,  738,  701,  738,
      738,  738,  738,  745,  745,    0,  745,  745,  745,  745,
      772,  772,  772,  772,    0,    0,  701,  702,  702,  702,
        0,    0,  702,    0,  702,  702,  702,  702,  702,  702,

      703,  703,  703,    0,    0,  703,    0,  703,  703,  703,
      703,  703,  703,  704,  704,  704,    0,    0,  704,    0,
      704,  704,  704,  704,  704,  704,  706,  706,  706,    0,
        0,  706,  706,  706,  706,  706,  706,  706,  706,  707,
      707,  707,    0,    0,  707,    0,    0,    0,  707,  707,
      707,  707,    0,  760,  760,  707,  760,  760,  760,  760,
      779,  779,  779,  779,  784,  784,  784,  784,  785,  785,
      785,  785,    0,  707,  708,  708,  708,    0,    0,  708,
        0,  708,  708,  708,  708,  708,  708,  711,  711,  711,
        0,    0,  711,    0,  711,  711,  711,  711,  711,  711,

      712,  712,  712,    0,    0,  712,    0,  712,  712,  712,
      712,  712,  712,  713,  713,  713,    0,    0,  713,    0,
      713,  713,  713,  713,  713,  713,  714,  714,  714,    0,
        0,  714,  714,  714,    0,  714,  714,  714,  714,  718,
      718,  718,    0,    0,  718,    0,  718,  718,  718,  718,
      718,  718,  719,  719,  719,    0,    0,  719,  719,  719,
      719,  719,  719,  719,  719,  720,  720,  720,    0,    0,
      720,    0,  720,  720,  720,  720,  720,  720,    0,    0,
        0,  720,  778,  778,  778,    0,    0,  778,    0,    0,
      778,  792,  792,  792,  792,    0,    0,    0,  778,  720,

      721,  721,  721,    0,    0,  721,    0,  721,  721,  721,
      721,  721,  721,  722,  722,  722,  778,    0,  722,  722,
      722,    0,  722,  722,  722,  722,  723,  723,  723,    0,
        0,  723,    0,    0,    0,  723,  723,  723,  723,    0,
        0,    0,  723,  791,  791,  791,    0,    0,  791,    0,
        0,  791,  797,  797,  797,  797,  797,    0,    0,  791,
      723,  726,  726,  726,    0,    0,  726,    0,  726,  726,
      726,  726,  726,  726,  727,  727,  727,  791,    0,  727,
      727,  727,  727,  727,  727,  727,  727,  731,  731,  731,
        0,    0,  731,    0,  731,  731,  731,  731,  731,  731,

      732,  732,  732,    0,    0,  732,  732,  732,  732,  732,
      732,  732,  732,  733,  733,  733,    0,    0,  733,    0,
      733,  733,  733,  733,  733,  733,    0,    0,    0,  733,
      798,  798,  798,  798,  806,  806,  806,  806,  799,  799,
      799,  799,  799,    0,    0,    0,  799,  733,  734,  734,
      734,    0,    0,  734,    0,  734,  734,  734,  734,  734,
      734,  735,  735,  735,  799,    0,  735,  735,  735,    0,
      735,  735,  735,  735,  736,  736,  736,    0,    0,  736,
        0,    0,    0,  736,  736,  736,  736,    0,    0,    0,
      736,  811,  811,  811,  811,  811,  812,  812,  812,  812,

      820,  820,  820,  820,  821,  821,  821,  821,  736,  739,
      739,  739,    0,    0,  739,    0,  739,  739,  739,  739,
      739,  739,  740,  740,  740,    0,    0,  740,  740,  740,
      740,  740,  740,  740,  740,  741,  741,  741,    0,    0,
      741,    0,    0,    0,  741,  741,  741,  741,    0,    0,
        0,  741,  827,  827,  827,  827,  827,    0,    0,    0,
      822,  822,  822,  822,  822,    0,    0,    0,  822,  741,
      742,  742,  742,    0,    0,  742,    0,  742,  742,  742,
      742,  742,  742,  743,  743,  743,  822,    0,  743,    0,
      743,  743,  743,  743,  743,  743,  746,  746,  746,    0,

        0,  746,    0,  746,  746,  746,  746,  746,  746,  747,
      747,  747,    0,    0,  747,    0,  747,  747,  747,  747,
      747,  747,  748,  748,  748,    0,    0,  748,    0,  748,
      748,  748,  748,  748,  748,  749,  749,  749,    0,    0,
      749,    0,  749,  749,  749,  749,  749,  749,  750,  750,
      750,    0,    0,  750,  750,  750,    0,  750,  750,  750,
      750,  751,  751,  751,    0,    0,  751,    0,  751,  751,
      751,  751,  751,  751,    0,    0,    0,  751,  828,  828,
      828,  828,  836,  836,  836,  836,  837,  837,  837,  837,
      839,  839,  839,  839,    0,  751,  752,  752,  752,    0,

        0,  752,    0,  752,  752,  752,  752,  752,  752,  753,
      753,  753,    0,    0,  753,    0,  753,  753,  753,  753,
      753,  753,  754,  754,  754,    0,    0,  754,    0,  754,
      754,  754,  754,  754,  754,  756,  756,  756,    0,    0,
      756,  756,  756,  756,  756,  756,  756,  756,  757,  757,
      757,    0,    0,  757,    0,    0,    0,  757,  757,  757,
      757,    0,    0,    0,  757,  844,  844,  844,  844,  845,
      845,  845,  845,  838,  838,  838,  838,  838,    0,    0,
        0,  838,  757,  758,  758,  758,    0,    0,  758,    0,
      758,  758,  758,  758,  758,  758,  761,  761,  761,  838,

        0,  761,    0,  761,  761,  761,  761,  761,  761,  762,
      762,  762,    0,    0,  762,    0,  762,  762,  762,  762,
      762,  762,  763,  763,  763,    0,    0,  763,    0,  763,
      763,  763,  763,  763,  763,  764,  764,  764,    0,    0,
      764,  764,  764,    0,  764,  764,  764,  764,  773,  773,
      773,    0,    0,  773,    0,  773,  773,  773,  773,  773,
      773,  774,  774,  774,    0,    0,  774,    0,  774,  774,
      774,  774,  774,  774,  776,  776,  776,    0,    0,  776,
        0,  776,  776,  776,  776,  776,  776,  777,  777,  777,
        0,    0,  777,    0,  777,  777,  777,  777,  777,  777,

      780,  780,  780,    0,    0,  780,    0,    0,    0,  780,
      780,  780,  780,  781,  781,  781,    0,    0,  781,    0,
      781,  781,  781,  781,  781,  781,  782,  782,  782,    0,
        0,  782,    0,  782,  782,  782,  782,  782,  782,  786,
      786,  786,    0,    0,  786,    0,  786,  786,  786,  786,
      786,  786,  787,  787,  787,    0,    0,  787,    0,  787,
      787,  787,  787,  787,  787,  789,  789,  789,    0,    0,
      789,    0,  789,  789,  789,  789,  789,  789,  790,  790,
      790,    0,    0,  790,    0,  790,  790,  790,  790,  790,
      790,  793,  793,  793,    0,    0,  793,    0,    0,    0,

      793,  793,  793,  793,  794,  794,  794,    0,    0,  794,
        0,  794,  794,  794,  794,  794,  794,  795,  795,  795,
        0,    0,  795,    0,  795,  795,  795,  795,  795,  795,
      800,  800,  800,    0,    0,  800,    0,  800,  800,  800,
      800,  800,  800,  801,  801,  801,    0,    0,  801,    0,
      801,  801,  801,  801,  801,  801,  807,  807,  807,    0,
        0,  807,    0,    0,    0,  807,  807,  807,  807,  808,
      808,  808,    0,    0,  808,    0,  808,  808,  808,  808,
      808,  808,  809,  809,  809,    0,    0,  809,    0,  809,
      809,  809,  809,  809,  809,  810,  810,  810,    0,    0,

      810,    0,    0,  810,  810,  810,  810,  810,    0,    0,
        0,  810,  847,  847,  847,  847,    0,  846,  846,  846,
      846,  846,  958,  958,  958,  846,    0,  958,    0,  810,
      813,  813,  813,    0,    0,  813,    0,    0,  813,  813,
      813,  813,  813,  846,    0,    0,  813,  848,  848,  848,
      848,  855,  855,  855,  855,  860,  860,  860,  860,  861,
      861,  861,  861,    0,  813,  814,  814,  814,    0,    0,
      814,    0,  814,  814,  814,  814,  814,  814,  815,  815,
      815,    0,    0,  815,    0,  815,  815,  815,  815,  815,
      815,  823,  823,  823,    0,    0,  823,    0,  823,  823,

      823,  823,  823,  823,  824,  824,  824,    0,    0,  824,
        0,  824,  824,  824,  824,  824,  824,  825,  825,  825,
        0,    0,  825,    0,    0,  825,  825,  825,  825,  825,
        0,    0,    0,  825,  854,  854,  854,    0,    0,  854,
        0,    0,  854,  868,  868,  868,  868,    0,    0,    0,
      854,  825,  826,  826,  826,    0,    0,  826,    0,  826,
      826,  826,  826,  826,  826,  829,  829,  829,  854,    0,
      829,    0,    0,  829,  829,  829,  829,  829,    0,    0,
        0,  829,  867,  867,  867,    0,    0,  867,    0,    0,
      867,  873,  873,  873,  873,  873,    0,    0,  867,  829,

      830,  830,  830,    0,    0,  830,    0,  830,  830,  830,
      830,  830,  830,  840,  840,  840,  867,    0,  840,    0,
        0,    0,  840,  840,  840,  840,  841,  841,  841,    0,
        0,  841,    0,  841,  841,  841,  841,  841,  841,  842,
      842,  842,    0,    0,  842,    0,  842,  842,  842,  842,
      842,  842,  843,  843,  843,    0,    0,  843,    0,    0,
      843,  843,  843,  843,  843,    0,    0,    0,  843,  874,
      874,  874,  874,  882,  882,  882,  882,  875,  875,  875,
      875,  875,    0,    0,    0,  875,  843,  849,  849,  849,
        0,    0,  849,    0,  849,  849,  849,  849,  849,  849,

      850,  850,  850,  875,    0,  850,    0,  850,  850,  850,
      850,  850,  850,  852,  852,  852,    0,    0,  852,    0,
      852,  852,  852,  852,  852,  852,  853,  853,  853,    0,
        0,  853,    0,  853,  853,  853,  853,  853,  853,  856,
      856,  856,    0,    0,  856,    0,    0,    0,  856,  856,
      856,  856,  857,  857,  857,    0,    0,  857,    0,  857,
      857,  857,  857,  857,  857,  858,  858,  858,    0,    0,
      858,    0,  858,  858,  858,  858,  858,  858,  862,  862,
      862,    0,    0,  862,    0,  862,  862,  862,  862,  862,
      862,  863,  863,  863,    0,    0,  863,    0,  863,  863,

      863,  863,  863,  863,  865,  865,  865,    0,    0,  865,
        0,  865,  865,  865,  865,  865,  865,  866,  866,  866,
        0,    0,  866,    0,  866,  866,  866,  866,  866,  866,
      869,  869,  869,    0,    0,  869,    0,    0,    0,  869,
      869,  869,  869,  870,  870,  870,    0,    0,  870,    0,
      870,  870,  870,  870,  870,  870,  871,  871,  871,    0,
        0,  871,    0,  871,  871,  871,  871,  871,  871,  876,
      876,  876,    0,    0,  876,    0,  876,  876,  876,  876,
      876,  876,  877,  877,  877,    0,    0,  877,    0,  877,
      877,  877,  877,  877,  877,  883,  883,  883,    0,    0,

      883,    0,    0,    0,  883,  883,  883,  883,  884,  884,
      884,    0,    0,  884,    0,  884,  884,  884,  884,  884,
      884,  885,  885,  885,    0,    0,  885,    0,  885,  885,
      885,  885,  885,  885,  886,  886,  886,    0,    0,  886,
        0,    0,  886,  886,  886,  886,  886,    0,    0,    0,
      886,  887,  887,  887,  887,  887,  888,  888,  888,  888,
      896,  896,  896,  896,  897,  897,  897,  897,  886,  889,
      889,  889,    0,    0,  889,    0,    0,  889,  889,  889,
      889,  889,    0,    0,    0,  889,  903,  903,  903,  903,
      903,    0,    0,    0,  898,  898,  898,  898,  898,    0,

        0,    0,  898,  889,  890,  890,  890,    0,    0,  890,
        0,  890,  890,  890,  890,  890,  890,  891,  891,  891,
      898,    0,  891,    0,  891,  891,  891,  891,  891,  891,
      899,  899,  899,    0,    0,  899,    0,  899,  899,  899,
      899,  899,  899,  900,  900,  900,    0,    0,  900,    0,
      900,  900,  900,  900,  900,  900,  901,  901,  901,    0,
        0,  901,    0,    0,  901,  901,  901,  901,  901,    0,
        0,    0,  901,  904,  904,  904,  904,  912,  912,  912,
      912,  913,  913,  913,  913,  915,  915,  915,  915,    0,
      901,  902,  902,  902,    0,    0,  902,    0,  902,  902,

      902,  902,  902,  902,  905,  905,  905,    0,    0,  905,
        0,    0,  905,  905,  905,  905,  905,    0,    0,    0,
      905,  920,  920,  920,  920,    0,  914,  914,  914,  914,
      914,  966,  966,  966,  914,    0,  966,    0,  905,  906,
      906,  906,    0,    0,  906,    0,  906,  906,  906,  906,
      906,  906,  914,  916,  916,  916,    0,    0,  916,    0,
        0,    0,  916,  916,  916,  916,  917,  917,  917,    0,
        0,  917,    0,  917,  917,  917,  917,  917,  917,  918,
      918,  918,    0,    0,  918,    0,  918,  918,  918,  918,
      918,  918,  919,  919,  919,    0,    0,  919,    0,    0,

      919,  919,  919,  919,  919,    0,    0,    0,  919,  921,
      921,  921,  921,  922,  922,  922,  922,  922,    0,    0,
        0,  922,  923,  923,  923,    0,  919,  923,    0,    0,
      923,  928,  928,  928,  928,    0,    0,    0,  928,  922,
      929,  929,  929,  929,  930,  930,    0,  930,  930,  930,
      930,  953,  953,  953,  953,    0,  928,  931,  931,  931,
        0,    0,  931,    0,  931,  931,  931,  931,  931,  931,
      932,  932,  932,    0,    0,  932,  932,  932,  932,  932,
      932,  932,  932,  933,  933,  933,    0,    0,  933,    0,
      933,  933,  933,  933,  933,  933,    0,  938,  938,  933,

      938,  938,  938,  938,  946,  946,    0,  946,  946,  946,
      946,  957,  957,  957,  957,  957,    0,  933,  934,  934,
      934,    0,    0,  934,    0,  934,  934,  934,  934,  934,
      934,  935,  935,  935,    0,    0,  935,  935,  935,    0,
      935,  935,  935,  935,  936,  936,  936,    0,    0,  936,
        0,    0,    0,  936,  936,  936,  936,    0,  954,  954,
      936,  954,  954,  954,  954,  960,  960,  960,  960,  960,
      952,  952,  952,  952,    0,    0,    0,  952,  936,  939,
      939,  939,    0,    0,  939,    0,  939,  939,  939,  939,
      939,  939,  940,  940,  940,  952,    0,  940,  940,  940,

      940,  940,  940,  940,  940,  941,  941,  941,    0,    0,
      941,    0,  941,  941,  941,  941,  941,  941,    0,  956,
      956,  941,  956,  956,  956,  956,  959,  959,    0,  959,
      959,  959,  959,  965,  965,  965,  965,  965,    0,  941,
      942,  942,  942,    0,    0,  942,    0,  942,  942,  942,
      942,  942,  942,  943,  943,  943,    0,    0,  943,  943,
      943,    0,  943,  943,  943,  943,  944,  944,  944,    0,
        0,  944,    0,    0,    0,  944,  944,  944,  944,    0,
      962,  962,  944,  962,  962,  962,  962,  964,  964,    0,
      964,  964,  964,  964,  968,  968,  968,  968,  968,    0,

      944,  947,  947,  947,    0,    0,  947,    0,  947,  947,
      947,  947,  947,  947,  948,  948,  948,    0,    0,  948,
      948,  948,  948,  948,  948,  948,  948,  949,  949,  949,
        0,    0,  949,    0,  949,  949,  949,  949,  949,  949,
        0,  967,  967,  949,  967,  967,  967,  967,  970,  970,
        0,  970,  970,  970,  970,  973,  973,  973,  973,  973,
        0,  949,  950,  950,  950,    0,    0,  950,    0,  950,
      950,  950,  950,  950,  950,  951,  951,  951,    0,    0,
      951,  951,  951,    0,  951,  951,  951,  951,  972,  972,
        0,  972,  972,  972,  972,  974,  974,  974,  975,  975,

      974,  975,  975,  975,  975,  976,  976,  976,    0,    0,
      976,    0,    0,    0,  976,  980,  980,  980,  980,  981,
      981,  981,  981,  987,  987,  987,  987,  987,    0,    0,
        0,  987,  988,  988,  988,  988,  989,  989,  989,  989,
      995,  995,  995,  995,  995,    0,    0,    0,  995,  987,
      996,  996,  996,  996,  997,  997,  997,  997,    0, 1003,
     1003, 1003, 1003, 1003,    0,    0,  995, 1003, 1004, 1004,
     1004, 1004, 1005, 1005, 1005, 1005, 1006, 1006, 1006, 1006,
     1007, 1007, 1007, 1007,    0, 1003, 1008, 1008, 1008, 1008,
     1008,    0,    0,    0, 1008, 1009, 1009, 1009, 1009, 1010,

     1010, 1010, 1010, 1011, 1011, 1011, 1011, 1011,    0,    0,
        0, 1011, 1008, 1012, 1012, 1012, 1012, 1013, 1013, 1013,
     1013, 1014, 1014, 1014, 1014, 1015, 1015, 1015, 1015, 1011,
     1016, 1016, 1016, 1016, 1016,    0,    0,    0, 1016, 1017,
     1017, 1017, 1017, 1018, 1018, 1018, 1018, 1019, 1019, 1019,
     1019, 1019,    0,    0,    0, 1019, 1016, 1020, 1020, 1020,
     1020, 1021, 1021, 1021, 1021, 1022, 1022, 1022, 1022, 1023,
     1023, 1023, 1023, 1019, 1024, 1024, 1024, 1024, 1024,    0,
        0,    0, 1024, 1025, 1025, 1025, 1025, 1026, 1026, 1026,
     1026, 1027, 1027, 1027, 1027, 1027, 1028, 1028, 1028, 1027,

     1024, 1028, 1032, 1032, 1032,    0,    0, 1032, 1036, 1036,
     1036,    0,    0, 1036, 1039, 1039, 1039, 1027,    0, 1039,
     1041, 1041, 1041,    0,    0, 1041, 1042, 1042, 1042,    0,
        0, 1042, 1041, 1043, 1043, 1043,    0,    0, 1043, 1044,
     1044, 1044,    0,    0, 1044, 1032, 1045,    0, 1045, 1039,
     1036, 1045, 1046, 1046, 1046,    0, 1047, 1046, 1047,    0,
     1048, 1047, 1048,    0, 1049, 1048, 1049,    0, 1050, 1049,
     1050,    0, 1051, 1050, 1051,    0,    0, 1051, 1053, 1053,
     1053, 1053, 1053, 1053, 1053, 1053, 1054, 1054, 1054, 1054,
     1054, 1054, 1054, 1054, 1055, 1055, 1055, 1055, 1055, 1055,

     1055, 1055, 1056, 1056, 1056, 1056, 1056, 1056, 1056, 1056,
     1057, 1057, 1057, 1057, 1057, 1057, 1057, 1057, 1058, 1058,
     1058, 1058, 1058, 1058, 1058, 1058, 1059,    0,    0, 1059,
     1060,    0,    0, 1060,    0, 1060, 1060, 1060, 1061, 1061,
     1061, 1061, 1061, 1061, 1061, 1061, 1062,    0,    0, 1062,
        0, 1062, 1062, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
     1063, 1064, 1064,    0, 1064,    0, 1064, 1064, 1064, 1065,
     1065, 1065, 1065, 1065, 1065, 1065, 1065, 1066, 1066, 1066,
     1066,    0, 1066, 1066, 1066, 1067, 1067, 1067, 1067, 1067,
     1067, 1067, 1067, 1068, 1068,    0, 1068, 1068, 1068, 1068,

     1068, 1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070, 1071,
     1071, 1071, 1071, 1071, 1071, 1071, 1071, 1072, 1072, 1072,
     1072, 1072, 1072, 1072, 1072, 1073, 1073, 1073, 1073, 1073,
     1073, 1073, 1073, 1074, 1074, 1074, 1074, 1074, 1074, 1074,
     1074, 1075, 1075,    0,    0, 1075, 1075, 1077, 1077, 1077,
     1077, 1077, 1077, 1077, 1077, 1078, 1078, 1078, 1078, 1078,
     1078, 1078, 1078, 1079, 1079, 1079, 1079, 1079, 1079, 1079,
     1079, 1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080, 1081,
     1081,    0, 1081,    0, 1081, 1081, 1081, 1082, 1082, 1082,
     1082, 1082, 1082, 1082, 1082, 1083, 1083, 1083, 1083,    0,

     1083, 1083, 1083, 1084, 1084, 1084, 1084, 1084, 1084, 1084,
     1084, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1085, 1087,
     1087,    0, 1087, 1087, 1087, 1087, 1087, 1088, 1088, 1088,
     1088, 1088, 1088, 1088, 1088, 1089,    0,    0, 1089, 1091,
     1091, 1091, 1091, 1091, 1091, 1091, 1091, 1092, 1092, 1092,
     1092, 1092, 1092, 1092, 1092, 1093, 1093, 1093, 1093, 1093,
     1093, 1093, 1093, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1096,
     1096,    0,    0, 1096, 1096, 1098, 1098, 1098, 1098, 1098,
     1098, 1098, 1098, 1099, 1099, 1099, 1099, 1099, 1099, 1099,

     1099, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1101,
     1101, 1101, 1101, 1101, 1101, 1101, 1101, 1102, 1102, 1102,
     1102, 1102, 1102, 1102, 1102, 1103, 1103, 1103, 1103, 1103,
     1103, 1103, 1103, 1104, 1104, 1104, 1104, 1104, 1104, 1104,
     1104, 1105, 1105, 1105, 1105, 1105, 1105, 1105, 1105, 1106,
     1106, 1106, 1106, 1106, 1106, 1106, 1106, 1107, 1107, 1107,
     1107, 1107, 1107, 1107, 1107, 1108, 1108, 1108, 1108, 1108,
     1108, 1108, 1108, 1109, 1109, 1109, 1109, 1109, 1109, 1109,
     1109, 1111, 1111, 1111, 1111, 1111, 1111, 1111, 1111, 1112,
     1112, 1112, 1112, 1112, 1112, 1112, 1112, 1113, 1113, 1113,

     1113, 1113, 1113, 1113, 1113, 1114, 1114, 1114, 1114, 1114,
     1114, 1114, 1114, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
     1115, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1117,
     1117, 1117, 1117, 1117, 1117, 1117, 1117, 1118, 1118, 1118,
     1118, 1118, 1118, 1118, 1118, 1119, 1119, 1119, 1119, 1119,
     1119, 1119, 1119, 1120, 1120, 1120, 1120, 1120, 1120, 1120,
     1120, 1121, 1121, 1121, 1121, 1121, 1121, 1121, 1121, 1122,
     1122, 1122, 1122, 1122, 1122, 1122, 1122, 1123,    0,    0,
     1123, 1124, 1124, 1124, 1124, 1124, 1124, 1124, 1124, 1125,
     1125, 1125, 1125, 1125, 1125, 1125, 1125, 1126, 1126, 1126,

     1126, 1126, 1126, 1126, 1126, 1127, 1127, 1127, 1127, 1127,
     1127, 1127, 1127, 1128, 1128, 1128, 1128, 1128, 1128, 1128,
     1128, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1129, 1130,
     1130, 1130, 1130, 1130, 1130, 1130, 1130, 1131, 1131, 1131,
     1131, 1131, 1131, 1131, 1131, 1132, 1132, 1132, 1132, 1132,
     1132, 1132, 1132, 1133, 1133, 1133, 1133, 1133, 1133, 1133,
     1133, 1135, 1135, 1135, 1135, 1135, 1135, 1135, 1135, 1136,
     1136, 1136, 1136, 1136, 1136, 1136, 1136, 1137, 1137, 1137,
     1137, 1137, 1137, 1137, 1137, 1138, 1138, 1138, 1138, 1138,
     1138, 1138, 1138, 1139, 1139, 1139, 1139, 1139, 1139, 1139,

     1139, 1140, 1140, 1140, 1140, 1140, 1140, 1140, 1140, 1141,
     1141, 1141, 1141, 1141, 1141, 1141, 1141, 1142, 1142, 1142,
     1142, 1142, 1142, 1142, 1142, 1143, 1143, 1143, 1143, 1143,
     1143, 1143, 1143, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
     1144, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1146,
        0,    0, 1146, 1147, 1147, 1147, 1147, 1147, 1147, 1147,
     1147, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1149,
     1149, 1149, 1149, 1149, 1149, 1149, 1149, 1150, 1150, 1150,
     1150, 1150, 1150, 1150, 1150, 1151, 1151, 1151, 1151, 1151,
     1151, 1151, 1151, 1152, 1152, 1152, 1152, 1152, 1152, 1152,

     1152, 1153, 1153, 1153, 1153, 1153, 1153, 1153, 1153, 1154,
     1154, 1154, 1154, 1154, 1154, 1154, 1154, 1155, 1155, 1155,
     1155, 1155, 1155, 1155, 1155, 1156, 1156, 1156, 1156, 1156,
     1156, 1156, 1156, 1157, 1157, 1157, 1157, 1157, 1157, 1157,
     1157, 1158, 1158, 1158, 1158, 1158, 1158, 1158, 1158, 1159,
     1159, 1159, 1159, 1159, 1159, 1159, 1159, 1160, 1160, 1160,
     1160, 1160, 1160, 1160, 1160, 1161, 1161, 1161, 1161, 1161,
     1161, 1161, 1161, 1162, 1162, 1162, 1162, 1162, 1162, 1162,
     1162, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1163, 1164,
     1164, 1164, 1164, 1164, 1164, 1164, 1164, 1165, 1165, 1165,

     1165, 1165, 1165, 1165, 1165, 1166, 1166, 1166, 1166, 1166,
     1166, 1166, 1166, 1167, 1167, 1167, 1167, 1167, 1167, 1167,
     1167, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1168, 1169,
     1169, 1169, 1169, 1169, 1169, 1169, 1169, 1170, 1170, 1170,
     1170, 1170, 1170, 1170, 1170, 1171, 1171, 1171, 1171, 1171,
     1171, 1171, 1171, 1172,    0,    0, 1172, 1173, 1173, 1173,
     1173, 1173, 1173, 1173, 1173, 1174, 1174, 1174, 1174, 1174,
     1174, 1174, 1174, 1175, 1175, 1175, 1175, 1175, 1175, 1175,
     1175, 1176, 1176, 1176, 1176, 1176, 1176, 1176, 1176, 1177,
     1177, 1177, 1177, 1177, 1177, 1177, 1177, 1178, 1178, 1178,

     1178, 1178, 1178, 1178, 1178, 1179, 1179, 1179, 1179, 1179,
     1179, 1179, 1179, 1180, 1180, 1180, 1180, 1180, 1180, 1180,
     1180, 1181, 1181, 1181, 1181, 1181, 1181, 1181, 1181, 1182,
     1182, 1182, 1182, 1182, 1182, 1182, 1182, 1183, 1183, 1183,
     1183, 1183, 1183, 1183, 1183, 1184, 1184, 1184, 1184, 1184,
     1184, 1184, 1184, 1185, 1185, 1185, 1185, 1185, 1185, 1185,
     1185, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1186, 1187,
     1187, 1187, 1187, 1187, 1187, 1187, 1187, 1188, 1188, 1188,
     1188, 1188, 1188, 1188, 1188, 1189, 1189, 1189, 1189, 1189,
     1189, 1189, 1189, 1190, 1190, 1190, 1190, 1190, 1190, 1190,

     1190, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1191, 1192,
     1192, 1192, 1192, 1192, 1192, 1192, 1192, 1193, 1193, 1193,
     1193, 1193, 1193, 1193, 1193, 1194, 1194, 1194, 1194, 1194,
     1194, 1194, 1194, 1195, 1195, 1195, 1195, 1195, 1195, 1195,
     1195, 1196, 1196, 1196, 1196, 1196, 1196, 1196, 1196, 1197,
     1197, 1197, 1197, 1197, 1197, 1197, 1197, 1198,    0,    0,
     1198, 1199, 1199, 1199, 1199, 1199, 1199, 1199, 1199, 1200,
     1200, 1200, 1200, 1200, 1200, 1200, 1200, 1201, 1201, 1201,
     1201, 1201, 1201, 1201, 1201, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1202, 1203, 1203, 1203, 1203, 1203, 1203, 1203,

     1203, 1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204, 1205,
     1205, 1205, 1205, 1205, 1205, 1205, 1205, 1206, 1206,    0,
     1206, 1206, 1206, 1206, 1206, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052
    } ;

static yy_state_type yy_last_accepting_state;
static char *yy_last_accepting_cpos;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
char *yytext;

#include "Parser.h"
#include "Tokens.h"

int yywrap()
{
		BEGIN INITIAL;
		return 1;
}

void CleanupParser(void)
{
			if (yy_current_buffer)
				yy_delete_buffer( yy_current_buffer );
			yy_current_buffer = NULL;
			yyin     = NULL;
			yy_init  = 1;
			yy_start = 0;
			GetParser()->Clear();
}

#define RETURN(token) \
	BEGIN PARSING_NODE; \
	GetParser()->nextFieldType = 0; \
	return (token);

	/* Static data to avoid re-creating these for every token */
static Int32       sInt32;
static Float       sFloat;
static Time        sTime;
static Vec2        sVec2;
static Vec3        sVec3;
static Color       sColor;
static Rot         sRot;
static Image       sImage;
static String      sString;
static Int32Array  sInt32Array;
static FloatArray  sFloatArray;
static Vec2Array   sVec2Array;
static Vec3Array   sVec3Array;
static ColorArray  sColorArray;
static RotArray    sRotArray;
static StringArray sStringArray;

	/* Grab a single data item */
#define GRABSINGLE(mem, type, val) \
	ASSERT(!yylval.stringVal); \
	(mem) = &s##type; \
	*(mem) = (val);

	/* Grab a single string */
#define GRABSINGLESTRING(mem, type, val) \
	(mem) = strdup(val);

	/* Grab a single vector, color or rotation */
#define GRABSINGLEVEC(mem, type, val) \
	ASSERT(!yylval.stringVal); \
	(mem) = &s##type; \
	(mem)->v = (val);

	/* Grab a single array element */
#define GRABARRAYELEMENT(mem, type, val, ret) \
	if (GetParser()->needsClear) \
		{ mem = NULL; } \
	GetParser()->needsClear = FALSE; \
	if (GetParser()->multiField) \
	{ \
		if (!(mem)) \
		{ \
			(mem) = &s##type; \
		} \
		(mem)->AddValue((val)); \
	} else \
	{ \
		(mem) = &s##type; \
		(mem)->AddValue((val)); \
		RETURN((ret)); \
	}
	
/* Parser states */
/* Types */

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifdef YY_MALLOC_DECL
YY_MALLOC_DECL
#else
#if __STDC__
#ifndef __cplusplus
#include <stdlib.h>
#endif
#else
/* Just try to get by without declaring the routines.  This will fail
 * miserably on non-ANSI systems for which sizeof(size_t) != sizeof(int)
 * or sizeof(void*) != sizeof(int).
 */
#endif
#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#define YY_READ_BUF_SIZE 8192
#endif

/* Copy whatever the last rule matched to the standard output. */

#ifndef ECHO
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO (void) fwrite( yytext, yyleng, 1, yyout )
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
	if ( yy_current_buffer->yy_is_interactive ) \
		{ \
		int c = getc( yyin ); \
		result = c == EOF ? 0 : 1; \
		buf[0] = (char) c; \
		} \
	else if ( ((result = fread( buf, 1, max_size, yyin )) == 0) \
		  && ferror( yyin ) ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );
#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
#endif

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL int yylex YY_PROTO(( void ))
#endif

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

YY_DECL
	{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;




  /* enter a new state based on the next field type */
		switch (GetParser()->nextFieldType)
		{
      case SFBOOL:     BEGIN SEARCH_BOOL;      break;
      case SFINT32:    BEGIN SEARCH_INT32;     break;
      case SFFLOAT:    BEGIN SEARCH_FLOAT;     break;
      case SFTIME:     BEGIN SEARCH_TIME;      break;
      case SFSTRING:   BEGIN SEARCH_STRING;    break;
      case SFVEC2F:    BEGIN SEARCH_VEC2;      break;
      case SFVEC3F:    BEGIN SEARCH_VEC3;      break;
      case SFCOLOR:    BEGIN SEARCH_COLOR;     break;
      case SFROTATION: BEGIN SEARCH_ROTATION;  break;
      case SFIMAGE:    BEGIN SEARCH_IMAGE;     break;

      case MFINT32:    BEGIN SEARCH_MINT32;    break;
      case MFFLOAT:    BEGIN SEARCH_MFLOAT;    break;
      case MFSTRING:   BEGIN SEARCH_MSTRING;   yylval.stringArray = NULL; break;
      case MFVEC2F:    BEGIN SEARCH_MVEC2;     break;
      case MFVEC3F:    BEGIN SEARCH_MVEC3;     break;
      case MFCOLOR:    BEGIN SEARCH_MCOLOR;    break;
      case MFROTATION: BEGIN SEARCH_MROTATION; break;

      case SFNODE:     GetParser()->nextFieldType = 0;     return SFNODE;
      case MFNODE:     GetParser()->nextFieldType = 0;     return MFNODE;
      
      case 0:          break;
      default:         GetParser()->Error("bad field type"); break;
    }



	if ( yy_init )
		{
#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! yy_start )
			yy_start = 1;	/* first start state */

		if ( ! yyin )
			yyin = stdin;

		if ( ! yyout )
			yyout = stdout;

		if ( yy_current_buffer )
			yy_init_buffer( yy_current_buffer, yyin );
		else
			yy_current_buffer =
				yy_create_buffer( yyin, YY_BUF_SIZE );

		yy_load_buffer_state();

		yy_init = 0;
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
		yy_cp = yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = yy_start;
yy_match:
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			if ( yy_accept[yy_current_state] )
				{
				yy_last_accepting_state = yy_current_state;
				yy_last_accepting_cpos = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 1053 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 8426 );

yy_find_action:
		yy_act = yy_accept[yy_current_state];

		YY_DO_BEFORE_ACTION;


do_action:	/* This label is used only to access EOF actions. */


		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = yy_hold_char;
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			goto yy_find_action;

case 1:
YY_USER_ACTION
{
		BEGIN PARSING_NODE;
		yylval.stringVal = NULL;
}
	YY_BREAK
case 2:
YY_USER_ACTION
{
		return PROTO;
}
	YY_BREAK
case 3:
YY_USER_ACTION
{
		return EXTERNPROTO;
}
	YY_BREAK
case 4:
YY_USER_ACTION
{
		return RESOLVEDPROTO;
}
	YY_BREAK
case 5:
YY_USER_ACTION
{
		return DEF;
}
	YY_BREAK
case 6:
YY_USER_ACTION
{
		return USE;
}
	YY_BREAK
case 7:
YY_USER_ACTION
{
		return TO;
}
	YY_BREAK
case 8:
YY_USER_ACTION
{
		return IS;
}
	YY_BREAK
case 9:
YY_USER_ACTION
{
		return ROUTE;
}
	YY_BREAK
case 10:
YY_USER_ACTION
{
		return NULLNODE;
}
	YY_BREAK
case 11:
YY_USER_ACTION
{
		return EVENTIN;
}
	YY_BREAK
case 12:
YY_USER_ACTION
{
		return EVENTOUT;
}
	YY_BREAK
case 13:
YY_USER_ACTION
{
		return FIELD;
}
	YY_BREAK
case 14:
YY_USER_ACTION
{
		return EXPOSEDFIELD;
}
	YY_BREAK
case 15:
YY_USER_ACTION
{
		GRABSINGLESTRING(yylval.stringVal, String, yytext);
		return IDENTIFIER;
}
	YY_BREAK
case 16:
YY_USER_ACTION
{
		BEGIN PARSING_NODE;
		GetParser()->nextFieldType = 0;
		yyless(0);
}
	YY_BREAK
case 17:
YY_USER_ACTION
{
		BEGIN PARSING_NODE;
		GetParser()->nextFieldType = 0;
		yyless(0);
}
	YY_BREAK
case 18:
YY_USER_ACTION
{
		if (GetParser()->multiField) 
			GetParser()->Error("second '[' encountered while parsing MF field"); 
		GetParser()->multiField = TRUE;
		GetParser()->needsClear = TRUE;
}
	YY_BREAK
case 19:
YY_USER_ACTION
{
		if (!GetParser()->multiField)
				GetParser()->Error("']' encountered while not parsing MF field"); 
		if (GetParser()->needsClear)
				yylval.stringVal = NULL;
		int fieldType = GetParser()->nextFieldType;
		GetParser()->multiField = FALSE;
		RETURN(fieldType);
}
	YY_BREAK
		/* single fields */
case 20:
YY_USER_ACTION
{
		GRABSINGLE(yylval.intVal, Int32, TRUE);
		RETURN(SFBOOL);
}
	YY_BREAK
case 21:
YY_USER_ACTION
{
		GRABSINGLE(yylval.intVal, Int32, FALSE);
		RETURN(SFBOOL);
}
	YY_BREAK
case 22:
YY_USER_ACTION
{
		GRABSINGLE(yylval.intVal, Int32, atoi(yytext));
		RETURN(SFINT32);
}
	YY_BREAK
case 23:
YY_USER_ACTION
{
		GRABSINGLE(yylval.floatVal, Float, (float)atof(yytext));
		RETURN(SFFLOAT);
}
	YY_BREAK
case 24:
YY_USER_ACTION
{
		GRABSINGLE(yylval.timeVal, Time, (float)atof(yytext));
		RETURN(SFTIME);
}
	YY_BREAK
		/* string field */
case 25:
YY_USER_ACTION
{
		yylval.stringVal = NULL;
		BEGIN PARSING_STRING;
}
	YY_BREAK
case 26:
YY_USER_ACTION
{
		GetParser()->Error("String missing open-quote");
		RETURN(SFSTRING);
}
	YY_BREAK
case 27:
YY_USER_ACTION
{
}
	YY_BREAK
case 28:
YY_USER_ACTION
{
		GRABSINGLESTRING(yylval.stringVal, String, yytext);
}
	YY_BREAK
case 29:
YY_USER_ACTION
{
		RETURN(SFSTRING);
}
	YY_BREAK
		/* image field */
case 30:
YY_USER_ACTION
{
		int w, h;
		sscanf(yytext, "%d %d %d", &w, &h);
		GetParser()->nComponentsNeeded = 1+w*h;
		GetParser()->nComponentsFound = 0;                          
		yylval.imageVal = &sImage;
		yylval.imageVal->img.m_Width = w;
		yylval.imageVal->img.m_Height = h;
		yylval.imageVal->img.m_nComponents = 0;

		BEGIN PARSING_IMAGE;
}
	YY_BREAK
case 31:
YY_USER_ACTION
{
		GetParser()->nComponentsFound++;
		int x;
		if (GetParser()->nComponentsFound==1)
		{
				sscanf(yytext, "%d", &x);
				yylval.imageVal->img.m_nComponents = x;
		} else
		{
				sscanf(yytext, "%x", &x);
				yylval.imageVal->colors.AddValue(x);
		}
		if (GetParser()->nComponentsFound == GetParser()->nComponentsNeeded)
		{
				RETURN(SFIMAGE);
		}
}
	YY_BREAK
		/* single vector fields */
case 32:
YY_USER_ACTION
{
		SFVec2f v;
		sscanf(yytext, "%f %f", &v.x, &v.y);
		GRABSINGLEVEC(yylval.vec2Val, Vec2, v);
		RETURN(SFVEC2F);
}
	YY_BREAK
case 33:
YY_USER_ACTION
{
		SFVec3f v;
		sscanf(yytext, "%f %f %f", &v.x, &v.y, &v.z);
		GRABSINGLEVEC(yylval.vec3Val, Vec3, v);
		RETURN(SFVEC3F);
}
	YY_BREAK
case 34:
YY_USER_ACTION
{
		SFColor v;
		sscanf(yytext, "%f %f %f", &v.x, &v.y, &v.z);
		GRABSINGLEVEC(yylval.colorVal, Color, v);
		RETURN(SFCOLOR);
}
	YY_BREAK
case 35:
YY_USER_ACTION
{
		SFRotation v;
		sscanf(yytext, "%f %f %f %f", &v.x, &v.y, &v.z, &v.w);
		GRABSINGLEVEC(yylval.rotVal, Rot, v);
		RETURN(SFROTATION);
}
	YY_BREAK
		/* multi fields */
case 36:
YY_USER_ACTION
{
		int v;
		sscanf(yytext, "%d", &v);
		GRABARRAYELEMENT(yylval.intArray, Int32Array, v, MFINT32);
}
	YY_BREAK
case 37:
YY_USER_ACTION
{
		float v;
		sscanf(yytext, "%f", &v);
		GRABARRAYELEMENT(yylval.floatArray, FloatArray, v, MFFLOAT);
}
	YY_BREAK
		/* multi string field */
case 38:
YY_USER_ACTION
{
		GetParser()->viewpoint = TRUE;
		if (!yylval.stringArray)
		{
				sStringArray.Clear();
				yylval.stringArray = &sStringArray;
		}
		BEGIN PARSING_MSTRING;
}
	YY_BREAK
case 39:
YY_USER_ACTION
{
		if (!yylval.stringArray)
		{
				sStringArray.Clear();
				yylval.stringArray = &sStringArray;
		}
		BEGIN PARSING_MSTRING;
}
	YY_BREAK
case 40:
YY_USER_ACTION
{
		GetParser()->Error("String missing open-quote");
		RETURN(MFSTRING);
}
	YY_BREAK
case 41:
YY_USER_ACTION
{
}
	YY_BREAK
case 42:
YY_USER_ACTION
{
		GetParser()->needsClear = FALSE;
		assert(yylval.stringArray);
		if (GetParser()->viewpoint)
		{
				char tmp[255];
				sprintf(tmp, "#%s", yytext);
				yylval.stringArray->AddValue(tmp);
				GetParser()->viewpoint = FALSE;
		} else
		{
				yylval.stringArray->AddValue(yytext);
		}
}
	YY_BREAK
case 43:
YY_USER_ACTION
{
		if (GetParser()->multiField)
		{
				BEGIN SEARCH_MSTRING;
		} else
		{
				RETURN(MFSTRING);
		}
}
	YY_BREAK
		/* Multi vector fields */
case 44:
YY_USER_ACTION
{
		SFVec2f v;
		sscanf(yytext, "%f %f", &v.x, &v.y);
		GRABARRAYELEMENT(yylval.vec2Array, Vec2Array, v, MFVEC2F);
}
	YY_BREAK
case 45:
YY_USER_ACTION
{
		SFVec3f v;
		sscanf(yytext, "%f %f %f", &v.x, &v.y, &v.z);
		GRABARRAYELEMENT(yylval.vec3Array, Vec3Array, v, MFVEC3F);
}
	YY_BREAK
case 46:
YY_USER_ACTION
{
		SFColor v;
		sscanf(yytext, "%f %f %f", &v.x, &v.y, &v.z);
		GRABARRAYELEMENT(yylval.colorArray, ColorArray, v, MFCOLOR);
}
	YY_BREAK
case 47:
YY_USER_ACTION
{
		SFRotation v;
		sscanf(yytext, "%f %f %f %f", &v.x, &v.y, &v.z, &v.w);
		GRABARRAYELEMENT(yylval.rotArray, RotArray, v, MFROTATION);
}
	YY_BREAK
case 48:
YY_USER_ACTION
;
	YY_BREAK
case 49:
YY_USER_ACTION
{
		GetParser()->curLine++;
}
	YY_BREAK
case 50:
YY_USER_ACTION
{
		return yytext[0];
}
	YY_BREAK
case 51:
YY_USER_ACTION
ECHO;
	YY_BREAK
case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(PARSING_NODE):
case YY_STATE_EOF(SEARCH_BOOL):
case YY_STATE_EOF(SEARCH_INT32):
case YY_STATE_EOF(SEARCH_FLOAT):
case YY_STATE_EOF(SEARCH_TIME):
case YY_STATE_EOF(SEARCH_STRING):
case YY_STATE_EOF(SEARCH_VEC2):
case YY_STATE_EOF(SEARCH_VEC3):
case YY_STATE_EOF(SEARCH_COLOR):
case YY_STATE_EOF(SEARCH_ROTATION):
case YY_STATE_EOF(SEARCH_IMAGE):
case YY_STATE_EOF(SEARCH_MINT32):
case YY_STATE_EOF(SEARCH_MFLOAT):
case YY_STATE_EOF(SEARCH_MSTRING):
case YY_STATE_EOF(SEARCH_MVEC2):
case YY_STATE_EOF(SEARCH_MVEC3):
case YY_STATE_EOF(SEARCH_MCOLOR):
case YY_STATE_EOF(SEARCH_MROTATION):
case YY_STATE_EOF(PARSING_STRING):
case YY_STATE_EOF(PARSING_MSTRING):
case YY_STATE_EOF(PARSING_IMAGE):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = yy_cp - yytext_ptr - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = yy_hold_char;

		if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between yy_current_buffer and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			yy_n_chars = yy_current_buffer->yy_n_chars;
			yy_current_buffer->yy_input_file = yyin;
			yy_current_buffer->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( yy_c_buf_p <= &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			yy_c_buf_p = yytext_ptr + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state();

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = yytext_ptr + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++yy_c_buf_p;
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
							yy_cp = yy_c_buf_p;
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer() )
			{
			case EOB_ACT_END_OF_FILE:
				{
				yy_did_buffer_switch_on_eof = 0;

				if ( yywrap() )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					yy_c_buf_p = yytext_ptr + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				yy_c_buf_p =
					yytext_ptr + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				yy_c_buf_p =
				&yy_current_buffer->yy_ch_buf[yy_n_chars];

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of yylex */


/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */

static int yy_get_next_buffer()
	{
	register char *dest = yy_current_buffer->yy_ch_buf;
	register char *source = yytext_ptr - 1; /* copy prev. char, too */
	register int number_to_move, i;
	int ret_val;

	if ( yy_c_buf_p > &yy_current_buffer->yy_ch_buf[yy_n_chars + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( yy_current_buffer->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( yy_c_buf_p - yytext_ptr - YY_MORE_ADJ == 1 )
			{
			/* We matched a singled characater, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = yy_c_buf_p - yytext_ptr;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		yy_n_chars = 0;

	else
		{
		int num_to_read =
			yy_current_buffer->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */
#ifdef YY_USES_REJECT
			YY_FATAL_ERROR(
"input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
#else

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = yy_current_buffer;

			int yy_c_buf_p_offset = yy_c_buf_p - b->yy_ch_buf;

			b->yy_buf_size *= 2;
			b->yy_ch_buf = (char *)
				yy_flex_realloc( (void *) b->yy_ch_buf,
						 b->yy_buf_size );

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = yy_current_buffer->yy_buf_size -
						number_to_move - 1;
#endif
			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
			yy_n_chars, num_to_read );
		}

	if ( yy_n_chars == 0 )
		{
		if ( number_to_move - YY_MORE_ADJ == 1 )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			yy_current_buffer->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	yy_n_chars += number_to_move;
	yy_current_buffer->yy_ch_buf[yy_n_chars] = YY_END_OF_BUFFER_CHAR;
	yy_current_buffer->yy_ch_buf[yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;

	/* yytext begins at the second character in yy_ch_buf; the first
	 * character is the one which preceded it before reading in the latest
	 * buffer; it needs to be kept around in case it's a newline, so
	 * yy_get_previous_state() will have with '^' rules active.
	 */

	yytext_ptr = &yy_current_buffer->yy_ch_buf[1];

	return ret_val;
	}


/* yy_get_previous_state - get the state just before the EOB char was reached */

static yy_state_type yy_get_previous_state()
	{
	register yy_state_type yy_current_state;
	register char *yy_cp;

	yy_current_state = yy_start;

	for ( yy_cp = yytext_ptr + YY_MORE_ADJ; yy_cp < yy_c_buf_p; ++yy_cp )
		{
		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			yy_last_accepting_state = yy_current_state;
			yy_last_accepting_cpos = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 1053 )
				yy_c = yy_meta[(unsigned int) yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
		}

	return yy_current_state;
	}


/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */

#ifdef YY_USE_PROTOS
static yy_state_type yy_try_NUL_trans( yy_state_type yy_current_state )
#else
static yy_state_type yy_try_NUL_trans( yy_current_state )
yy_state_type yy_current_state;
#endif
	{
	register int yy_is_jam;
	register char *yy_cp = yy_c_buf_p;

	register YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		yy_last_accepting_state = yy_current_state;
		yy_last_accepting_cpos = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 1053 )
			yy_c = yy_meta[(unsigned int) yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
	yy_is_jam = (yy_current_state == 1052);

	return yy_is_jam ? 0 : yy_current_state;
	}


#ifdef YY_USE_PROTOS
static void yyunput( int c, register char *yy_bp )
#else
static void yyunput( c, yy_bp )
int c;
register char *yy_bp;
#endif
	{
	register char *yy_cp = yy_c_buf_p;

	/* undo effects of setting up yytext */
	*yy_cp = yy_hold_char;

	if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = yy_n_chars + 2;
		register char *dest = &yy_current_buffer->yy_ch_buf[
					yy_current_buffer->yy_buf_size + 2];
		register char *source =
				&yy_current_buffer->yy_ch_buf[number_to_move];

		while ( source > yy_current_buffer->yy_ch_buf )
			*--dest = *--source;

		yy_cp += dest - source;
		yy_bp += dest - source;
		yy_n_chars = yy_current_buffer->yy_buf_size;

		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	if ( yy_cp > yy_bp && yy_cp[-1] == '\n' )
		yy_cp[-2] = '\n';

	*--yy_cp = (char) c;


	/* Note: the formal parameter *must* be called "yy_bp" for this
	 * macro to now work correctly.
	 */
	YY_DO_BEFORE_ACTION; /* set up yytext again */
	}


#ifdef __cplusplus
static int yyinput()
#else
static int input()
#endif
	{
	int c;

	*yy_c_buf_p = yy_hold_char;

	if ( *yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( yy_c_buf_p < &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			/* This was really a NUL. */
			*yy_c_buf_p = '\0';

		else
			{ /* need more input */
			yytext_ptr = yy_c_buf_p;
			++yy_c_buf_p;

			switch ( yy_get_next_buffer() )
				{
				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap() )
						{
						yy_c_buf_p =
						yytext_ptr + YY_MORE_ADJ;
						return EOF;
						}

					YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					yy_c_buf_p = yytext_ptr + YY_MORE_ADJ;
					break;

				case EOB_ACT_LAST_MATCH:
#ifdef __cplusplus
					YY_FATAL_ERROR(
					"unexpected last match in yyinput()" );
#else
					YY_FATAL_ERROR(
					"unexpected last match in input()" );
#endif
				}
			}
		}

	c = *(unsigned char *) yy_c_buf_p;	/* cast for 8-bit char's */
	*yy_c_buf_p = '\0';	/* preserve yytext */
	yy_hold_char = *++yy_c_buf_p;

	return c;
	}


#ifdef YY_USE_PROTOS
void yyrestart( FILE *input_file )
#else
void yyrestart( input_file )
FILE *input_file;
#endif
	{
	if ( ! yy_current_buffer )
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE );

	yy_init_buffer( yy_current_buffer, input_file );
	yy_load_buffer_state();
	}


#ifdef YY_USE_PROTOS
void yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
#else
void yy_switch_to_buffer( new_buffer )
YY_BUFFER_STATE new_buffer;
#endif
	{
	if ( yy_current_buffer == new_buffer )
		return;

	if ( yy_current_buffer )
		{
		/* Flush out information for old buffer. */
		*yy_c_buf_p = yy_hold_char;
		yy_current_buffer->yy_buf_pos = yy_c_buf_p;
		yy_current_buffer->yy_n_chars = yy_n_chars;
		}

	yy_current_buffer = new_buffer;
	yy_load_buffer_state();

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	yy_did_buffer_switch_on_eof = 1;
	}


#ifdef YY_USE_PROTOS
void yy_load_buffer_state( void )
#else
void yy_load_buffer_state()
#endif
	{
	yy_n_chars = yy_current_buffer->yy_n_chars;
	yytext_ptr = yy_c_buf_p = yy_current_buffer->yy_buf_pos;
	yyin = yy_current_buffer->yy_input_file;
	yy_hold_char = *yy_c_buf_p;
	}


#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_create_buffer( FILE *file, int size )
#else
YY_BUFFER_STATE yy_create_buffer( file, size )
FILE *file;
int size;
#endif
	{
	YY_BUFFER_STATE b;

	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );

	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yy_flex_alloc( b->yy_buf_size + 2 );

	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	yy_init_buffer( b, file );

	return b;
	}


#ifdef YY_USE_PROTOS
void yy_delete_buffer( YY_BUFFER_STATE b )
#else
void yy_delete_buffer( b )
YY_BUFFER_STATE b;
#endif
	{
	if ( b == yy_current_buffer )
		yy_current_buffer = (YY_BUFFER_STATE) 0;

	yy_flex_free( (void *) b->yy_ch_buf );
	yy_flex_free( (void *) b );
	}


#ifdef YY_USE_PROTOS
void yy_init_buffer( YY_BUFFER_STATE b, FILE *file )
#else
void yy_init_buffer( b, file )
YY_BUFFER_STATE b;
FILE *file;
#endif
	{
	b->yy_input_file = file;

	/* We put in the '\n' and start reading from [1] so that an
	 * initial match-at-newline will be true.
	 */

	b->yy_ch_buf[0] = '\n';
	b->yy_n_chars = 1;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[2] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[1];

	b->yy_is_interactive = file ? isatty( fileno(file) ) : 0;

	b->yy_fill_buffer = 1;

	b->yy_buffer_status = YY_BUFFER_NEW;
	}


#ifdef YY_USE_PROTOS
static void yy_push_state( int new_state )
#else
static void yy_push_state( new_state )
int new_state;
#endif
	{
	if ( yy_start_stack_ptr >= yy_start_stack_depth )
		{
		int new_size;

		yy_start_stack_depth += YY_START_STACK_INCR;
		new_size = yy_start_stack_depth * sizeof( int );

		if ( ! yy_start_stack )
			yy_start_stack = (int *) yy_flex_alloc( new_size );

		else
			yy_start_stack = (int *) yy_flex_realloc(
					(void *) yy_start_stack, new_size );

		if ( ! yy_start_stack )
			YY_FATAL_ERROR(
			"out of memory expanding start-condition stack" );
		}

	yy_start_stack[yy_start_stack_ptr++] = YY_START;

	BEGIN(new_state);
	}


static void yy_pop_state()
	{
	if ( --yy_start_stack_ptr < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN(yy_start_stack[yy_start_stack_ptr]);
	}


static int yy_top_state()
	{
	return yy_start_stack[yy_start_stack_ptr - 1];
	}


#ifdef YY_USE_PROTOS
static void yy_fatal_error( const char msg[] )
#else
static void yy_fatal_error( msg )
char msg[];
#endif
	{
	(void) fprintf( stderr, "%s\n", msg );
	exit( 1 );
	}



/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		yytext[yyleng] = yy_hold_char; \
		yy_c_buf_p = yytext + n - YY_MORE_ADJ; \
		yy_hold_char = *yy_c_buf_p; \
		*yy_c_buf_p = '\0'; \
		yyleng = n; \
		} \
	while ( 0 )


/* Internal utility routines. */

#ifndef yytext_ptr
#ifdef YY_USE_PROTOS
static void yy_flex_strncpy( char *s1, const char *s2, int n )
#else
static void yy_flex_strncpy( s1, s2, n )
char *s1;
const char *s2;
int n;
#endif
	{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
	}
#endif


#ifdef YY_USE_PROTOS
static void *yy_flex_alloc( unsigned int size )
#else
static void *yy_flex_alloc( size )
unsigned int size;
#endif
	{
	return (void *) malloc( size );
	}

#ifdef YY_USE_PROTOS
static void *yy_flex_realloc( void *ptr, unsigned int size )
#else
static void *yy_flex_realloc( ptr, size )
void *ptr;
unsigned int size;
#endif
	{
	return (void *) realloc( ptr, size );
	}

#ifdef YY_USE_PROTOS
static void yy_flex_free( void *ptr )
#else
static void yy_flex_free( ptr )
void *ptr;
#endif
	{
	free( ptr );
	}
